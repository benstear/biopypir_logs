---
name: BIOPYPIR
on: 
  schedule:
    - cron: '0 0 * * 0' 
  push: # remove when youre done testing workflow
    paths-ignore: 
      - 'logs/**.json' 
jobs:
  run_tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: [3.6,3.7] 
        os: [ubuntu-latest] #,windows-latest, macOS-latest]
    env:       
      PACKAGE: scedar
      OWNER: TaylorResearchLab
      tests_dir: "tests/"
      ignore_tests: None
      ignore_lint: None
    steps:
    #- name: Create cache file
    #  run: mkdir check-SHA; echo ${{ github.sha }} > github-sha.txt; cat github-sha.txt
    #===============================================#
    #- name: Check SHA
    #  id: check_sha
    #  uses: actions/cache@v1
    #  with:
    #    path: check-SHA
    #    key: check-SHA-${{ github.sha }}
    #===============================================#
    #- name: Some subsequent steps
    #  if: steps.check_sha.outputs.cache-hit != 'true'
    #  run: echo "Cache hit not found...Execute the subsequent steps" #; exit 1 # no way to exit nicely?
    #===============================================#
    - name: Dump GitHub context
      env:
        GITHUB_CONTEXT: ${{ toJson(github) }}
      run: |
        echo "$GITHUB_CONTEXT" 
    - name: Dump steps context
      env:
        STEPS_CONTEXT: ${{ toJson(steps) }}
      run: echo "$STEPS_CONTEXT"
    - name: Dump runner context
      env:
        RUNNER_CONTEXT: ${{ toJson(runner) }}
      run: echo "$RUNNER_CONTEXT"
    - name: Dump strategy context
      env:
        STRATEGY_CONTEXT: ${{ toJson(strategy) }}
      run: echo "$STRATEGY_CONTEXT"
    - name: Dump matrix context
      env:
        MATRIX_CONTEXT: ${{ toJson(matrix) }}
      run: echo "$MATRIX_CONTEXT"
    #===============================================#
    - name: checkout ${{env.PACKAGE}} repo 
      uses: actions/checkout@v2     
      with:
        repository: benstear/${{ env.PACKAGE }} # change to actual package
    #===============================================#
    - name:  cURL helper script
      run: |
        curl -L -o biopypir_utils.sh \
        "https://raw.githubusercontent.com/benstear/biopypir_logs/master/.github/workflows/scedar_helper.sh"      
        chmod +x biopypir_utils.sh  
     # "https://raw.githubusercontent.com/benstear/biopypir_logs/master/.github/workflows/${{ env.PACKAGE }}_helper.sh"      
    #===============================================#
    - name: Set Up ${{matrix.os}}-py${{matrix.python-version}}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}   
    #===============================================#
    - name: validate-license-action
      if: startsWith(matrix.os, 'ubuntu')
      uses: datreeio/validate-license-action@v1.0.0 
      with:
        args: 'MIT,ISC,BSD'
    #===============================================#
    - name: INSTALL dependencies
      run: |
        pip install --upgrade pip setuptools wheel  
        pip install --no-binary :all: nmslib
        pip install .
        pip install pylint
        pip install pytest
        pip install coverage
        pip install pytest-cov
        pip install pytest-mpl
    #===============================================#
    - name: LINT
      id: linter
      run: ./biopypir_utils.sh "LINT" 
    #===============================================#
    - name: BUILD
      id: builder
      run: ./biopypir_utils.sh  "BUILD"
    #===============================================#
    - name: PYTEST
      id: local
      run: ./biopypir_utils.sh "TEST"  
    - name: pytest 2.0
      run: |
        pytest "tests"  \
        --color=yes --cov-config .coveragerc --cov-branch  \
        --ignore=tests/test_cluster/test_mirac_large_data.py --ignore=tests/test_eda/
     # --cov=$PACKAGE
      #--mpl-generate-path=tests/baseline_images
   #===============================================#
    - name: PIP deployment test 
      uses: BSFishy/pip-action@v1
      with:
        packages: "${{ env.PACKAGE }}"
    #===============================================#
    - name: GATHER outputs # removed pytest,pip deploy and license check passing steps
      continue-on-error: true
      run: |
        ./biopypir_utils.sh "GATHER" "${{matrix.python-version}}" "${{matrix.os}}" \
        "${{steps.linter.outputs.pylint-score}}" \
        "${{steps.local.outputs.pytest_score}}" "True" "True"
   #===============================================#
    - name: UPLOAD artifact
      uses: actions/upload-artifact@v2-preview
      with:  
        name: biopypir-${{matrix.os}}-py${{matrix.python-version}}
        path: biopypir-*.json
      
  job2:
      needs: [run_tests] 
      if: always()
      runs-on: [ubuntu-latest]
      env:       
        PACKAGE: scedar
        REPO_OWNER: TaylorResearchLab
      steps:
        - name: Check-Out Repo #  checkout biopypir_logs repo, not scedar/etc.
          uses: actions/checkout@v2 
        #===============================================# 
        - name: Download artifact
          uses: actions/download-artifact@v2-preview 
          with: # version2 automatically downloads all artifacts in path
            path: parallel_runs/
        
        - name: cURL helper script
          run: |
            pwd; ls -R;
            curl -L -o biopypir_utils.sh "https://raw.githubusercontent.com/benstear/biopypir_logs/master/.github/workflows/scedar_helper.sh"      
            chmod +x biopypir_utils.sh 
        # replace w this: curl -L -o biopypir_utils.sh "https://raw.githubusercontent.com/benstear/biopypir_logs/master/.github/workflows/${{ env.PACKAGE }}_helper.sh"      
           
        #===============================================#
        - name: EVALUATE jobs
          run: ./biopypir_utils.sh "EVAL" # no need for passing repo or run id, access through helpscript
        - uses: geekyeggo/delete-artifact@v1
          with:
            name: |
              biopypir-ubuntu-latest-py3.6
              biopypir-ubuntu-latest-py3.7
              biopypir-macOS-latest-py3.6
              biopypir-macOS-latest-py3.7
              
        - name: STATS
          run: ./biopypir_utils.sh "STATS"
        - run: ls -aR
        
        - name: Add & Commit
          uses: EndBug/add-and-commit@v4.1.0
          with:
            add: logs/${{github.run_id}}.json
            message: 'Commit ${{env.PACKAGE}} workflow run # ${{github.run_number}}'
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
 

