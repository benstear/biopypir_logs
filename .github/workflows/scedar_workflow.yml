---
name: BIOPYPIR
on: 
  schedule:
    - cron: '0 0 * * 0' 
  push: # remove when youre done testing workflow
    paths-ignore: 
      - 'logs/**.json' 
      - 'biopypir_matrix.md'
      - 'utils/*'
jobs:
  run_tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: [3.6,3.7] 
        os: [ubuntu-latest] #,windows-latest, macOS-latest]
    env:       
      PACKAGE: manubot #scedar #desc  
      OWNER:  cgreene #TaylorResearchLab  #eleozzr
      test_suite:  "pytest" # None
      tests_dir:  manubot #"tests/" # None
      ignore_tests: None
      ignore_lint: None
    steps:
    - name: Create cache file
      run: mkdir check-SHA; echo ${{ github.sha }} > github-sha.txt; cat github-sha.txt
    #===============================================#
    - name: Check SHA
      id: check_sha
      uses: actions/cache@v1
      with:
        path: check-SHA
        key: check-SHA-${{ github.sha }}
    #===============================================#
    - name: Some subsequent steps
      if: steps.check_sha.outputs.cache-hit == 'true'
      run: echo "Cache hit not found...Execute the subsequent steps"; exit 1 # no way to exit nicely?
    #===============================================#
    - name: checkout ${{env.PACKAGE}} repo 
      uses: actions/checkout@v2     
      with:
        repository: benstear/${{ env.PACKAGE }} # change to actual package
    #===============================================#
    - name:  cURL helper script
      run: |
        curl -L -o biopypir_utils.sh \
        "https://raw.githubusercontent.com/benstear/biopypir_logs/master/utils/scedar_helper.sh"      
        chmod +x biopypir_utils.sh  
     # "https://raw.githubusercontent.com/benstear/biopypir_logs/master/utils/${{ env.PACKAGE }}_helper.sh"      
    #===============================================#
    - name: Set Up ${{matrix.os}}-py${{matrix.python-version}}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}   
    #===============================================#
    - name: validate-license-action
      if: startsWith(matrix.os, 'ubuntu')
      uses: datreeio/validate-license-action@v1.0.0 
      with:
        args: 'MIT, ISC, BSD'
    #===============================================#
    - name: INSTALL dependencies
      run: |
        pip install --upgrade pip setuptools wheel  
        pip install pylint
        pip install pytest
        pip install coverage
        pip install pytest-cov
        pip install pytest-mpl
        
      #pip install --no-binary :all: nmslib
      #pip install .
    #===============================================#
    - name: LINT
      id: linter
      run: ./biopypir_utils.sh "LINT" 
    #===============================================#
    - name: BUILD
      id: builder
      run: ./biopypir_utils.sh  "BUILD"
    #===============================================#
    - name: PYTEST
      id: tester
      run: ./biopypir_utils.sh "TEST"  
    
    - name: PIP deployment test 
      uses: BSFishy/pip-action@v1
      with:
        packages: "${{ env.PACKAGE }}"
    #===============================================#
    - name: GATHER outputs # removed pytest,pip deploy and license check passing steps
      continue-on-error: true
      run: |
        ./biopypir_utils.sh "GATHER" "${{matrix.python-version}}" "${{matrix.os}}" \
        "${{steps.linter.outputs.pylint-score}}" \
        "${{steps.tester.outputs.pytest_score}}" \
        "True" "True"
   #===============================================#
    - name: UPLOAD artifact
      uses: actions/upload-artifact@v2-preview
      with:  
        name: biopypir-${{matrix.os}}-py${{matrix.python-version}}
        path: biopypir-*.json
        
    - name: UPLOAD artifact
      uses: actions/upload-artifact@v2-preview
      with:  
        name: pylint-report.txt
        path: pylint-report.txt
      
  job2:
      needs: [run_tests] 
      if: always()
      runs-on: [ubuntu-latest] 
      env:    
        PACKAGE: manubot #scedar #desc
        OWNER:  cgreene #TaylorResearchLab #eleozzr
        test_suite:  "pytest"
        tests_dir: manubot #"tests/"
      steps:
        - name: Check-Out Repo #  checkout biopypir_logs repo, not scedar/etc.
          uses: actions/checkout@v2 
        - name: Set up Python ${{ matrix.python-version }}
          uses: actions/setup-python@v2
          with:
            python-version: '3.7'
        #===============================================# 
        - name: Download artifact
          uses: actions/download-artifact@v2-preview 
          with: # version2 automatically downloads all artifacts in path
            path: parallel_runs/
        #===============================================#
        - name: check for any job success, and cURL helper script
          id: check_success
          run: |    # put in helper, set flag, put if  stmnt here
            echo "::set-output name=run_status::True"
            echo "::set-env name=run_status::True"
            if [[ ! "$(ls -A parallel_runs)" ]]; then 
              echo "No runs succeded."
              echo '{ RUN_STATUS: "FAIL" }' > RUN_STATUS.json
              echo "::set-output name=run_status::False"   
            fi
            
            curl -L -o biopypir_utils.sh "https://raw.githubusercontent.com/benstear/biopypir_logs/master/utils/scedar_helper.sh"      
            chmod +x biopypir_utils.sh 
        # replace w this: curl -L -o biopypir_utils.sh "https://raw.githubusercontent.com/benstear/biopypir_logs/master/utils/${{ env.PACKAGE }}_helper.sh"      
        #===============================================#
        - name: EVALUATE TEST RESULTS
          run: |
              if [ ${{steps.check_success.outputs.run_status}} ]; then
                echo 'calling eval function'
                ./biopypir_utils.sh "EVALUATE"
              fi
       #===============================================#
        - name: DELETE ARTIFACTS
          uses: geekyeggo/delete-artifact@v1
          with:
            name: |
              biopypir-ubuntu-latest-py3.6
              biopypir-ubuntu-latest-py3.7
              biopypir-macOS-latest-py3.6
              biopypir-macOS-latest-py3.7
        #===============================================#
        - name: GET REPO STATISTICS
          run:  |
              ./biopypir_utils.sh "STATISTICS"
        #===============================================# 
        - name: CLEAN UP
          run: ./biopypir_utils.sh "CLEAN UP"
        #- run: |
        #    pip install --upgrade pip setuptools wheel 
        #    python3 -m pip install pandas numpy tabulate
        #    python3 utils/process_logs.py
       #===============================================# 
        #- run: ls -a              
        
        - name: Add & Commit 
          if: always()
          uses: EndBug/add-and-commit@v4.1.0
          with:
            add: .  #${{env.PACKAGE}}_${{github.run_id}}.json
            message: 'Commit ${{env.PACKAGE}} workflow run # ${{github.run_number}}  (${{env.biopypir_workflow_status}})'
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 


       


