---
name: BIOPYPIR
on: 
  repository_dispatch:
     types: [autorun]
     
  #schedule:
  #  - cron: '0 0 * * 0' 
  #push: # remove when youre done testing workflow
  #  paths-ignore: 
  #    - 'logs/**.json' 
  #    - 'biopypir_matrix.md'
  #    -  'utils/package_params.json'
    
jobs:
  run_tests:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: [3.6,3.7] 
        os: [ubuntu-latest] #,windows-latest, macOS-latest]
    #env:       
    #  PACKAGE: scedar  
    steps:
    - name: Create cache file
      run: mkdir check-SHA; echo ${{ github.sha }} > github-sha.txt; cat github-sha.txt
    #===============================================#
    - name: Check SHA
      id: check_sha
      uses: actions/cache@v1
      with:
        path: check-SHA
        key: check-SHA-${{ github.sha }}
    #===============================================#
    - name: Some subsequent steps
      if: steps.check_sha.outputs.cache-hit == 'true'
      run: echo "Cache hit not found...Execute the subsequent steps"; exit 1 # no way to exit nicely?
    #===============================================#
    #- name: checkout ${{env.PACKAGE}} repo 
    #  uses: actions/checkout@v2     
    #  with:
    #    repository: benstear/${{ env.PACKAGE }} # change to actual package
    #===============================================#
    - name: check github.event
      run: echo ${{ github.event }}


    #- uses: actions/checkout@v2
    #  with:
    #      ref: ${{ github.event.client_payload.PACKAGE }}
    - run: |
        echo "::set-env name=PACKAGE::${{ github.event.client-payload.PACKAGE }}"
        echo "::set-env name=OWNER::${{ github.event.client-payload.OWNER }}"
        echo "::set-env name=Owner_Repo::${{ github.event.client-payload.Owner_Repo }}"
        echo "::set-env name=test_suite::${{ github.event.client-payload.test_suite }}"
        echo "::set-env name=tests_dir::${{ github.event.client-payload.test_dir }}"
        echo "::set-env name=ignore_tests::${{ github.event.client-payload.ignore_tests }}"
        echo "::set-env name=ignore_lint::${{ github.event.client-payload.ignore_lint }}"
    #'{ "PACKAGE": "scedar" ,  "OWNER":  "TaylorResearchLab" ,  "Owner_Repo": "TaylorResearchLab/scedar", "test_suite" :  "pytest" , "tests_dir":  "tests/" , "ignore_tests": "None", "ignore_lint": "None", "python-version" :  [3.6, 3.7], "os"  : ["ubuntu-latest", "macOS-latest"] }'

    #- run: exit 1;    
        
    - name:  SET ENV 
      run: |
        curl -L -o biopypir_utils.sh "https://raw.githubusercontent.com/benstear/biopypir_logs/master/utils/scedar_helper.sh"      
        chmod +x biopypir_utils.sh  
     #   ./biopypir_utils.sh  "SET ENV"  
     #   printenv
     # "https://raw.githubusercontent.com/benstear/biopypir_logs/master/utils/${{ env.PACKAGE }}_helper.sh"      
    #===============================================#
    - name: Set Up ${{matrix.os}}-py${{matrix.python-version}}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}   
    #===============================================#
    - name: validate-license-action
      if: startsWith(matrix.os, 'ubuntu')
      uses: datreeio/validate-license-action@v1.0.0 
      with:
        args: 'MIT, ISC, BSD'
    #===============================================#
    - name: INSTALL dependencies
      run: |
        pip install --upgrade pip setuptools wheel  
        pip install pylint
        pip install pytest
        pip install coverage
        pip install pytest-cov
        pip install pytest-mpl
        
      #pip install --no-binary :all: nmslib
      #pip install .
    #===============================================#
    - name: LINT
      id: linter
      run: ./biopypir_utils.sh "LINT" 
    #===============================================#
    - name: BUILD
      id: builder
      run: ./biopypir_utils.sh  "BUILD"
    #===============================================#
    - name: PYTEST
      id: tester
      run: ./biopypir_utils.sh "TEST"  
    
    - name: PIP deployment test 
      uses: BSFishy/pip-action@v1
      with:
        packages: "${{ env.PACKAGE }}"
    #===============================================#
    - name: GATHER outputs # removed pytest,pip deploy and license check passing steps
      continue-on-error: true
      run: |
        ./biopypir_utils.sh "GATHER" "${{matrix.python-version}}" "${{matrix.os}}" \
        "${{steps.linter.outputs.pylint-score}}" \
        "${{steps.tester.outputs.pytest_score}}" \
        "True" "True"
   #===============================================#
    - name: UPLOAD artifact
      uses: actions/upload-artifact@v2-preview
      with:  
        name: biopypir-${{matrix.os}}-py${{matrix.python-version}}
        path: biopypir-*.json
        
    #- name: UPLOAD artifact
    #  uses: actions/upload-artifact@v2-preview
    #  with:  
    #    name: pylint-report.txt
    #    path: pylint-report.txt
      
  job2:
      needs: [run_tests] 
      if: always()
      runs-on: [ubuntu-latest] 
      env:    
        PACKAGE: scedar #manubot # #desc
        #OWNER:  TaylorResearchLab #cgreene # #eleozzr
        #test_suite:  "pytest"
        #tests_dir: "tests/" #manubot #
      steps:
        - name: Check-Out Repo #  checkout biopypir_logs repo, not scedar/etc.
          uses: actions/checkout@v2 
        - name: Set up Python ${{ matrix.python-version }}
          uses: actions/setup-python@v2
          with:
            python-version: '3.7'
        #===============================================# 
        - name: Download artifact
          uses: actions/download-artifact@v2-preview 
          with: # version2 automatically downloads all artifacts in path
            path: parallel_runs/
        #===============================================#
        - name: check for any job success, and cURL helper script
          run: |  
            curl -L -o biopypir_utils.sh "https://raw.githubusercontent.com/benstear/biopypir_logs/master/utils/scedar_helper.sh"      
            chmod +x biopypir_utils.sh; ./biopypir_utils.sh "SET ENV" 
        # replace w this: curl -L -o biopypir_utils.sh "https://raw.githubusercontent.com/benstear/biopypir_logs/master/utils/${{ env.PACKAGE }}_helper.sh"      
        #===============================================#
        - name: EVALUATE TEST RESULTS
          run: |
            ./biopypir_utils.sh "EVALUATE"
        #===============================================#
        - name: GET REPO STATISTICS
          run:  |
              ./biopypir_utils.sh "STATISTICS"
        #===============================================# 
        - name: CLEAN UP
          run: ./biopypir_utils.sh "CLEAN UP"
        #- run: |
        #    pip install --upgrade pip setuptools wheel 
        #    python3 -m pip install pandas numpy tabulate
        #    python3 utils/process_logs.py
       #===============================================# 
        - name: DELETE ARTIFACTS
          uses: geekyeggo/delete-artifact@v1
          with:
            name: |
              biopypir-ubuntu-latest-py3.6
              biopypir-ubuntu-latest-py3.7
              biopypir-macOS-latest-py3.6
              biopypir-macOS-latest-py3.7
       #===============================================# 
        - name: Add & Commit 
          #if: always()
          uses: EndBug/add-and-commit@v4.1.0
          with:
            add: .  #${{env.PACKAGE}}_${{github.run_id}}.json
            message: 'Commit ${{env.PACKAGE}} workflow run # ${{github.run_number}}  (${{env.biopypir_workflow_status}})'
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 


