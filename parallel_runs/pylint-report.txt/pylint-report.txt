************* Module desc
desc/__init__.py:19:0: C0305: Trailing newlines (trailing-newlines)
desc/__init__.py:1:0: C0114: Missing module docstring (missing-module-docstring)
desc/__init__.py:7:0: E0401: Unable to import 'anndata' (import-error)
desc/__init__.py:8:0: E0401: Unable to import 'scanpy.api.pp' (import-error)
************* Module desc.original.api
desc/original/api.py:24:0: C0330: Wrong continued indentation (add 1 space).
        dims=None,
        ^| (bad-continuation)
desc/original/api.py:25:0: C0330: Wrong continued indentation (add 1 space).
        alpha=1.0,
        ^| (bad-continuation)
desc/original/api.py:26:0: C0330: Wrong continued indentation (add 1 space).
        tol=0.005,
        ^| (bad-continuation)
desc/original/api.py:27:0: C0330: Wrong continued indentation (add 1 space).
        init='glorot_uniform',
        ^| (bad-continuation)
desc/original/api.py:28:0: C0330: Wrong continued indentation (add 1 space).
        n_clusters=None,
        ^| (bad-continuation)
desc/original/api.py:29:0: C0330: Wrong continued indentation (add 1 space).
        louvain_resolution=1.0,
        ^| (bad-continuation)
desc/original/api.py:30:0: C0330: Wrong continued indentation (add 1 space).
        n_neighbors=15,
        ^| (bad-continuation)
desc/original/api.py:31:0: C0330: Wrong continued indentation (add 1 space).
        pretrain_epochs=300,
        ^| (bad-continuation)
desc/original/api.py:32:0: C0330: Wrong continued indentation (add 1 space).
        batch_size=256,
        ^| (bad-continuation)
desc/original/api.py:33:0: C0330: Wrong continued indentation (add 1 space).
        activation='relu',
        ^| (bad-continuation)
desc/original/api.py:34:0: C0330: Wrong continued indentation (add 1 space).
        actinlayer1='tanh',
        ^| (bad-continuation)
desc/original/api.py:35:0: C0330: Wrong continued indentation (add 1 space).
        drop_rate_SAE=0.2,
        ^| (bad-continuation)
desc/original/api.py:36:0: C0330: Wrong continued indentation (add 1 space).
        is_stacked=True,
        ^| (bad-continuation)
desc/original/api.py:37:0: C0330: Wrong continued indentation (add 1 space).
        use_earlyStop=True,
        ^| (bad-continuation)
desc/original/api.py:38:0: C0330: Wrong continued indentation (add 1 space).
        save_dir='result_tmp',
        ^| (bad-continuation)
desc/original/api.py:39:0: C0330: Wrong continued indentation (add 1 space).
        max_iter=1000,
        ^| (bad-continuation)
desc/original/api.py:40:0: C0330: Wrong continued indentation (add 1 space).
        epochs_fit=4,
        ^| (bad-continuation)
desc/original/api.py:41:0: C0330: Wrong continued indentation (add 1 space).
        num_Cores=20,
        ^| (bad-continuation)
desc/original/api.py:42:0: C0330: Wrong continued indentation (add 1 space).
        use_GPU=True,
        ^| (bad-continuation)
desc/original/api.py:43:0: C0330: Wrong continued indentation (add 1 space).
        random_seed=201809,
        ^| (bad-continuation)
desc/original/api.py:44:0: C0330: Wrong continued indentation (add 1 space).
        verbose=True,
        ^| (bad-continuation)
desc/original/api.py:45:0: C0330: Wrong continued indentation.
):
^       || (bad-continuation)
desc/original/api.py:47:0: C0301: Line too long (119/100) (line-too-long)
desc/original/api.py:48:0: C0303: Trailing whitespace (trailing-whitespace)
desc/original/api.py:49:0: C0303: Trailing whitespace (trailing-whitespace)
desc/original/api.py:56:0: C0301: Line too long (240/100) (line-too-long)
desc/original/api.py:57:0: C0303: Trailing whitespace (trailing-whitespace)
desc/original/api.py:59:0: C0301: Line too long (188/100) (line-too-long)
desc/original/api.py:63:0: C0301: Line too long (161/100) (line-too-long)
desc/original/api.py:64:0: C0301: Line too long (161/100) (line-too-long)
desc/original/api.py:65:0: C0301: Line too long (303/100) (line-too-long)
desc/original/api.py:65:303: C0303: Trailing whitespace (trailing-whitespace)
desc/original/api.py:67:93: C0303: Trailing whitespace (trailing-whitespace)
desc/original/api.py:69:0: C0301: Line too long (106/100) (line-too-long)
desc/original/api.py:69:106: C0303: Trailing whitespace (trailing-whitespace)
desc/original/api.py:71:0: C0301: Line too long (207/100) (line-too-long)
desc/original/api.py:73:0: C0301: Line too long (122/100) (line-too-long)
desc/original/api.py:75:0: C0301: Line too long (121/100) (line-too-long)
desc/original/api.py:75:121: C0303: Trailing whitespace (trailing-whitespace)
desc/original/api.py:77:0: C0301: Line too long (119/100) (line-too-long)
desc/original/api.py:79:0: C0301: Line too long (129/100) (line-too-long)
desc/original/api.py:87:0: C0301: Line too long (179/100) (line-too-long)
desc/original/api.py:87:179: C0303: Trailing whitespace (trailing-whitespace)
desc/original/api.py:89:0: C0301: Line too long (103/100) (line-too-long)
desc/original/api.py:89:103: C0303: Trailing whitespace (trailing-whitespace)
desc/original/api.py:91:0: C0301: Line too long (129/100) (line-too-long)
desc/original/api.py:96:22: C0326: Exactly one space required after comma
    if isinstance(data,AnnData):
                      ^ (bad-whitespace)
desc/original/api.py:97:25: C0303: Trailing whitespace (trailing-whitespace)
desc/original/api.py:97:13: C0326: Exactly one space required around assignment
        adata=data.copy() 
             ^ (bad-whitespace)
desc/original/api.py:98:24: C0326: Exactly one space required after comma
    elif isinstance(data,pd.DataFrame):
                        ^ (bad-whitespace)
desc/original/api.py:99:13: C0326: Exactly one space required around assignment
        adata=sc.AnnData(data)
             ^ (bad-whitespace)
desc/original/api.py:101:9: C0326: Exactly one space required around assignment
        x=data.toarray() if issparse(data) else data
         ^ (bad-whitespace)
desc/original/api.py:102:13: C0326: Exactly one space required around assignment
        adata=sc.AnnData(x)
             ^ (bad-whitespace)
desc/original/api.py:104:33: C0303: Trailing whitespace (trailing-whitespace)
desc/original/api.py:104:12: C0326: Exactly one space required around assignment
        dims=getdims(adata.shape) 
            ^ (bad-whitespace)
desc/original/api.py:105:36: C0326: Exactly one space required after comma
    if isinstance(louvain_resolution,float) or isinstance(louvain_resolution,int):
                                    ^ (bad-whitespace)
desc/original/api.py:105:76: C0326: Exactly one space required after comma
    if isinstance(louvain_resolution,float) or isinstance(louvain_resolution,int):
                                                                            ^ (bad-whitespace)
desc/original/api.py:106:13: C0326: Exactly one space required around assignment
        adata=train_single(data=adata,
             ^ (bad-whitespace)
desc/original/api.py:107:0: C0330: Wrong continued indentation (add 15 spaces).
            dims=dims,
            ^              | (bad-continuation)
desc/original/api.py:108:0: C0330: Wrong continued indentation (add 15 spaces).
            alpha=alpha,
            ^              | (bad-continuation)
desc/original/api.py:109:0: C0330: Wrong continued indentation (add 15 spaces).
            tol=tol,
            ^              | (bad-continuation)
desc/original/api.py:110:0: C0330: Wrong continued indentation (add 15 spaces).
            init=init,
            ^              | (bad-continuation)
desc/original/api.py:111:0: C0330: Wrong continued indentation (add 15 spaces).
            n_clusters=n_clusters,
            ^              | (bad-continuation)
desc/original/api.py:112:0: C0330: Wrong continued indentation (add 15 spaces).
            louvain_resolution=float(louvain_resolution),
            ^              | (bad-continuation)
desc/original/api.py:113:0: C0330: Wrong continued indentation (add 15 spaces).
            n_neighbors=n_neighbors,
            ^              | (bad-continuation)
desc/original/api.py:114:0: C0330: Wrong continued indentation (add 15 spaces).
            pretrain_epochs=pretrain_epochs,
            ^              | (bad-continuation)
desc/original/api.py:115:0: C0330: Wrong continued indentation (add 15 spaces).
            batch_size=batch_size,
            ^              | (bad-continuation)
desc/original/api.py:116:0: C0330: Wrong continued indentation (add 15 spaces).
            activation=activation,
            ^              | (bad-continuation)
desc/original/api.py:117:0: C0330: Wrong continued indentation (add 15 spaces).
            actinlayer1=actinlayer1,
            ^              | (bad-continuation)
desc/original/api.py:118:0: C0330: Wrong continued indentation (add 15 spaces).
            drop_rate_SAE=drop_rate_SAE,
            ^              | (bad-continuation)
desc/original/api.py:119:0: C0330: Wrong continued indentation (add 15 spaces).
            is_stacked=is_stacked,
            ^              | (bad-continuation)
desc/original/api.py:120:0: C0330: Wrong continued indentation (add 15 spaces).
            use_earlyStop=use_earlyStop,
            ^              | (bad-continuation)
desc/original/api.py:121:0: C0330: Wrong continued indentation (add 15 spaces).
            save_dir=save_dir,
            ^              | (bad-continuation)
desc/original/api.py:122:0: C0330: Wrong continued indentation (add 15 spaces).
            max_iter=max_iter,
            ^              | (bad-continuation)
desc/original/api.py:123:0: C0330: Wrong continued indentation (add 15 spaces).
            epochs_fit=epochs_fit,
            ^              | (bad-continuation)
desc/original/api.py:124:0: C0330: Wrong continued indentation (add 15 spaces).
            num_Cores=num_Cores,
            ^              | (bad-continuation)
desc/original/api.py:125:0: C0330: Wrong continued indentation (add 15 spaces).
            use_GPU=use_GPU,
            ^              | (bad-continuation)
desc/original/api.py:126:0: C0330: Wrong continued indentation (add 15 spaces).
            random_seed=random_seed,
            ^              | (bad-continuation)
desc/original/api.py:127:0: C0330: Wrong continued indentation (add 15 spaces).
            verbose=verbose)
            ^              | (bad-continuation)
desc/original/api.py:129:13: C0326: Exactly one space required around assignment
        adata=train(data=adata,
             ^ (bad-whitespace)
desc/original/api.py:130:0: C0330: Wrong continued indentation (add 8 spaces).
            dims=dims,
            ^       | (bad-continuation)
desc/original/api.py:131:0: C0330: Wrong continued indentation (add 8 spaces).
            alpha=alpha,
            ^       | (bad-continuation)
desc/original/api.py:132:0: C0330: Wrong continued indentation (add 8 spaces).
            tol=tol,
            ^       | (bad-continuation)
desc/original/api.py:133:0: C0330: Wrong continued indentation (add 8 spaces).
            init=init,
            ^       | (bad-continuation)
desc/original/api.py:134:0: C0330: Wrong continued indentation (add 8 spaces).
            n_clusters=n_clusters,
            ^       | (bad-continuation)
desc/original/api.py:135:0: C0330: Wrong continued indentation (add 8 spaces).
            louvain_resolution=louvain_resolution,
            ^       | (bad-continuation)
desc/original/api.py:136:0: C0330: Wrong continued indentation (add 8 spaces).
            n_neighbors=n_neighbors,
            ^       | (bad-continuation)
desc/original/api.py:137:0: C0330: Wrong continued indentation (add 8 spaces).
            pretrain_epochs=pretrain_epochs,
            ^       | (bad-continuation)
desc/original/api.py:138:0: C0330: Wrong continued indentation (add 8 spaces).
            batch_size=batch_size,
            ^       | (bad-continuation)
desc/original/api.py:139:0: C0330: Wrong continued indentation (add 8 spaces).
            activation=activation,
            ^       | (bad-continuation)
desc/original/api.py:140:0: C0330: Wrong continued indentation (add 8 spaces).
            actinlayer1=actinlayer1,
            ^       | (bad-continuation)
desc/original/api.py:141:0: C0330: Wrong continued indentation (add 8 spaces).
            drop_rate_SAE=drop_rate_SAE,
            ^       | (bad-continuation)
desc/original/api.py:142:0: C0330: Wrong continued indentation (add 8 spaces).
            is_stacked=is_stacked,
            ^       | (bad-continuation)
desc/original/api.py:143:0: C0330: Wrong continued indentation (add 8 spaces).
            use_earlyStop=use_earlyStop,
            ^       | (bad-continuation)
desc/original/api.py:144:0: C0330: Wrong continued indentation (add 8 spaces).
            save_dir=save_dir,
            ^       | (bad-continuation)
desc/original/api.py:145:0: C0330: Wrong continued indentation (add 8 spaces).
            max_iter=max_iter,
            ^       | (bad-continuation)
desc/original/api.py:146:0: C0330: Wrong continued indentation (add 8 spaces).
            epochs_fit=epochs_fit,
            ^       | (bad-continuation)
desc/original/api.py:147:0: C0330: Wrong continued indentation (add 8 spaces).
            num_Cores=num_Cores,
            ^       | (bad-continuation)
desc/original/api.py:148:0: C0330: Wrong continued indentation (add 8 spaces).
            use_GPU=use_GPU,
            ^       | (bad-continuation)
desc/original/api.py:149:0: C0330: Wrong continued indentation (add 8 spaces).
            random_seed=random_seed,
            ^       | (bad-continuation)
desc/original/api.py:150:0: C0330: Wrong continued indentation (add 8 spaces).
            verbose=verbose)
            ^       | (bad-continuation)
desc/original/api.py:154:11: C0326: Exactly one space required around comparison
if __name__=='__main__':
           ^^ (bad-whitespace)
desc/original/api.py:156:0: C0301: Line too long (134/100) (line-too-long)
desc/original/api.py:156:78: C0326: Exactly one space required after comma
    parser = argparse.ArgumentParser(description='just for simple test api.py',formatter_class=argparse.ArgumentDefaultsHelpFormatter)
                                                                              ^ (bad-whitespace)
desc/original/api.py:160:37: C0303: Trailing whitespace (trailing-whitespace)
desc/original/api.py:160:5: C0326: Exactly one space required after comma
    x,_=load_mnist(sample_size=10000) 
     ^ (bad-whitespace)
desc/original/api.py:160:7: C0326: Exactly one space required around assignment
    x,_=load_mnist(sample_size=10000) 
       ^ (bad-whitespace)
desc/original/api.py:161:21: C0326: Exactly one space required after comma
    print('MNiST use',x.shape)
                     ^ (bad-whitespace)
desc/original/api.py:162:8: C0326: Exactly one space required around assignment
    dims=[x.shape[-1],64,32]
        ^ (bad-whitespace)
desc/original/api.py:162:21: C0326: Exactly one space required after comma
    dims=[x.shape[-1],64,32]
                     ^ (bad-whitespace)
desc/original/api.py:162:24: C0326: Exactly one space required after comma
    dims=[x.shape[-1],64,32]
                        ^ (bad-whitespace)
desc/original/api.py:163:10: C0326: Exactly one space required around assignment
    adata1=desc(x,dims,louvain_resolution=0.4,use_GPU=args.use_GPU)
          ^ (bad-whitespace)
desc/original/api.py:163:17: C0326: Exactly one space required after comma
    adata1=desc(x,dims,louvain_resolution=0.4,use_GPU=args.use_GPU)
                 ^ (bad-whitespace)
desc/original/api.py:163:22: C0326: Exactly one space required after comma
    adata1=desc(x,dims,louvain_resolution=0.4,use_GPU=args.use_GPU)
                      ^ (bad-whitespace)
desc/original/api.py:163:45: C0326: Exactly one space required after comma
    adata1=desc(x,dims,louvain_resolution=0.4,use_GPU=args.use_GPU)
                                             ^ (bad-whitespace)
desc/original/api.py:164:10: C0326: Exactly one space required around assignment
    adata2=desc(x,dims,louvain_resolution='0.4,0.6,0.8',use_GPU=args.use_GPU)
          ^ (bad-whitespace)
desc/original/api.py:164:17: C0326: Exactly one space required after comma
    adata2=desc(x,dims,louvain_resolution='0.4,0.6,0.8',use_GPU=args.use_GPU)
                 ^ (bad-whitespace)
desc/original/api.py:164:22: C0326: Exactly one space required after comma
    adata2=desc(x,dims,louvain_resolution='0.4,0.6,0.8',use_GPU=args.use_GPU)
                      ^ (bad-whitespace)
desc/original/api.py:164:55: C0326: Exactly one space required after comma
    adata2=desc(x,dims,louvain_resolution='0.4,0.6,0.8',use_GPU=args.use_GPU)
                                                       ^ (bad-whitespace)
desc/original/api.py:165:16: C0326: Exactly one space required after comma
    print(adata1,adata2)
                ^ (bad-whitespace)
desc/original/api.py:167:0: C0303: Trailing whitespace (trailing-whitespace)
desc/original/api.py:1:0: C0114: Missing module docstring (missing-module-docstring)
desc/original/api.py:2:0: E0401: Unable to import 'anndata' (import-error)
desc/original/api.py:4:0: E0401: Unable to import 'pandas' (import-error)
desc/original/api.py:7:0: E0401: Unable to import 'scanpy.api' (import-error)
desc/original/api.py:7:0: C0413: Import "import scanpy.api as sc" should be placed at the top of the module (wrong-import-position)
desc/original/api.py:8:0: E0401: Unable to import 'scipy.sparse' (import-error)
desc/original/api.py:8:0: C0413: Import "from scipy.sparse import issparse" should be placed at the top of the module (wrong-import-position)
desc/original/api.py:20:0: E0401: Unable to import 'train' (import-error)
desc/original/api.py:20:0: C0413: Import "from train import train, train_single" should be placed at the top of the module (wrong-import-position)
desc/original/api.py:21:0: E0401: Unable to import 'load_mnist' (import-error)
desc/original/api.py:21:0: C0413: Import "from load_mnist import load_mnist" should be placed at the top of the module (wrong-import-position)
desc/original/api.py:24:8: W0621: Redefining name 'dims' from outer scope (line 162) (redefined-outer-name)
desc/original/api.py:101:8: W0621: Redefining name 'x' from outer scope (line 160) (redefined-outer-name)
desc/original/api.py:23:0: C0103: Argument name "drop_rate_SAE" doesn't conform to snake_case naming style (invalid-name)
desc/original/api.py:23:0: C0103: Argument name "use_earlyStop" doesn't conform to snake_case naming style (invalid-name)
desc/original/api.py:23:0: C0103: Argument name "num_Cores" doesn't conform to snake_case naming style (invalid-name)
desc/original/api.py:23:0: C0103: Argument name "use_GPU" doesn't conform to snake_case naming style (invalid-name)
desc/original/api.py:23:0: R0913: Too many arguments (22/5) (too-many-arguments)
desc/original/api.py:23:0: R0914: Too many local variables (24/15) (too-many-locals)
desc/original/api.py:101:8: C0103: Variable name "x" doesn't conform to snake_case naming style (invalid-name)
desc/original/api.py:104:13: E0602: Undefined variable 'getdims' (undefined-variable)
desc/original/api.py:105:7: R1701: Consider merging these isinstance calls to isinstance(louvain_resolution, (float, int)) (consider-merging-isinstance)
************* Module desc.original.__main__
desc/original/__main__.py:18:9: C0326: Exactly one space required after comma
import os,sys,argparse,textwrap
         ^ (bad-whitespace)
desc/original/__main__.py:18:13: C0326: Exactly one space required after comma
import os,sys,argparse,textwrap
             ^ (bad-whitespace)
desc/original/__main__.py:18:22: C0326: Exactly one space required after comma
import os,sys,argparse,textwrap
                      ^ (bad-whitespace)
desc/original/__main__.py:28:0: C0301: Line too long (147/100) (line-too-long)
desc/original/__main__.py:28:28: C0326: Exactly one space required after comma
    parser.add_argument('-i','--input',type=str,help=textwrap.dedent(''' Input is raw count data in TSV(tsv,tab,data)/CSV or .h5ad(anndata) format'
                            ^ (bad-whitespace)
desc/original/__main__.py:28:38: C0326: Exactly one space required after comma
    parser.add_argument('-i','--input',type=str,help=textwrap.dedent(''' Input is raw count data in TSV(tsv,tab,data)/CSV or .h5ad(anndata) format'
                                      ^ (bad-whitespace)
desc/original/__main__.py:28:47: C0326: Exactly one space required after comma
    parser.add_argument('-i','--input',type=str,help=textwrap.dedent(''' Input is raw count data in TSV(tsv,tab,data)/CSV or .h5ad(anndata) format'
                                               ^ (bad-whitespace)
desc/original/__main__.py:60:0: C0301: Line too long (114/100) (line-too-long)
desc/original/__main__.py:60:28: C0326: Exactly one space required after comma
    parser.add_argument('-o','--output',type=str,default='adata.h5ad',help="The file name of the output`anndata`")
                            ^ (bad-whitespace)
desc/original/__main__.py:60:39: C0326: Exactly one space required after comma
    parser.add_argument('-o','--output',type=str,default='adata.h5ad',help="The file name of the output`anndata`")
                                       ^ (bad-whitespace)
desc/original/__main__.py:60:48: C0326: Exactly one space required after comma
    parser.add_argument('-o','--output',type=str,default='adata.h5ad',help="The file name of the output`anndata`")
                                                ^ (bad-whitespace)
desc/original/__main__.py:60:69: C0326: Exactly one space required after comma
    parser.add_argument('-o','--output',type=str,default='adata.h5ad',help="The file name of the output`anndata`")
                                                                     ^ (bad-whitespace)
desc/original/__main__.py:62:0: C0301: Line too long (146/100) (line-too-long)
desc/original/__main__.py:62:28: C0326: Exactly one space required after comma
    parser.add_argument('-t','--transpose',type=bool,default=False,help="Transpose input matrix(default:False) only True when input is cell*gene")
                            ^ (bad-whitespace)
desc/original/__main__.py:62:42: C0326: Exactly one space required after comma
    parser.add_argument('-t','--transpose',type=bool,default=False,help="Transpose input matrix(default:False) only True when input is cell*gene")
                                          ^ (bad-whitespace)
desc/original/__main__.py:62:52: C0326: Exactly one space required after comma
    parser.add_argument('-t','--transpose',type=bool,default=False,help="Transpose input matrix(default:False) only True when input is cell*gene")
                                                    ^ (bad-whitespace)
desc/original/__main__.py:62:66: C0326: Exactly one space required after comma
    parser.add_argument('-t','--transpose',type=bool,default=False,help="Transpose input matrix(default:False) only True when input is cell*gene")
                                                                  ^ (bad-whitespace)
desc/original/__main__.py:64:43: C0326: Exactly one space required after comma
    parser.add_argument('--prefilter_cells',type=bool,default=True,help='Prefilter cells')
                                           ^ (bad-whitespace)
desc/original/__main__.py:64:53: C0326: Exactly one space required after comma
    parser.add_argument('--prefilter_cells',type=bool,default=True,help='Prefilter cells')
                                                     ^ (bad-whitespace)
desc/original/__main__.py:64:66: C0326: Exactly one space required after comma
    parser.add_argument('--prefilter_cells',type=bool,default=True,help='Prefilter cells')
                                                                  ^ (bad-whitespace)
desc/original/__main__.py:65:67: C0303: Trailing whitespace (trailing-whitespace)
desc/original/__main__.py:65:39: C0326: Exactly one space required after comma
    parser.add_argument('--c_min_genes',type=int,default=1,help='')    
                                       ^ (bad-whitespace)
desc/original/__main__.py:65:48: C0326: Exactly one space required after comma
    parser.add_argument('--c_min_genes',type=int,default=1,help='')    
                                                ^ (bad-whitespace)
desc/original/__main__.py:65:58: C0326: Exactly one space required after comma
    parser.add_argument('--c_min_genes',type=int,default=1,help='')    
                                                          ^ (bad-whitespace)
desc/original/__main__.py:66:70: C0303: Trailing whitespace (trailing-whitespace)
desc/original/__main__.py:66:39: C0326: Exactly one space required after comma
    parser.add_argument('--c_max_genes',type=int,default=None,help='')    
                                       ^ (bad-whitespace)
desc/original/__main__.py:66:48: C0326: Exactly one space required after comma
    parser.add_argument('--c_max_genes',type=int,default=None,help='')    
                                                ^ (bad-whitespace)
desc/original/__main__.py:66:61: C0326: Exactly one space required after comma
    parser.add_argument('--c_max_genes',type=int,default=None,help='')    
                                                             ^ (bad-whitespace)
desc/original/__main__.py:67:71: C0303: Trailing whitespace (trailing-whitespace)
desc/original/__main__.py:67:40: C0326: Exactly one space required after comma
    parser.add_argument('--c_min_counts',type=int,default=None,help='')    
                                        ^ (bad-whitespace)
desc/original/__main__.py:67:49: C0326: Exactly one space required after comma
    parser.add_argument('--c_min_counts',type=int,default=None,help='')    
                                                 ^ (bad-whitespace)
desc/original/__main__.py:67:62: C0326: Exactly one space required after comma
    parser.add_argument('--c_min_counts',type=int,default=None,help='')    
                                                              ^ (bad-whitespace)
desc/original/__main__.py:68:71: C0303: Trailing whitespace (trailing-whitespace)
desc/original/__main__.py:68:40: C0326: Exactly one space required after comma
    parser.add_argument('--c_max_counts',type=int,default=None,help='')    
                                        ^ (bad-whitespace)
desc/original/__main__.py:68:49: C0326: Exactly one space required after comma
    parser.add_argument('--c_max_counts',type=int,default=None,help='')    
                                                 ^ (bad-whitespace)
desc/original/__main__.py:68:62: C0326: Exactly one space required after comma
    parser.add_argument('--c_max_counts',type=int,default=None,help='')    
                                                              ^ (bad-whitespace)
desc/original/__main__.py:70:0: C0301: Line too long (123/100) (line-too-long)
desc/original/__main__.py:70:123: C0303: Trailing whitespace (trailing-whitespace)
desc/original/__main__.py:70:45: C0326: Exactly one space required after comma
    parser.add_argument('--filter_cells_mito',type=bool,default=True,help='Whether filter cells according to mito_percent') 
                                             ^ (bad-whitespace)
desc/original/__main__.py:70:55: C0326: Exactly one space required after comma
    parser.add_argument('--filter_cells_mito',type=bool,default=True,help='Whether filter cells according to mito_percent') 
                                                       ^ (bad-whitespace)
desc/original/__main__.py:70:68: C0326: Exactly one space required after comma
    parser.add_argument('--filter_cells_mito',type=bool,default=True,help='Whether filter cells according to mito_percent') 
                                                                    ^ (bad-whitespace)
desc/original/__main__.py:71:0: C0301: Line too long (130/100) (line-too-long)
desc/original/__main__.py:71:47: C0326: Exactly one space required after comma
    parser.add_argument('--mito_percent_cutoff',type=float, default=0.10,help='The cell with mito_percent>0.20 will be filtered.')
                                               ^ (bad-whitespace)
desc/original/__main__.py:71:72: C0326: Exactly one space required after comma
    parser.add_argument('--mito_percent_cutoff',type=float, default=0.10,help='The cell with mito_percent>0.20 will be filtered.')
                                                                        ^ (bad-whitespace)
desc/original/__main__.py:72:0: C0301: Line too long (195/100) (line-too-long)
desc/original/__main__.py:72:52: C0326: Exactly one space required after comma
    parser.add_argument('-nUMIbefore_filter_MT_gene',type=bool,default=True,help='Compute n_counts and n_gene before filtering MT-ge                        ne if nUMIbefore_filter_MT_gene==True')
                                                    ^ (bad-whitespace)
desc/original/__main__.py:72:62: C0326: Exactly one space required after comma
    parser.add_argument('-nUMIbefore_filter_MT_gene',type=bool,default=True,help='Compute n_counts and n_gene before filtering MT-ge                        ne if nUMIbefore_filter_MT_gene==True')
                                                              ^ (bad-whitespace)
desc/original/__main__.py:72:75: C0326: Exactly one space required after comma
    parser.add_argument('-nUMIbefore_filter_MT_gene',type=bool,default=True,help='Compute n_counts and n_gene before filtering MT-ge                        ne if nUMIbefore_filter_MT_gene==True')
                                                                           ^ (bad-whitespace)
desc/original/__main__.py:75:0: C0301: Line too long (119/100) (line-too-long)
desc/original/__main__.py:75:46: C0326: Exactly one space required after comma
    parser.add_argument('--normalize_per_cell',type=bool,default=False,help='Normalize cells. if normalize_cell=False')
                                              ^ (bad-whitespace)
desc/original/__main__.py:75:56: C0326: Exactly one space required after comma
    parser.add_argument('--normalize_per_cell',type=bool,default=False,help='Normalize cells. if normalize_cell=False')
                                                        ^ (bad-whitespace)
desc/original/__main__.py:75:70: C0326: Exactly one space required after comma
    parser.add_argument('--normalize_per_cell',type=bool,default=False,help='Normalize cells. if normalize_cell=False')
                                                                      ^ (bad-whitespace)
desc/original/__main__.py:76:0: C0301: Line too long (144/100) (line-too-long)
desc/original/__main__.py:76:144: C0303: Trailing whitespace (trailing-whitespace)
desc/original/__main__.py:76:49: C0326: Exactly one space required after comma
    parser.add_argument('--counts_per_cell_after',default=1e4,action='store_true',help=textwrap.dedent(''' `float` or `None`, optional (default: 
                                                 ^ (bad-whitespace)
desc/original/__main__.py:76:61: C0326: Exactly one space required after comma
    parser.add_argument('--counts_per_cell_after',default=1e4,action='store_true',help=textwrap.dedent(''' `float` or `None`, optional (default: 
                                                             ^ (bad-whitespace)
desc/original/__main__.py:76:81: C0326: Exactly one space required after comma
    parser.add_argument('--counts_per_cell_after',default=1e4,action='store_true',help=textwrap.dedent(''' `float` or `None`, optional (default: 
                                                                                 ^ (bad-whitespace)
desc/original/__main__.py:79:0: C0301: Line too long (157/100) (line-too-long)
desc/original/__main__.py:79:43: C0326: Exactly one space required after comma
    parser.add_argument('--counts_per_cell',default=None,action='store_true',help='`float` or `None`, optional(default:`None`) Precomputed counts per cell.')
                                           ^ (bad-whitespace)
desc/original/__main__.py:79:56: C0326: Exactly one space required after comma
    parser.add_argument('--counts_per_cell',default=None,action='store_true',help='`float` or `None`, optional(default:`None`) Precomputed counts per cell.')
                                                        ^ (bad-whitespace)
desc/original/__main__.py:79:76: C0326: Exactly one space required after comma
    parser.add_argument('--counts_per_cell',default=None,action='store_true',help='`float` or `None`, optional(default:`None`) Precomputed counts per cell.')
                                                                            ^ (bad-whitespace)
desc/original/__main__.py:81:43: C0326: Exactly one space required after comma
    parser.add_argument('--prefilter_genes',type=bool,default=True,help='Prefilter cells')
                                           ^ (bad-whitespace)
desc/original/__main__.py:81:53: C0326: Exactly one space required after comma
    parser.add_argument('--prefilter_genes',type=bool,default=True,help='Prefilter cells')
                                                     ^ (bad-whitespace)
desc/original/__main__.py:81:66: C0326: Exactly one space required after comma
    parser.add_argument('--prefilter_genes',type=bool,default=True,help='Prefilter cells')
                                                                  ^ (bad-whitespace)
desc/original/__main__.py:82:67: C0303: Trailing whitespace (trailing-whitespace)
desc/original/__main__.py:82:39: C0326: Exactly one space required after comma
    parser.add_argument('--g_min_cells',type=int,default=1,help='')    
                                       ^ (bad-whitespace)
desc/original/__main__.py:82:48: C0326: Exactly one space required after comma
    parser.add_argument('--g_min_cells',type=int,default=1,help='')    
                                                ^ (bad-whitespace)
desc/original/__main__.py:82:58: C0326: Exactly one space required after comma
    parser.add_argument('--g_min_cells',type=int,default=1,help='')    
                                                          ^ (bad-whitespace)
desc/original/__main__.py:83:70: C0303: Trailing whitespace (trailing-whitespace)
desc/original/__main__.py:83:39: C0326: Exactly one space required after comma
    parser.add_argument('--g_max_cells',type=int,default=None,help='')    
                                       ^ (bad-whitespace)
desc/original/__main__.py:83:48: C0326: Exactly one space required after comma
    parser.add_argument('--g_max_cells',type=int,default=None,help='')    
                                                ^ (bad-whitespace)
desc/original/__main__.py:83:61: C0326: Exactly one space required after comma
    parser.add_argument('--g_max_cells',type=int,default=None,help='')    
                                                             ^ (bad-whitespace)
desc/original/__main__.py:84:71: C0303: Trailing whitespace (trailing-whitespace)
desc/original/__main__.py:84:40: C0326: Exactly one space required after comma
    parser.add_argument('--g_min_counts',type=int,default=None,help='')    
                                        ^ (bad-whitespace)
desc/original/__main__.py:84:49: C0326: Exactly one space required after comma
    parser.add_argument('--g_min_counts',type=int,default=None,help='')    
                                                 ^ (bad-whitespace)
desc/original/__main__.py:84:62: C0326: Exactly one space required after comma
    parser.add_argument('--g_min_counts',type=int,default=None,help='')    
                                                              ^ (bad-whitespace)
desc/original/__main__.py:85:71: C0303: Trailing whitespace (trailing-whitespace)
desc/original/__main__.py:85:40: C0326: Exactly one space required after comma
    parser.add_argument('--g_max_counts',type=int,default=None,help='')  
                                        ^ (bad-whitespace)
desc/original/__main__.py:85:49: C0326: Exactly one space required after comma
    parser.add_argument('--g_max_counts',type=int,default=None,help='')  
                                                 ^ (bad-whitespace)
desc/original/__main__.py:85:62: C0326: Exactly one space required after comma
    parser.add_argument('--g_max_counts',type=int,default=None,help='')  
                                                              ^ (bad-whitespace)
desc/original/__main__.py:87:0: C0301: Line too long (161/100) (line-too-long)
desc/original/__main__.py:87:47: C0326: Exactly one space required after comma
    parser.add_argument('--find_variable_genes',type=bool,default=True,help='find variable genes, the parameter is same as scanpy.api.pp.filter_gene_dispersion')
                                               ^ (bad-whitespace)
desc/original/__main__.py:87:57: C0326: Exactly one space required after comma
    parser.add_argument('--find_variable_genes',type=bool,default=True,help='find variable genes, the parameter is same as scanpy.api.pp.filter_gene_dispersion')
                                                         ^ (bad-whitespace)
desc/original/__main__.py:87:70: C0326: Exactly one space required after comma
    parser.add_argument('--find_variable_genes',type=bool,default=True,help='find variable genes, the parameter is same as scanpy.api.pp.filter_gene_dispersion')
                                                                      ^ (bad-whitespace)
desc/original/__main__.py:88:0: C0301: Line too long (142/100) (line-too-long)
desc/original/__main__.py:88:34: C0326: Exactly one space required after comma
    parser.add_argument('--flavor',type=str,default='seurat',help=textwrap.dedent(''' "{'seurat', 'cell_ranger'}, optional (default: 'seurat')
                                  ^ (bad-whitespace)
desc/original/__main__.py:88:43: C0326: Exactly one space required after comma
    parser.add_argument('--flavor',type=str,default='seurat',help=textwrap.dedent(''' "{'seurat', 'cell_ranger'}, optional (default: 'seurat')
                                           ^ (bad-whitespace)
desc/original/__main__.py:88:60: C0326: Exactly one space required after comma
    parser.add_argument('--flavor',type=str,default='seurat',help=textwrap.dedent(''' "{'seurat', 'cell_ranger'}, optional (default: 'seurat')
                                                            ^ (bad-whitespace)
desc/original/__main__.py:98:36: C0326: Exactly one space required after comma
    parser.add_argument('--min_mean',type=float,default=0.0125)
                                    ^ (bad-whitespace)
desc/original/__main__.py:98:47: C0326: Exactly one space required after comma
    parser.add_argument('--min_mean',type=float,default=0.0125)
                                               ^ (bad-whitespace)
desc/original/__main__.py:99:36: C0326: Exactly one space required after comma
    parser.add_argument('--max_mean',type=float,default=None)
                                    ^ (bad-whitespace)
desc/original/__main__.py:99:47: C0326: Exactly one space required after comma
    parser.add_argument('--max_mean',type=float,default=None)
                                               ^ (bad-whitespace)
desc/original/__main__.py:100:36: C0326: Exactly one space required after comma
    parser.add_argument('--min_disp',type=float,default=None)
                                    ^ (bad-whitespace)
desc/original/__main__.py:100:47: C0326: Exactly one space required after comma
    parser.add_argument('--min_disp',type=float,default=None)
                                               ^ (bad-whitespace)
desc/original/__main__.py:101:36: C0326: Exactly one space required after comma
    parser.add_argument('--max_disp',type=float,default=None)
                                    ^ (bad-whitespace)
desc/original/__main__.py:101:47: C0326: Exactly one space required after comma
    parser.add_argument('--max_disp',type=float,default=None)
                                               ^ (bad-whitespace)
desc/original/__main__.py:102:0: C0301: Line too long (110/100) (line-too-long)
desc/original/__main__.py:102:39: C0326: Exactly one space required after comma
    parser.add_argument('--n_top_genes',type=int,default=1000,help="Number of highly-variable genes to keep.")
                                       ^ (bad-whitespace)
desc/original/__main__.py:102:48: C0326: Exactly one space required after comma
    parser.add_argument('--n_top_genes',type=int,default=1000,help="Number of highly-variable genes to keep.")
                                                ^ (bad-whitespace)
desc/original/__main__.py:102:61: C0326: Exactly one space required after comma
    parser.add_argument('--n_top_genes',type=int,default=1000,help="Number of highly-variable genes to keep.")
                                                             ^ (bad-whitespace)
desc/original/__main__.py:104:0: C0301: Line too long (116/100) (line-too-long)
desc/original/__main__.py:104:33: C0326: Exactly one space required after comma
    parser.add_argument('--log1p',type=bool,default=True,help='Take log1p transformation after find variable genes')
                                 ^ (bad-whitespace)
desc/original/__main__.py:104:43: C0326: Exactly one space required after comma
    parser.add_argument('--log1p',type=bool,default=True,help='Take log1p transformation after find variable genes')
                                           ^ (bad-whitespace)
desc/original/__main__.py:104:56: C0326: Exactly one space required after comma
    parser.add_argument('--log1p',type=bool,default=True,help='Take log1p transformation after find variable genes')
                                                        ^ (bad-whitespace)
desc/original/__main__.py:106:0: C0301: Line too long (131/100) (line-too-long)
desc/original/__main__.py:106:38: C0326: Exactly one space required after comma
    parser.add_argument('--scale_data',type=int,default=1,help='one of [0,1,2],0:no scale, 1:scale overall cells 2:scale by group')
                                      ^ (bad-whitespace)
desc/original/__main__.py:106:47: C0326: Exactly one space required after comma
    parser.add_argument('--scale_data',type=int,default=1,help='one of [0,1,2],0:no scale, 1:scale overall cells 2:scale by group')
                                               ^ (bad-whitespace)
desc/original/__main__.py:106:57: C0326: Exactly one space required after comma
    parser.add_argument('--scale_data',type=int,default=1,help='one of [0,1,2],0:no scale, 1:scale overall cells 2:scale by group')
                                                         ^ (bad-whitespace)
desc/original/__main__.py:107:0: C0301: Line too long (120/100) (line-too-long)
desc/original/__main__.py:107:33: C0326: Exactly one space required after comma
    parser.add_argument('--group',type=str,default=None,help='Scale gene by group, group must be the columns of adata.')
                                 ^ (bad-whitespace)
desc/original/__main__.py:107:42: C0326: Exactly one space required after comma
    parser.add_argument('--group',type=str,default=None,help='Scale gene by group, group must be the columns of adata.')
                                          ^ (bad-whitespace)
desc/original/__main__.py:107:55: C0326: Exactly one space required after comma
    parser.add_argument('--group',type=str,default=None,help='Scale gene by group, group must be the columns of adata.')
                                                       ^ (bad-whitespace)
desc/original/__main__.py:108:37: C0326: Exactly one space required after comma
    parser.add_argument('--max_value',type=str,default=None,help='The maxmum value after scale')
                                     ^ (bad-whitespace)
desc/original/__main__.py:108:46: C0326: Exactly one space required after comma
    parser.add_argument('--max_value',type=str,default=None,help='The maxmum value after scale')
                                              ^ (bad-whitespace)
desc/original/__main__.py:108:59: C0326: Exactly one space required after comma
    parser.add_argument('--max_value',type=str,default=None,help='The maxmum value after scale')
                                                           ^ (bad-whitespace)
desc/original/__main__.py:109:0: C0303: Trailing whitespace (trailing-whitespace)
desc/original/__main__.py:110:25: C0303: Trailing whitespace (trailing-whitespace)
desc/original/__main__.py:111:0: C0301: Line too long (198/100) (line-too-long)
desc/original/__main__.py:111:32: C0326: Exactly one space required after comma
    parser.add_argument('--dims',type=int,default=[64,32],nargs='+',help="The number of nodes for each layer in encoder. if dims==-1, it will choose the number of nodes and layers automatically!!!")
                                ^ (bad-whitespace)
desc/original/__main__.py:111:41: C0326: Exactly one space required after comma
    parser.add_argument('--dims',type=int,default=[64,32],nargs='+',help="The number of nodes for each layer in encoder. if dims==-1, it will choose the number of nodes and layers automatically!!!")
                                         ^ (bad-whitespace)
desc/original/__main__.py:111:53: C0326: Exactly one space required after comma
    parser.add_argument('--dims',type=int,default=[64,32],nargs='+',help="The number of nodes for each layer in encoder. if dims==-1, it will choose the number of nodes and layers automatically!!!")
                                                     ^ (bad-whitespace)
desc/original/__main__.py:111:57: C0326: Exactly one space required after comma
    parser.add_argument('--dims',type=int,default=[64,32],nargs='+',help="The number of nodes for each layer in encoder. if dims==-1, it will choose the number of nodes and layers automatically!!!")
                                                         ^ (bad-whitespace)
desc/original/__main__.py:111:67: C0326: Exactly one space required after comma
    parser.add_argument('--dims',type=int,default=[64,32],nargs='+',help="The number of nodes for each layer in encoder. if dims==-1, it will choose the number of nodes and layers automatically!!!")
                                                                   ^ (bad-whitespace)
desc/original/__main__.py:112:33: C0326: Exactly one space required after comma
    parser.add_argument('--alpha',type=float,default=1.0,help='the degree of t-distribution')
                                 ^ (bad-whitespace)
desc/original/__main__.py:112:44: C0326: Exactly one space required after comma
    parser.add_argument('--alpha',type=float,default=1.0,help='the degree of t-distribution')
                                            ^ (bad-whitespace)
desc/original/__main__.py:112:56: C0326: Exactly one space required after comma
    parser.add_argument('--alpha',type=float,default=1.0,help='the degree of t-distribution')
                                                        ^ (bad-whitespace)
desc/original/__main__.py:113:0: C0301: Line too long (206/100) (line-too-long)
desc/original/__main__.py:113:31: C0326: Exactly one space required after comma
    parser.add_argument('--tol',type=float,default=0.005,help='Stop criterion, clustering procedure will be stoped when the difference ratio betwen the current iteration and last iteration larger than tol')
                               ^ (bad-whitespace)
desc/original/__main__.py:113:42: C0326: Exactly one space required after comma
    parser.add_argument('--tol',type=float,default=0.005,help='Stop criterion, clustering procedure will be stoped when the difference ratio betwen the current iteration and last iteration larger than tol')
                                          ^ (bad-whitespace)
desc/original/__main__.py:113:56: C0326: Exactly one space required after comma
    parser.add_argument('--tol',type=float,default=0.005,help='Stop criterion, clustering procedure will be stoped when the difference ratio betwen the current iteration and last iteration larger than tol')
                                                        ^ (bad-whitespace)
desc/original/__main__.py:114:0: C0301: Line too long (122/100) (line-too-long)
desc/original/__main__.py:114:32: C0326: Exactly one space required after comma
    parser.add_argument('--init',type=str,default='glorot_uniform',help='Initializing distribution,detail refer to keras')
                                ^ (bad-whitespace)
desc/original/__main__.py:114:41: C0326: Exactly one space required after comma
    parser.add_argument('--init',type=str,default='glorot_uniform',help='Initializing distribution,detail refer to keras')
                                         ^ (bad-whitespace)
desc/original/__main__.py:114:66: C0326: Exactly one space required after comma
    parser.add_argument('--init',type=str,default='glorot_uniform',help='Initializing distribution,detail refer to keras')
                                                                  ^ (bad-whitespace)
desc/original/__main__.py:115:0: C0301: Line too long (188/100) (line-too-long)
desc/original/__main__.py:115:38: C0326: Exactly one space required after comma
    parser.add_argument('--n_clusters',type=int,default=None,help="The number of clusters for K-means methods, if not sepcified, it will use louvain method to initialize cluster centroid")
                                      ^ (bad-whitespace)
desc/original/__main__.py:115:47: C0326: Exactly one space required after comma
    parser.add_argument('--n_clusters',type=int,default=None,help="The number of clusters for K-means methods, if not sepcified, it will use louvain method to initialize cluster centroid")
                                               ^ (bad-whitespace)
desc/original/__main__.py:115:60: C0326: Exactly one space required after comma
    parser.add_argument('--n_clusters',type=int,default=None,help="The number of clusters for K-means methods, if not sepcified, it will use louvain method to initialize cluster centroid")
                                                            ^ (bad-whitespace)
desc/original/__main__.py:116:0: C0301: Line too long (119/100) (line-too-long)
desc/original/__main__.py:116:46: C0326: Exactly one space required after comma
    parser.add_argument('--louvain_resolution',type=float,default=[0.4],nargs='+',help="resolution for louvian method")
                                              ^ (bad-whitespace)
desc/original/__main__.py:116:57: C0326: Exactly one space required after comma
    parser.add_argument('--louvain_resolution',type=float,default=[0.4],nargs='+',help="resolution for louvian method")
                                                         ^ (bad-whitespace)
desc/original/__main__.py:116:71: C0326: Exactly one space required after comma
    parser.add_argument('--louvain_resolution',type=float,default=[0.4],nargs='+',help="resolution for louvian method")
                                                                       ^ (bad-whitespace)
desc/original/__main__.py:116:81: C0326: Exactly one space required after comma
    parser.add_argument('--louvain_resolution',type=float,default=[0.4],nargs='+',help="resolution for louvian method")
                                                                                 ^ (bad-whitespace)
desc/original/__main__.py:117:0: C0301: Line too long (113/100) (line-too-long)
desc/original/__main__.py:117:39: C0326: Exactly one space required after comma
    parser.add_argument('--n_neighbors',type=int,default=15,help="The neighbors for connectivity matrix of cell")
                                       ^ (bad-whitespace)
desc/original/__main__.py:117:48: C0326: Exactly one space required after comma
    parser.add_argument('--n_neighbors',type=int,default=15,help="The neighbors for connectivity matrix of cell")
                                                ^ (bad-whitespace)
desc/original/__main__.py:117:59: C0326: Exactly one space required after comma
    parser.add_argument('--n_neighbors',type=int,default=15,help="The neighbors for connectivity matrix of cell")
                                                           ^ (bad-whitespace)
desc/original/__main__.py:118:0: C0301: Line too long (115/100) (line-too-long)
desc/original/__main__.py:118:43: C0326: Exactly one space required after comma
    parser.add_argument('--pretrain_epochs',type=int,default=300,help='the number of epochs for autoencoder model')
                                           ^ (bad-whitespace)
desc/original/__main__.py:118:52: C0326: Exactly one space required after comma
    parser.add_argument('--pretrain_epochs',type=int,default=300,help='the number of epochs for autoencoder model')
                                                    ^ (bad-whitespace)
desc/original/__main__.py:118:64: C0326: Exactly one space required after comma
    parser.add_argument('--pretrain_epochs',type=int,default=300,help='the number of epochs for autoencoder model')
                                                                ^ (bad-whitespace)
desc/original/__main__.py:119:0: C0301: Line too long (125/100) (line-too-long)
desc/original/__main__.py:119:38: C0326: Exactly one space required after comma
    parser.add_argument('--batch_size',type=int,default=256,help='the batch size for autoencoder model and clustering model')
                                      ^ (bad-whitespace)
desc/original/__main__.py:119:47: C0326: Exactly one space required after comma
    parser.add_argument('--batch_size',type=int,default=256,help='the batch size for autoencoder model and clustering model')
                                               ^ (bad-whitespace)
desc/original/__main__.py:119:59: C0326: Exactly one space required after comma
    parser.add_argument('--batch_size',type=int,default=256,help='the batch size for autoencoder model and clustering model')
                                                           ^ (bad-whitespace)
desc/original/__main__.py:120:0: C0301: Line too long (227/100) (line-too-long)
desc/original/__main__.py:120:38: C0326: Exactly one space required after comma
    parser.add_argument('--activation',type=str,default='relu',help="the activation function for autoencoder model,which can be `elu,selu,softplus,tanh,siogmid et al.`, for detail please refer to`https://keras.io/activations/")
                                      ^ (bad-whitespace)
desc/original/__main__.py:120:47: C0326: Exactly one space required after comma
    parser.add_argument('--activation',type=str,default='relu',help="the activation function for autoencoder model,which can be `elu,selu,softplus,tanh,siogmid et al.`, for detail please refer to`https://keras.io/activations/")
                                               ^ (bad-whitespace)
desc/original/__main__.py:120:62: C0326: Exactly one space required after comma
    parser.add_argument('--activation',type=str,default='relu',help="the activation function for autoencoder model,which can be `elu,selu,softplus,tanh,siogmid et al.`, for detail please refer to`https://keras.io/activations/")
                                                              ^ (bad-whitespace)
desc/original/__main__.py:121:0: C0301: Line too long (144/100) (line-too-long)
desc/original/__main__.py:121:39: C0326: Exactly one space required after comma
    parser.add_argument('--actincenter',type=str,default='tanh',help=' the activation function for the last layer in encoder and decoder model')
                                       ^ (bad-whitespace)
desc/original/__main__.py:121:48: C0326: Exactly one space required after comma
    parser.add_argument('--actincenter',type=str,default='tanh',help=' the activation function for the last layer in encoder and decoder model')
                                                ^ (bad-whitespace)
desc/original/__main__.py:121:63: C0326: Exactly one space required after comma
    parser.add_argument('--actincenter',type=str,default='tanh',help=' the activation function for the last layer in encoder and decoder model')
                                                               ^ (bad-whitespace)
desc/original/__main__.py:122:0: C0301: Line too long (138/100) (line-too-long)
desc/original/__main__.py:122:41: C0326: Exactly one space required after comma
    parser.add_argument('--drop_rate_SAE',type=float,default=0.2,help='The drop rate for Stacked autoencoder, which just for  finetuning')
                                         ^ (bad-whitespace)
desc/original/__main__.py:122:52: C0326: Exactly one space required after comma
    parser.add_argument('--drop_rate_SAE',type=float,default=0.2,help='The drop rate for Stacked autoencoder, which just for  finetuning')
                                                    ^ (bad-whitespace)
desc/original/__main__.py:122:64: C0326: Exactly one space required after comma
    parser.add_argument('--drop_rate_SAE',type=float,default=0.2,help='The drop rate for Stacked autoencoder, which just for  finetuning')
                                                                ^ (bad-whitespace)
desc/original/__main__.py:123:0: C0301: Line too long (141/100) (line-too-long)
desc/original/__main__.py:123:38: C0326: Exactly one space required after comma
    parser.add_argument('--is_stacked',type=bool,default=True,help='The model will be pretrained by stacked autoencoder if is_stacked==True')
                                      ^ (bad-whitespace)
desc/original/__main__.py:123:48: C0326: Exactly one space required after comma
    parser.add_argument('--is_stacked',type=bool,default=True,help='The model will be pretrained by stacked autoencoder if is_stacked==True')
                                                ^ (bad-whitespace)
desc/original/__main__.py:123:61: C0326: Exactly one space required after comma
    parser.add_argument('--is_stacked',type=bool,default=True,help='The model will be pretrained by stacked autoencoder if is_stacked==True')
                                                             ^ (bad-whitespace)
desc/original/__main__.py:124:0: C0301: Line too long (150/100) (line-too-long)
desc/original/__main__.py:124:41: C0326: Exactly one space required after comma
    parser.add_argument('--use_earlyStop',type=bool,default=True,help='Stops training if loss does not improve if given min_delta=1e-4, patience=10.')
                                         ^ (bad-whitespace)
desc/original/__main__.py:124:51: C0326: Exactly one space required after comma
    parser.add_argument('--use_earlyStop',type=bool,default=True,help='Stops training if loss does not improve if given min_delta=1e-4, patience=10.')
                                                   ^ (bad-whitespace)
desc/original/__main__.py:124:64: C0326: Exactly one space required after comma
    parser.add_argument('--use_earlyStop',type=bool,default=True,help='Stops training if loss does not improve if given min_delta=1e-4, patience=10.')
                                                                ^ (bad-whitespace)
desc/original/__main__.py:125:0: C0301: Line too long (163/100) (line-too-long)
desc/original/__main__.py:125:42: C0326: Exactly one space required after comma
    parser.add_argument('--use_ae_weights',type=bool,default=True,help='if True and ae_weights.h5 savedi in /`save_dir`/ae_weights.h5, it will use use_ae_weights')
                                          ^ (bad-whitespace)
desc/original/__main__.py:125:52: C0326: Exactly one space required after comma
    parser.add_argument('--use_ae_weights',type=bool,default=True,help='if True and ae_weights.h5 savedi in /`save_dir`/ae_weights.h5, it will use use_ae_weights')
                                                    ^ (bad-whitespace)
desc/original/__main__.py:125:65: C0326: Exactly one space required after comma
    parser.add_argument('--use_ae_weights',type=bool,default=True,help='if True and ae_weights.h5 savedi in /`save_dir`/ae_weights.h5, it will use use_ae_weights')
                                                                 ^ (bad-whitespace)
desc/original/__main__.py:126:0: C0301: Line too long (113/100) (line-too-long)
desc/original/__main__.py:126:48: C0326: Exactly one space required after comma
    parser.add_argument('--save_encoder_weights',type=bool,default=False,help='if True save ae_weight`epoch`.h5')
                                                ^ (bad-whitespace)
desc/original/__main__.py:126:58: C0326: Exactly one space required after comma
    parser.add_argument('--save_encoder_weights',type=bool,default=False,help='if True save ae_weight`epoch`.h5')
                                                          ^ (bad-whitespace)
desc/original/__main__.py:126:72: C0326: Exactly one space required after comma
    parser.add_argument('--save_encoder_weights',type=bool,default=False,help='if True save ae_weight`epoch`.h5')
                                                                        ^ (bad-whitespace)
desc/original/__main__.py:127:36: C0326: Exactly one space required after comma
    parser.add_argument('--save_dir',type=str,default='result_tmp',help='The  directory for result')
                                    ^ (bad-whitespace)
desc/original/__main__.py:127:45: C0326: Exactly one space required after comma
    parser.add_argument('--save_dir',type=str,default='result_tmp',help='The  directory for result')
                                             ^ (bad-whitespace)
desc/original/__main__.py:127:66: C0326: Exactly one space required after comma
    parser.add_argument('--save_dir',type=str,default='result_tmp',help='The  directory for result')
                                                                  ^ (bad-whitespace)
desc/original/__main__.py:128:0: C0301: Line too long (104/100) (line-too-long)
desc/original/__main__.py:128:36: C0326: Exactly one space required after comma
    parser.add_argument('--max_iter',type=int,default=1000,help=' The maximum iteration for clustering')
                                    ^ (bad-whitespace)
desc/original/__main__.py:128:45: C0326: Exactly one space required after comma
    parser.add_argument('--max_iter',type=int,default=1000,help=' The maximum iteration for clustering')
                                             ^ (bad-whitespace)
desc/original/__main__.py:128:58: C0326: Exactly one space required after comma
    parser.add_argument('--max_iter',type=int,default=1000,help=' The maximum iteration for clustering')
                                                          ^ (bad-whitespace)
desc/original/__main__.py:129:0: C0301: Line too long (175/100) (line-too-long)
desc/original/__main__.py:129:38: C0326: Exactly one space required after comma
    parser.add_argument('--epochs_fit',type=int,default=4,help='updateing clustering probability for every epochs_fit. If sample size is samll, we tend to set a larger value')
                                      ^ (bad-whitespace)
desc/original/__main__.py:129:47: C0326: Exactly one space required after comma
    parser.add_argument('--epochs_fit',type=int,default=4,help='updateing clustering probability for every epochs_fit. If sample size is samll, we tend to set a larger value')
                                               ^ (bad-whitespace)
desc/original/__main__.py:129:57: C0326: Exactly one space required after comma
    parser.add_argument('--epochs_fit',type=int,default=4,help='updateing clustering probability for every epochs_fit. If sample size is samll, we tend to set a larger value')
                                                         ^ (bad-whitespace)
desc/original/__main__.py:130:0: C0301: Line too long (199/100) (line-too-long)
desc/original/__main__.py:130:37: C0326: Exactly one space required after comma
    parser.add_argument('--num_Cores',type=int,default=20,help='How many cpus use during tranning. if num_Cores > the max cpus in our computer , num_Cores will use  a half of cpus in your computer.')
                                     ^ (bad-whitespace)
desc/original/__main__.py:130:46: C0326: Exactly one space required after comma
    parser.add_argument('--num_Cores',type=int,default=20,help='How many cpus use during tranning. if num_Cores > the max cpus in our computer , num_Cores will use  a half of cpus in your computer.')
                                              ^ (bad-whitespace)
desc/original/__main__.py:130:57: C0326: Exactly one space required after comma
    parser.add_argument('--num_Cores',type=int,default=20,help='How many cpus use during tranning. if num_Cores > the max cpus in our computer , num_Cores will use  a half of cpus in your computer.')
                                                         ^ (bad-whitespace)
desc/original/__main__.py:131:0: C0301: Line too long (118/100) (line-too-long)
desc/original/__main__.py:131:35: C0326: Exactly one space required after comma
    parser.add_argument('--use_GPU',type=bool,default=False,help='It will use GPU to train model if GPU is avaliable')
                                   ^ (bad-whitespace)
desc/original/__main__.py:131:45: C0326: Exactly one space required after comma
    parser.add_argument('--use_GPU',type=bool,default=False,help='It will use GPU to train model if GPU is avaliable')
                                             ^ (bad-whitespace)
desc/original/__main__.py:131:59: C0326: Exactly one space required after comma
    parser.add_argument('--use_GPU',type=bool,default=False,help='It will use GPU to train model if GPU is avaliable')
                                                           ^ (bad-whitespace)
desc/original/__main__.py:132:0: C0301: Line too long (149/100) (line-too-long)
desc/original/__main__.py:132:39: C0326: Exactly one space required after comma
    parser.add_argument('--random_seed',type=int,default=201809,help='he random seed for random.seed,,,numpy.random.seed,tensorflow.set_random_seed')
                                       ^ (bad-whitespace)
desc/original/__main__.py:132:48: C0326: Exactly one space required after comma
    parser.add_argument('--random_seed',type=int,default=201809,help='he random seed for random.seed,,,numpy.random.seed,tensorflow.set_random_seed')
                                                ^ (bad-whitespace)
desc/original/__main__.py:132:63: C0326: Exactly one space required after comma
    parser.add_argument('--random_seed',type=int,default=201809,help='he random seed for random.seed,,,numpy.random.seed,tensorflow.set_random_seed')
                                                               ^ (bad-whitespace)
desc/original/__main__.py:133:0: C0301: Line too long (117/100) (line-too-long)
desc/original/__main__.py:133:35: C0326: Exactly one space required after comma
    parser.add_argument('--verbose',type=bool,default=False,help='It will ouput the model summary if verbose==True.')
                                   ^ (bad-whitespace)
desc/original/__main__.py:133:45: C0326: Exactly one space required after comma
    parser.add_argument('--verbose',type=bool,default=False,help='It will ouput the model summary if verbose==True.')
                                             ^ (bad-whitespace)
desc/original/__main__.py:133:59: C0326: Exactly one space required after comma
    parser.add_argument('--verbose',type=bool,default=False,help='It will ouput the model summary if verbose==True.')
                                                           ^ (bad-whitespace)
desc/original/__main__.py:134:0: C0301: Line too long (110/100) (line-too-long)
desc/original/__main__.py:134:35: C0326: Exactly one space required after comma
    parser.add_argument('--do_tsne',type=bool,default=True,help='It will do tsne coordinate if do_tsne==True')
                                   ^ (bad-whitespace)
desc/original/__main__.py:134:45: C0326: Exactly one space required after comma
    parser.add_argument('--do_tsne',type=bool,default=True,help='It will do tsne coordinate if do_tsne==True')
                                             ^ (bad-whitespace)
desc/original/__main__.py:134:58: C0326: Exactly one space required after comma
    parser.add_argument('--do_tsne',type=bool,default=True,help='It will do tsne coordinate if do_tsne==True')
                                                          ^ (bad-whitespace)
desc/original/__main__.py:136:0: C0303: Trailing whitespace (trailing-whitespace)
desc/original/__main__.py:138:8: C0326: Exactly one space required around assignment
    args=parse_args()
        ^ (bad-whitespace)
desc/original/__main__.py:145:0: C0301: Line too long (134/100) (line-too-long)
desc/original/__main__.py:145:134: C0303: Trailing whitespace (trailing-whitespace)
desc/original/__main__.py:147:62: C0303: Trailing whitespace (trailing-whitespace)
desc/original/__main__.py:147:9: C0326: Exactly one space required around assignment
    adata=io.read_dataset(args.input,transpose=args.transpose) 
         ^ (bad-whitespace)
desc/original/__main__.py:147:36: C0326: Exactly one space required after comma
    adata=io.read_dataset(args.input,transpose=args.transpose) 
                                    ^ (bad-whitespace)
desc/original/__main__.py:149:28: C0303: Trailing whitespace (trailing-whitespace)
desc/original/__main__.py:150:0: C0301: Line too long (144/100) (line-too-long)
desc/original/__main__.py:150:32: C0326: Exactly one space required after comma
        io.prefilter_cells(adata,min_counts=args.c_min_genes,max_counts=args.c_max_counts,min_genes=args.c_min_genes,max_genes=args.c_max_genes)
                                ^ (bad-whitespace)
desc/original/__main__.py:150:60: C0326: Exactly one space required after comma
        io.prefilter_cells(adata,min_counts=args.c_min_genes,max_counts=args.c_max_counts,min_genes=args.c_min_genes,max_genes=args.c_max_genes)
                                                            ^ (bad-whitespace)
desc/original/__main__.py:150:89: C0326: Exactly one space required after comma
        io.prefilter_cells(adata,min_counts=args.c_min_genes,max_counts=args.c_max_counts,min_genes=args.c_min_genes,max_genes=args.c_max_genes)
                                                                                         ^ (bad-whitespace)
desc/original/__main__.py:150:116: C0326: Exactly one space required after comma
        io.prefilter_cells(adata,min_counts=args.c_min_genes,max_counts=args.c_max_counts,min_genes=args.c_min_genes,max_genes=args.c_max_genes)
                                                                                                                    ^ (bad-whitespace)
desc/original/__main__.py:151:0: C0301: Line too long (117/100) (line-too-long)
desc/original/__main__.py:153:0: C0301: Line too long (137/100) (line-too-long)
desc/original/__main__.py:153:137: C0303: Trailing whitespace (trailing-whitespace)
desc/original/__main__.py:153:34: C0326: Exactly one space required after comma
        io.filter_cells_mito(adata,mito_percent_cutoff=args.mito_percent_cutoff,nUMIbefore_filter_MT_gene=args.nUMIbefore_filter_MT_gene) 
                                  ^ (bad-whitespace)
desc/original/__main__.py:153:79: C0326: Exactly one space required after comma
        io.filter_cells_mito(adata,mito_percent_cutoff=args.mito_percent_cutoff,nUMIbefore_filter_MT_gene=args.nUMIbefore_filter_MT_gene) 
                                                                               ^ (bad-whitespace)
desc/original/__main__.py:156:0: C0301: Line too long (125/100) (line-too-long)
desc/original/__main__.py:156:38: C0326: Exactly one space required after comma
        sc.pp.normalize_per_cell(adata,counts_per_cell_after=args.counts_per_cell_after,counts_per_cell=args.counts_per_cell)
                                      ^ (bad-whitespace)
desc/original/__main__.py:156:87: C0326: Exactly one space required after comma
        sc.pp.normalize_per_cell(adata,counts_per_cell_after=args.counts_per_cell_after,counts_per_cell=args.counts_per_cell)
                                                                                       ^ (bad-whitespace)
desc/original/__main__.py:157:17: C0326: Exactly one space required around assignment
        adata.raw=sc.pp.log1p(adata,copy=True)
                 ^ (bad-whitespace)
desc/original/__main__.py:157:35: C0326: Exactly one space required after comma
        adata.raw=sc.pp.log1p(adata,copy=True)
                                   ^ (bad-whitespace)
desc/original/__main__.py:160:28: C0303: Trailing whitespace (trailing-whitespace)
desc/original/__main__.py:161:0: C0301: Line too long (145/100) (line-too-long)
desc/original/__main__.py:161:32: C0326: Exactly one space required after comma
        io.prefilter_genes(adata,min_counts=args.g_min_counts,max_counts=args.g_min_counts,min_cells=args.g_min_cells,max_cells=args.g_max_cells)
                                ^ (bad-whitespace)
desc/original/__main__.py:161:61: C0326: Exactly one space required after comma
        io.prefilter_genes(adata,min_counts=args.g_min_counts,max_counts=args.g_min_counts,min_cells=args.g_min_cells,max_cells=args.g_max_cells)
                                                             ^ (bad-whitespace)
desc/original/__main__.py:161:90: C0326: Exactly one space required after comma
        io.prefilter_genes(adata,min_counts=args.g_min_counts,max_counts=args.g_min_counts,min_cells=args.g_min_cells,max_cells=args.g_max_cells)
                                                                                          ^ (bad-whitespace)
desc/original/__main__.py:161:117: C0326: Exactly one space required after comma
        io.prefilter_genes(adata,min_counts=args.g_min_counts,max_counts=args.g_min_counts,min_cells=args.g_min_cells,max_cells=args.g_max_cells)
                                                                                                                     ^ (bad-whitespace)
desc/original/__main__.py:163:32: C0303: Trailing whitespace (trailing-whitespace)
desc/original/__main__.py:164:0: C0301: Line too long (103/100) (line-too-long)
desc/original/__main__.py:164:39: C0326: Exactly one space required after comma
        assert args.flavor in ["seurat","cell_ranger"],"flavor must be one of{'seurat', 'cell_ranger'}"
                                       ^ (bad-whitespace)
desc/original/__main__.py:164:54: C0326: Exactly one space required after comma
        assert args.flavor in ["seurat","cell_ranger"],"flavor must be one of{'seurat', 'cell_ranger'}"
                                                      ^ (bad-whitespace)
desc/original/__main__.py:165:0: C0301: Line too long (142/100) (line-too-long)
desc/original/__main__.py:165:43: C0326: Exactly one space required after comma
        sc.pp.filter_genes_dispersion(adata,max_mean=args.max_mean,min_disp=args.min_disp,max_disp=args.max_disp,n_top_genes=args.n_top_genes)
                                           ^ (bad-whitespace)
desc/original/__main__.py:165:66: C0326: Exactly one space required after comma
        sc.pp.filter_genes_dispersion(adata,max_mean=args.max_mean,min_disp=args.min_disp,max_disp=args.max_disp,n_top_genes=args.n_top_genes)
                                                                  ^ (bad-whitespace)
desc/original/__main__.py:165:89: C0326: Exactly one space required after comma
        sc.pp.filter_genes_dispersion(adata,max_mean=args.max_mean,min_disp=args.min_disp,max_disp=args.max_disp,n_top_genes=args.n_top_genes)
                                                                                         ^ (bad-whitespace)
desc/original/__main__.py:165:112: C0326: Exactly one space required after comma
        sc.pp.filter_genes_dispersion(adata,max_mean=args.max_mean,min_disp=args.min_disp,max_disp=args.max_disp,n_top_genes=args.n_top_genes)
                                                                                                                ^ (bad-whitespace)
desc/original/__main__.py:170:36: C0326: Exactly one space required after comma
        assert args.scale_data in [0,1,2],'`scale_data` must be of one of 0,1,2'
                                    ^ (bad-whitespace)
desc/original/__main__.py:170:38: C0326: Exactly one space required after comma
        assert args.scale_data in [0,1,2],'`scale_data` must be of one of 0,1,2'
                                      ^ (bad-whitespace)
desc/original/__main__.py:170:41: C0326: Exactly one space required after comma
        assert args.scale_data in [0,1,2],'`scale_data` must be of one of 0,1,2'
                                         ^ (bad-whitespace)
desc/original/__main__.py:171:13: C0326: Exactly one space required around assignment
        adata=io.scale_by_group(adata,groupby=args.group,max_value=args.max_value)
             ^ (bad-whitespace)
desc/original/__main__.py:171:37: C0326: Exactly one space required after comma
        adata=io.scale_by_group(adata,groupby=args.group,max_value=args.max_value)
                                     ^ (bad-whitespace)
desc/original/__main__.py:171:56: C0326: Exactly one space required after comma
        adata=io.scale_by_group(adata,groupby=args.group,max_value=args.max_value)
                                                        ^ (bad-whitespace)
desc/original/__main__.py:173:8: C0326: Exactly one space required around assignment
    dims=[adata.shape[-1]]+args.dims if args.dims[0]!=-1 else io.getdims(adata.shape)
        ^ (bad-whitespace)
desc/original/__main__.py:173:52: C0326: Exactly one space required around comparison
    dims=[adata.shape[-1]]+args.dims if args.dims[0]!=-1 else io.getdims(adata.shape)
                                                    ^^ (bad-whitespace)
desc/original/__main__.py:174:9: C0326: Exactly one space required around assignment
    adata=train(adata,
         ^ (bad-whitespace)
desc/original/__main__.py:175:0: C0330: Wrong continued indentation (add 4 spaces).
            alpha=args.alpha,
            ^   | (bad-continuation)
desc/original/__main__.py:176:0: C0330: Wrong continued indentation (add 4 spaces).
            tol=args.tol,
            ^   | (bad-continuation)
desc/original/__main__.py:177:0: C0330: Wrong continued indentation (add 4 spaces).
            init=args.init,
            ^   | (bad-continuation)
desc/original/__main__.py:178:0: C0330: Wrong continued indentation (add 4 spaces).
            n_clusters=args.n_clusters,
            ^   | (bad-continuation)
desc/original/__main__.py:179:0: C0330: Wrong continued indentation (add 4 spaces).
            louvain_resolution=args.louvain_resolution,
            ^   | (bad-continuation)
desc/original/__main__.py:180:0: C0330: Wrong continued indentation (add 4 spaces).
            n_neighbors=args.n_neighbors,
            ^   | (bad-continuation)
desc/original/__main__.py:181:0: C0330: Wrong continued indentation (add 4 spaces).
            pretrain_epochs=args.pretrain_epochs,
            ^   | (bad-continuation)
desc/original/__main__.py:182:0: C0330: Wrong continued indentation (add 4 spaces).
            batch_size=args.batch_size,
            ^   | (bad-continuation)
desc/original/__main__.py:183:0: C0330: Wrong continued indentation (add 4 spaces).
            activation=args.activation,
            ^   | (bad-continuation)
desc/original/__main__.py:184:0: C0330: Wrong continued indentation (add 4 spaces).
            actincenter=args.actincenter,
            ^   | (bad-continuation)
desc/original/__main__.py:185:0: C0330: Wrong continued indentation (add 4 spaces).
            drop_rate_SAE=args.drop_rate_SAE,
            ^   | (bad-continuation)
desc/original/__main__.py:186:0: C0330: Wrong continued indentation (add 4 spaces).
            is_stacked=args.is_stacked,
            ^   | (bad-continuation)
desc/original/__main__.py:187:0: C0330: Wrong continued indentation (add 4 spaces).
            use_earlyStop=args.use_earlyStop,
            ^   | (bad-continuation)
desc/original/__main__.py:188:0: C0330: Wrong continued indentation (add 4 spaces).
            use_ae_weights=args.use_ae_weights,
            ^   | (bad-continuation)
desc/original/__main__.py:189:0: C0330: Wrong continued indentation (add 4 spaces).
	    save_encoder_weights=save_encoder_weights,
            ^   | (bad-continuation)
desc/original/__main__.py:190:0: C0330: Wrong continued indentation (add 4 spaces).
            save_dir=args.save_dir,
            ^   | (bad-continuation)
desc/original/__main__.py:191:0: C0330: Wrong continued indentation (add 4 spaces).
            max_iter=args.max_iter,
            ^   | (bad-continuation)
desc/original/__main__.py:192:0: C0330: Wrong continued indentation (add 4 spaces).
            epochs_fit=args.epochs_fit,
            ^   | (bad-continuation)
desc/original/__main__.py:193:0: C0330: Wrong continued indentation (add 4 spaces).
            num_Cores=args.num_Cores,
            ^   | (bad-continuation)
desc/original/__main__.py:194:0: C0330: Wrong continued indentation (add 4 spaces).
            use_GPU=args.use_GPU,
            ^   | (bad-continuation)
desc/original/__main__.py:195:0: C0330: Wrong continued indentation (add 4 spaces).
            random_seed=args.random_seed,
            ^   | (bad-continuation)
desc/original/__main__.py:196:0: C0330: Wrong continued indentation (add 4 spaces).
            verbose=args.verbose,
            ^   | (bad-continuation)
desc/original/__main__.py:197:0: C0330: Wrong continued indentation (add 4 spaces).
	    do_tsne=args.do_tsne)
            ^   | (bad-continuation)
desc/original/__main__.py:199:42: C0326: Exactly one space required after comma
    adata.write(os.path.join(args.save_dir,"adata_desc.h5ad"))
                                          ^ (bad-whitespace)
desc/original/__main__.py:201:0: C0305: Trailing newlines (trailing-newlines)
desc/original/__main__.py:1:0: C0114: Missing module docstring (missing-module-docstring)
desc/original/__main__.py:18:0: C0410: Multiple imports on one line (os, sys, argparse, textwrap) (multiple-imports)
desc/original/__main__.py:18:0: C0413: Import "import os, sys, argparse, textwrap" should be placed at the top of the module (wrong-import-position)
desc/original/__main__.py:18:0: C0413: Import "import os, sys, argparse, textwrap" should be placed at the top of the module (wrong-import-position)
desc/original/__main__.py:18:0: C0413: Import "import os, sys, argparse, textwrap" should be placed at the top of the module (wrong-import-position)
desc/original/__main__.py:18:0: C0413: Import "import os, sys, argparse, textwrap" should be placed at the top of the module (wrong-import-position)
desc/original/__main__.py:19:0: E0401: Unable to import 'scanpy.api' (import-error)
desc/original/__main__.py:19:0: C0413: Import "import scanpy.api as sc" should be placed at the top of the module (wrong-import-position)
desc/original/__main__.py:26:0: C0116: Missing function or method docstring (missing-function-docstring)
desc/original/__main__.py:26:0: R0915: Too many statements (56/50) (too-many-statements)
desc/original/__main__.py:137:0: C0116: Missing function or method docstring (missing-function-docstring)
desc/original/__main__.py:140:4: C0415: Import outside toplevel (.preprocessing) (import-outside-toplevel)
desc/original/__main__.py:141:4: C0415: Import outside toplevel (train.train) (import-outside-toplevel)
desc/original/__main__.py:143:8: C0415: Import outside toplevel (tensorflow) (import-outside-toplevel)
desc/original/__main__.py:189:26: E0602: Undefined variable 'save_encoder_weights' (undefined-variable)
desc/original/__main__.py:173:4: W0612: Unused variable 'dims' (unused-variable)
************* Module desc.original.preprocessing
desc/original/preprocessing.py:7:15: C0303: Trailing whitespace (trailing-whitespace)
desc/original/preprocessing.py:9:27: C0326: Exactly one space required after comma
def read_dataset(input_file,transpose=False):
                           ^ (bad-whitespace)
desc/original/preprocessing.py:12:0: C0303: Trailing whitespace (trailing-whitespace)
desc/original/preprocessing.py:17:17: C0326: Exactly one space required around assignment
            adata=sc.read(input_file)
                 ^ (bad-whitespace)
desc/original/preprocessing.py:18:66: C0326: Exactly one space required after comma
        elif sum([str(input_file).endswith(str(i)) for i in ["tsv",'TSV','tab','data']]):
                                                                  ^ (bad-whitespace)
desc/original/preprocessing.py:18:72: C0326: Exactly one space required after comma
        elif sum([str(input_file).endswith(str(i)) for i in ["tsv",'TSV','tab','data']]):
                                                                        ^ (bad-whitespace)
desc/original/preprocessing.py:18:78: C0326: Exactly one space required after comma
        elif sum([str(input_file).endswith(str(i)) for i in ["tsv",'TSV','tab','data']]):
                                                                              ^ (bad-whitespace)
desc/original/preprocessing.py:19:17: C0326: Exactly one space required around assignment
            adata=sc.read_text(input_file,sep="\t",first_column_names=True)
                 ^ (bad-whitespace)
desc/original/preprocessing.py:19:41: C0326: Exactly one space required after comma
            adata=sc.read_text(input_file,sep="\t",first_column_names=True)
                                         ^ (bad-whitespace)
desc/original/preprocessing.py:19:50: C0326: Exactly one space required after comma
            adata=sc.read_text(input_file,sep="\t",first_column_names=True)
                                                  ^ (bad-whitespace)
desc/original/preprocessing.py:21:21: C0326: Exactly one space required around assignment
                adata=adata.T
                     ^ (bad-whitespace)
desc/original/preprocessing.py:22:66: C0326: Exactly one space required after comma
        elif sum([str(input_file).endswith(str(i)) for i in ['csv',"CSV"]]):
                                                                  ^ (bad-whitespace)
desc/original/preprocessing.py:23:74: C0303: Trailing whitespace (trailing-whitespace)
desc/original/preprocessing.py:23:17: C0326: Exactly one space required around assignment
            adata=sc.read_text(input_file,sep=",",first_column_names=True) 
                 ^ (bad-whitespace)
desc/original/preprocessing.py:23:41: C0326: Exactly one space required after comma
            adata=sc.read_text(input_file,sep=",",first_column_names=True) 
                                         ^ (bad-whitespace)
desc/original/preprocessing.py:23:49: C0326: Exactly one space required after comma
            adata=sc.read_text(input_file,sep=",",first_column_names=True) 
                                                 ^ (bad-whitespace)
desc/original/preprocessing.py:25:21: C0326: Exactly one space required around assignment
                adata=adata.T
                     ^ (bad-whitespace)
desc/original/preprocessing.py:27:91: C0303: Trailing whitespace (trailing-whitespace)
desc/original/preprocessing.py:31:62: C0303: Trailing whitespace (trailing-whitespace)
desc/original/preprocessing.py:31:11: C0326: Exactly one space required around assignment
        mtx=sc.read_mtx(os.path.join(input_file,"matrix.mtx")) 
           ^ (bad-whitespace)
desc/original/preprocessing.py:31:47: C0326: Exactly one space required after comma
        mtx=sc.read_mtx(os.path.join(input_file,"matrix.mtx")) 
                                               ^ (bad-whitespace)
desc/original/preprocessing.py:32:66: C0326: Exactly one space required after comma
        num_lines = sum(1 for line in open(os.path.join(input_file,'barcodes.tsv')))
                                                                  ^ (bad-whitespace)
desc/original/preprocessing.py:33:0: C0301: Line too long (124/100) (line-too-long)
desc/original/preprocessing.py:33:16: C0326: Exactly one space required around assignment
        cellinfo=pd.read_csv(os.path.join(input_file,"barcodes.tsv"),sep="\t",header=None if num_lines==mtx.shape[1] else 0)
                ^ (bad-whitespace)
desc/original/preprocessing.py:33:52: C0326: Exactly one space required after comma
        cellinfo=pd.read_csv(os.path.join(input_file,"barcodes.tsv"),sep="\t",header=None if num_lines==mtx.shape[1] else 0)
                                                    ^ (bad-whitespace)
desc/original/preprocessing.py:33:68: C0326: Exactly one space required after comma
        cellinfo=pd.read_csv(os.path.join(input_file,"barcodes.tsv"),sep="\t",header=None if num_lines==mtx.shape[1] else 0)
                                                                    ^ (bad-whitespace)
desc/original/preprocessing.py:33:77: C0326: Exactly one space required after comma
        cellinfo=pd.read_csv(os.path.join(input_file,"barcodes.tsv"),sep="\t",header=None if num_lines==mtx.shape[1] else 0)
                                                                             ^ (bad-whitespace)
desc/original/preprocessing.py:33:102: C0326: Exactly one space required around comparison
        cellinfo=pd.read_csv(os.path.join(input_file,"barcodes.tsv"),sep="\t",header=None if num_lines==mtx.shape[1] else 0)
                                                                                                      ^^ (bad-whitespace)
desc/original/preprocessing.py:35:32: C0326: Exactly one space required around assignment
            cellinfo['cellname']=cellinfo.iloc[:,0]
                                ^ (bad-whitespace)
desc/original/preprocessing.py:35:48: C0326: Exactly one space required after comma
            cellinfo['cellname']=cellinfo.iloc[:,0]
                                                ^ (bad-whitespace)
desc/original/preprocessing.py:36:66: C0326: Exactly one space required after comma
        num_lines = sum(1 for line in open(os.path.join(input_file,'genes.tsv')))
                                                                  ^ (bad-whitespace)
desc/original/preprocessing.py:37:0: C0301: Line too long (121/100) (line-too-long)
desc/original/preprocessing.py:37:16: C0326: Exactly one space required around assignment
        geneinfo=pd.read_csv(os.path.join(input_file,"genes.tsv"),sep="\t",header=None if num_lines==mtx.shape[0] else 0)
                ^ (bad-whitespace)
desc/original/preprocessing.py:37:52: C0326: Exactly one space required after comma
        geneinfo=pd.read_csv(os.path.join(input_file,"genes.tsv"),sep="\t",header=None if num_lines==mtx.shape[0] else 0)
                                                    ^ (bad-whitespace)
desc/original/preprocessing.py:37:65: C0326: Exactly one space required after comma
        geneinfo=pd.read_csv(os.path.join(input_file,"genes.tsv"),sep="\t",header=None if num_lines==mtx.shape[0] else 0)
                                                                 ^ (bad-whitespace)
desc/original/preprocessing.py:37:74: C0326: Exactly one space required after comma
        geneinfo=pd.read_csv(os.path.join(input_file,"genes.tsv"),sep="\t",header=None if num_lines==mtx.shape[0] else 0)
                                                                          ^ (bad-whitespace)
desc/original/preprocessing.py:37:99: C0326: Exactly one space required around comparison
        geneinfo=pd.read_csv(os.path.join(input_file,"genes.tsv"),sep="\t",header=None if num_lines==mtx.shape[0] else 0)
                                                                                                   ^^ (bad-whitespace)
desc/original/preprocessing.py:39:0: C0301: Line too long (128/100) (line-too-long)
desc/original/preprocessing.py:39:32: C0326: Exactly one space required around assignment
            geneinfo['genename']=geneinfo.iloc[:,1]# for 10x,the second columns is the genename, and the first column is gene_id
                                ^ (bad-whitespace)
desc/original/preprocessing.py:39:48: C0326: Exactly one space required after comma
            geneinfo['genename']=geneinfo.iloc[:,1]# for 10x,the second columns is the genename, and the first column is gene_id
                                                ^ (bad-whitespace)
desc/original/preprocessing.py:41:13: C0326: Exactly one space required around assignment
        adata=sc.AnnData(mtx.X.T,obs=cellinfo,var=geneinfo)
             ^ (bad-whitespace)
desc/original/preprocessing.py:41:32: C0326: Exactly one space required after comma
        adata=sc.AnnData(mtx.X.T,obs=cellinfo,var=geneinfo)
                                ^ (bad-whitespace)
desc/original/preprocessing.py:41:45: C0326: Exactly one space required after comma
        adata=sc.AnnData(mtx.X.T,obs=cellinfo,var=geneinfo)
                                             ^ (bad-whitespace)
desc/original/preprocessing.py:42:23: C0326: Exactly one space required around assignment
        adata.obs_names=adata.obs["cellname"]
                       ^ (bad-whitespace)
desc/original/preprocessing.py:43:23: C0326: Exactly one space required around assignment
        adata.var_names=adata.var["genename"]
                       ^ (bad-whitespace)
desc/original/preprocessing.py:48:82: C0303: Trailing whitespace (trailing-whitespace)
desc/original/preprocessing.py:48:28: C0326: Exactly one space required around assignment
    adata.uns["ProjectName"]="DESC created in"+str(now.strftime("%Y-%m-%d %H:%M")) 
                            ^ (bad-whitespace)
desc/original/preprocessing.py:52:0: C0303: Trailing whitespace (trailing-whitespace)
desc/original/preprocessing.py:53:25: C0326: Exactly one space required after comma
def prefilter_cells(adata,min_counts=None,max_counts=None,min_genes=200,max_genes=None):
                         ^ (bad-whitespace)
desc/original/preprocessing.py:53:41: C0326: Exactly one space required after comma
def prefilter_cells(adata,min_counts=None,max_counts=None,min_genes=200,max_genes=None):
                                         ^ (bad-whitespace)
desc/original/preprocessing.py:53:57: C0326: Exactly one space required after comma
def prefilter_cells(adata,min_counts=None,max_counts=None,min_genes=200,max_genes=None):
                                                         ^ (bad-whitespace)
desc/original/preprocessing.py:53:71: C0326: Exactly one space required after comma
def prefilter_cells(adata,min_counts=None,max_counts=None,min_genes=200,max_genes=None):
                                                                       ^ (bad-whitespace)
desc/original/preprocessing.py:56:10: C0326: Exactly one space required around assignment
    id_tmp=np.asarray([True]*adata.shape[0],dtype=bool)
          ^ (bad-whitespace)
desc/original/preprocessing.py:56:43: C0326: Exactly one space required after comma
    id_tmp=np.asarray([True]*adata.shape[0],dtype=bool)
                                           ^ (bad-whitespace)
desc/original/preprocessing.py:57:0: C0301: Line too long (122/100) (line-too-long)
desc/original/preprocessing.py:57:10: C0326: Exactly one space required around assignment
    id_tmp=np.logical_and(id_tmp,sc.pp.filter_cells(adata.X,min_genes=min_genes)[0]) if min_genes is not None  else id_tmp
          ^ (bad-whitespace)
desc/original/preprocessing.py:57:32: C0326: Exactly one space required after comma
    id_tmp=np.logical_and(id_tmp,sc.pp.filter_cells(adata.X,min_genes=min_genes)[0]) if min_genes is not None  else id_tmp
                                ^ (bad-whitespace)
desc/original/preprocessing.py:57:59: C0326: Exactly one space required after comma
    id_tmp=np.logical_and(id_tmp,sc.pp.filter_cells(adata.X,min_genes=min_genes)[0]) if min_genes is not None  else id_tmp
                                                           ^ (bad-whitespace)
desc/original/preprocessing.py:58:0: C0301: Line too long (122/100) (line-too-long)
desc/original/preprocessing.py:58:10: C0326: Exactly one space required around assignment
    id_tmp=np.logical_and(id_tmp,sc.pp.filter_cells(adata.X,max_genes=max_genes)[0]) if max_genes is not None  else id_tmp
          ^ (bad-whitespace)
desc/original/preprocessing.py:58:32: C0326: Exactly one space required after comma
    id_tmp=np.logical_and(id_tmp,sc.pp.filter_cells(adata.X,max_genes=max_genes)[0]) if max_genes is not None  else id_tmp
                                ^ (bad-whitespace)
desc/original/preprocessing.py:58:59: C0326: Exactly one space required after comma
    id_tmp=np.logical_and(id_tmp,sc.pp.filter_cells(adata.X,max_genes=max_genes)[0]) if max_genes is not None  else id_tmp
                                                           ^ (bad-whitespace)
desc/original/preprocessing.py:59:0: C0301: Line too long (125/100) (line-too-long)
desc/original/preprocessing.py:59:10: C0326: Exactly one space required around assignment
    id_tmp=np.logical_and(id_tmp,sc.pp.filter_cells(adata.X,min_counts=min_counts)[0]) if min_counts is not None  else id_tmp
          ^ (bad-whitespace)
desc/original/preprocessing.py:59:32: C0326: Exactly one space required after comma
    id_tmp=np.logical_and(id_tmp,sc.pp.filter_cells(adata.X,min_counts=min_counts)[0]) if min_counts is not None  else id_tmp
                                ^ (bad-whitespace)
desc/original/preprocessing.py:59:59: C0326: Exactly one space required after comma
    id_tmp=np.logical_and(id_tmp,sc.pp.filter_cells(adata.X,min_counts=min_counts)[0]) if min_counts is not None  else id_tmp
                                                           ^ (bad-whitespace)
desc/original/preprocessing.py:60:0: C0301: Line too long (125/100) (line-too-long)
desc/original/preprocessing.py:60:10: C0326: Exactly one space required around assignment
    id_tmp=np.logical_and(id_tmp,sc.pp.filter_cells(adata.X,max_counts=max_counts)[0]) if max_counts is not None  else id_tmp
          ^ (bad-whitespace)
desc/original/preprocessing.py:60:32: C0326: Exactly one space required after comma
    id_tmp=np.logical_and(id_tmp,sc.pp.filter_cells(adata.X,max_counts=max_counts)[0]) if max_counts is not None  else id_tmp
                                ^ (bad-whitespace)
desc/original/preprocessing.py:60:59: C0326: Exactly one space required after comma
    id_tmp=np.logical_and(id_tmp,sc.pp.filter_cells(adata.X,max_counts=max_counts)[0]) if max_counts is not None  else id_tmp
                                                           ^ (bad-whitespace)
desc/original/preprocessing.py:62:61: C0303: Trailing whitespace (trailing-whitespace)
desc/original/preprocessing.py:62:13: C0326: Exactly one space required around assignment
    adata.raw=sc.pp.log1p(adata,copy=True) #check the rowname 
             ^ (bad-whitespace)
desc/original/preprocessing.py:62:31: C0326: Exactly one space required after comma
    adata.raw=sc.pp.log1p(adata,copy=True) #check the rowname 
                               ^ (bad-whitespace)
desc/original/preprocessing.py:63:0: C0301: Line too long (102/100) (line-too-long)
desc/original/preprocessing.py:63:71: C0326: Exactly one space required after comma
    print("the var_names of adata.raw: adata.raw.var_names.is_unique=:",adata.raw.var_names.is_unique)
                                                                       ^ (bad-whitespace)
desc/original/preprocessing.py:64:0: C0303: Trailing whitespace (trailing-whitespace)
desc/original/preprocessing.py:66:0: C0303: Trailing whitespace (trailing-whitespace)
desc/original/preprocessing.py:67:0: C0303: Trailing whitespace (trailing-whitespace)
desc/original/preprocessing.py:68:25: C0326: Exactly one space required after comma
def prefilter_genes(adata,min_counts=None,max_counts=None,min_cells=10,max_cells=None):
                         ^ (bad-whitespace)
desc/original/preprocessing.py:68:41: C0326: Exactly one space required after comma
def prefilter_genes(adata,min_counts=None,max_counts=None,min_cells=10,max_cells=None):
                                         ^ (bad-whitespace)
desc/original/preprocessing.py:68:57: C0326: Exactly one space required after comma
def prefilter_genes(adata,min_counts=None,max_counts=None,min_cells=10,max_cells=None):
                                                         ^ (bad-whitespace)
desc/original/preprocessing.py:68:70: C0326: Exactly one space required after comma
def prefilter_genes(adata,min_counts=None,max_counts=None,min_cells=10,max_cells=None):
                                                                      ^ (bad-whitespace)
desc/original/preprocessing.py:71:10: C0326: Exactly one space required around assignment
    id_tmp=np.asarray([True]*adata.shape[1],dtype=bool)
          ^ (bad-whitespace)
desc/original/preprocessing.py:71:43: C0326: Exactly one space required after comma
    id_tmp=np.asarray([True]*adata.shape[1],dtype=bool)
                                           ^ (bad-whitespace)
desc/original/preprocessing.py:72:0: C0301: Line too long (122/100) (line-too-long)
desc/original/preprocessing.py:72:10: C0326: Exactly one space required around assignment
    id_tmp=np.logical_and(id_tmp,sc.pp.filter_genes(adata.X,min_cells=min_cells)[0]) if min_cells is not None  else id_tmp
          ^ (bad-whitespace)
desc/original/preprocessing.py:72:32: C0326: Exactly one space required after comma
    id_tmp=np.logical_and(id_tmp,sc.pp.filter_genes(adata.X,min_cells=min_cells)[0]) if min_cells is not None  else id_tmp
                                ^ (bad-whitespace)
desc/original/preprocessing.py:72:59: C0326: Exactly one space required after comma
    id_tmp=np.logical_and(id_tmp,sc.pp.filter_genes(adata.X,min_cells=min_cells)[0]) if min_cells is not None  else id_tmp
                                                           ^ (bad-whitespace)
desc/original/preprocessing.py:73:0: C0301: Line too long (122/100) (line-too-long)
desc/original/preprocessing.py:73:10: C0326: Exactly one space required around assignment
    id_tmp=np.logical_and(id_tmp,sc.pp.filter_genes(adata.X,max_cells=max_cells)[0]) if max_cells is not None  else id_tmp
          ^ (bad-whitespace)
desc/original/preprocessing.py:73:32: C0326: Exactly one space required after comma
    id_tmp=np.logical_and(id_tmp,sc.pp.filter_genes(adata.X,max_cells=max_cells)[0]) if max_cells is not None  else id_tmp
                                ^ (bad-whitespace)
desc/original/preprocessing.py:73:59: C0326: Exactly one space required after comma
    id_tmp=np.logical_and(id_tmp,sc.pp.filter_genes(adata.X,max_cells=max_cells)[0]) if max_cells is not None  else id_tmp
                                                           ^ (bad-whitespace)
desc/original/preprocessing.py:74:0: C0301: Line too long (125/100) (line-too-long)
desc/original/preprocessing.py:74:10: C0326: Exactly one space required around assignment
    id_tmp=np.logical_and(id_tmp,sc.pp.filter_genes(adata.X,min_counts=min_counts)[0]) if min_counts is not None  else id_tmp
          ^ (bad-whitespace)
desc/original/preprocessing.py:74:32: C0326: Exactly one space required after comma
    id_tmp=np.logical_and(id_tmp,sc.pp.filter_genes(adata.X,min_counts=min_counts)[0]) if min_counts is not None  else id_tmp
                                ^ (bad-whitespace)
desc/original/preprocessing.py:74:59: C0326: Exactly one space required after comma
    id_tmp=np.logical_and(id_tmp,sc.pp.filter_genes(adata.X,min_counts=min_counts)[0]) if min_counts is not None  else id_tmp
                                                           ^ (bad-whitespace)
desc/original/preprocessing.py:75:0: C0301: Line too long (125/100) (line-too-long)
desc/original/preprocessing.py:75:10: C0326: Exactly one space required around assignment
    id_tmp=np.logical_and(id_tmp,sc.pp.filter_genes(adata.X,max_counts=max_counts)[0]) if max_counts is not None  else id_tmp
          ^ (bad-whitespace)
desc/original/preprocessing.py:75:32: C0326: Exactly one space required after comma
    id_tmp=np.logical_and(id_tmp,sc.pp.filter_genes(adata.X,max_counts=max_counts)[0]) if max_counts is not None  else id_tmp
                                ^ (bad-whitespace)
desc/original/preprocessing.py:75:59: C0326: Exactly one space required after comma
    id_tmp=np.logical_and(id_tmp,sc.pp.filter_genes(adata.X,max_counts=max_counts)[0]) if max_counts is not None  else id_tmp
                                                           ^ (bad-whitespace)
desc/original/preprocessing.py:77:28: C0326: Exactly one space required after comma
    sc.pp.filter_cells(adata,min_genes=1)#avoiding some cell all 0
                            ^ (bad-whitespace)
desc/original/preprocessing.py:82:53: C0326: Exactly one space required after comma
def filter_cells_mito(adata, mito_percent_cutoff=0.10,nUMIbefore_filter_MT_gene=True):
                                                     ^ (bad-whitespace)
desc/original/preprocessing.py:83:14: C0326: Exactly one space required around assignment
    mito_genes=[name.startswith("MT-") for name in adata.var_names]
              ^ (bad-whitespace)
desc/original/preprocessing.py:84:22: C0326: Exactly one space required around comparison
    if sum(mito_genes)>0:
                      ^ (bad-whitespace)
desc/original/preprocessing.py:86:0: C0301: Line too long (110/100) (line-too-long)
desc/original/preprocessing.py:88:37: C0326: Exactly one space required around assignment
            adata.obs['percent_mito']=np.sum(adata[:,mito_genes].X,axis=1)/np.sum(adata.X,axis=1)
                                     ^ (bad-whitespace)
desc/original/preprocessing.py:88:52: C0326: Exactly one space required after comma
            adata.obs['percent_mito']=np.sum(adata[:,mito_genes].X,axis=1)/np.sum(adata.X,axis=1)
                                                    ^ (bad-whitespace)
desc/original/preprocessing.py:88:66: C0326: Exactly one space required after comma
            adata.obs['percent_mito']=np.sum(adata[:,mito_genes].X,axis=1)/np.sum(adata.X,axis=1)
                                                                  ^ (bad-whitespace)
desc/original/preprocessing.py:88:89: C0326: Exactly one space required after comma
            adata.obs['percent_mito']=np.sum(adata[:,mito_genes].X,axis=1)/np.sum(adata.X,axis=1)
                                                                                         ^ (bad-whitespace)
desc/original/preprocessing.py:91:33: C0303: Trailing whitespace (trailing-whitespace)
desc/original/preprocessing.py:92:44: C0326: Exactly one space required around assignment
                adata.obs['n_counts_before']=adata.X.sum(axis=1).A1
                                            ^ (bad-whitespace)
desc/original/preprocessing.py:93:43: C0326: Exactly one space required around assignment
                adata.obs['n_genes_before']=(adata.X!=0).sum(axis=1).A1
                                           ^ (bad-whitespace)
desc/original/preprocessing.py:93:52: C0326: Exactly one space required around comparison
                adata.obs['n_genes_before']=(adata.X!=0).sum(axis=1).A1
                                                    ^^ (bad-whitespace)
desc/original/preprocessing.py:95:44: C0326: Exactly one space required around assignment
                adata.obs['n_counts_before']=adata.X.sum(axis=1)
                                            ^ (bad-whitespace)
desc/original/preprocessing.py:96:43: C0326: Exactly one space required around assignment
                adata.obs['n_genes_before']=(adata.X!=0).sum(axis=1)
                                           ^ (bad-whitespace)
desc/original/preprocessing.py:96:52: C0326: Exactly one space required around comparison
                adata.obs['n_genes_before']=(adata.X!=0).sum(axis=1)
                                                    ^^ (bad-whitespace)
desc/original/preprocessing.py:102:33: C0303: Trailing whitespace (trailing-whitespace)
desc/original/preprocessing.py:103:43: C0326: Exactly one space required around assignment
                adata.obs['n_counts_after']=adata.X.sum(axis=1).A1
                                           ^ (bad-whitespace)
desc/original/preprocessing.py:104:42: C0326: Exactly one space required around assignment
                adata.obs['n_genes_after']=(adata.X!=0).sum(axis=1).A1
                                          ^ (bad-whitespace)
desc/original/preprocessing.py:104:51: C0326: Exactly one space required around comparison
                adata.obs['n_genes_after']=(adata.X!=0).sum(axis=1).A1
                                                   ^^ (bad-whitespace)
desc/original/preprocessing.py:106:43: C0326: Exactly one space required around assignment
                adata.obs['n_counts_after']=adata.X.sum(axis=1)
                                           ^ (bad-whitespace)
desc/original/preprocessing.py:107:42: C0326: Exactly one space required around assignment
                adata.obs['n_genes_after']=(adata.X!=0).sum(axis=1)
                                          ^ (bad-whitespace)
desc/original/preprocessing.py:107:51: C0326: Exactly one space required around comparison
                adata.obs['n_genes_after']=(adata.X!=0).sum(axis=1)
                                                   ^^ (bad-whitespace)
desc/original/preprocessing.py:109:29: C0303: Trailing whitespace (trailing-whitespace)
desc/original/preprocessing.py:110:33: C0326: Exactly one space required around assignment
            adata.obs['n_counts']=adata.X.sum(axis=1).A1
                                 ^ (bad-whitespace)
desc/original/preprocessing.py:111:32: C0326: Exactly one space required around assignment
            adata.obs['n_genes']=(adata.X!=0).sum(axis=1).A1
                                ^ (bad-whitespace)
desc/original/preprocessing.py:111:41: C0326: Exactly one space required around comparison
            adata.obs['n_genes']=(adata.X!=0).sum(axis=1).A1
                                         ^^ (bad-whitespace)
desc/original/preprocessing.py:113:33: C0326: Exactly one space required around assignment
            adata.obs['n_counts']=adata.X.sum(axis=1)
                                 ^ (bad-whitespace)
desc/original/preprocessing.py:114:32: C0326: Exactly one space required around assignment
            adata.obs['n_genes']=(adata.X!=0).sum(axis=1)
                                ^ (bad-whitespace)
desc/original/preprocessing.py:114:41: C0326: Exactly one space required around comparison
            adata.obs['n_genes']=(adata.X!=0).sum(axis=1)
                                         ^^ (bad-whitespace)
desc/original/preprocessing.py:115:0: C0303: Trailing whitespace (trailing-whitespace)
desc/original/preprocessing.py:116:24: C0326: Exactly one space required after comma
def scale_by_group(adata,groupby,scale_data=0,max_value=6):
                        ^ (bad-whitespace)
desc/original/preprocessing.py:116:32: C0326: Exactly one space required after comma
def scale_by_group(adata,groupby,scale_data=0,max_value=6):
                                ^ (bad-whitespace)
desc/original/preprocessing.py:116:45: C0326: Exactly one space required after comma
def scale_by_group(adata,groupby,scale_data=0,max_value=6):
                                             ^ (bad-whitespace)
desc/original/preprocessing.py:117:17: C0326: Exactly one space required around comparison
    if scale_data==0: return adata
                 ^^ (bad-whitespace)
desc/original/preprocessing.py:118:17: C0326: Exactly one space required around comparison
    if scale_data==1: return sc.pp.scale(adata,zero_center=True, max_value=max_value,copy=True)
                 ^^ (bad-whitespace)
desc/original/preprocessing.py:118:46: C0326: Exactly one space required after comma
    if scale_data==1: return sc.pp.scale(adata,zero_center=True, max_value=max_value,copy=True)
                                              ^ (bad-whitespace)
desc/original/preprocessing.py:118:84: C0326: Exactly one space required after comma
    if scale_data==1: return sc.pp.scale(adata,zero_center=True, max_value=max_value,copy=True)
                                                                                    ^ (bad-whitespace)
desc/original/preprocessing.py:120:10: C0326: Exactly one space required around assignment
        df=pd.Series(adata.obs[groupby],dtype="category")
          ^ (bad-whitespace)
desc/original/preprocessing.py:120:39: C0326: Exactly one space required after comma
        df=pd.Series(adata.obs[groupby],dtype="category")
                                       ^ (bad-whitespace)
desc/original/preprocessing.py:122:15: C0326: Exactly one space required around assignment
            tmp=adata[df==category].X
               ^ (bad-whitespace)
desc/original/preprocessing.py:122:24: C0326: Exactly one space required around comparison
            tmp=adata[df==category].X
                        ^^ (bad-whitespace)
desc/original/preprocessing.py:123:17: C0326: Exactly one space required after comma
            mean0,var0=get_mean_var(tmp)
                 ^ (bad-whitespace)
desc/original/preprocessing.py:123:22: C0326: Exactly one space required around assignment
            mean0,var0=get_mean_var(tmp)
                      ^ (bad-whitespace)
desc/original/preprocessing.py:124:15: C0326: Exactly one space required around assignment
            sd0=np.sqrt(var0)
               ^ (bad-whitespace)
desc/original/preprocessing.py:125:19: C0326: Exactly one space required around comparison
            sd0[sd0<=1e-5]=1e-5
                   ^^ (bad-whitespace)
desc/original/preprocessing.py:125:26: C0326: Exactly one space required around assignment
            sd0[sd0<=1e-5]=1e-5
                          ^ (bad-whitespace)
desc/original/preprocessing.py:127:19: C0326: Exactly one space required around assignment
                tmp=tmp.toarray()
                   ^ (bad-whitespace)
desc/original/preprocessing.py:128:15: C0326: Exactly one space required around assignment
            tmp-=mean0
               ^^ (bad-whitespace)
desc/original/preprocessing.py:129:15: C0326: Exactly one space required around assignment
            tmp/=sd0
               ^^ (bad-whitespace)
desc/original/preprocessing.py:131:23: C0326: Exactly one space required around comparison
                tmp[tmp>max_value]=max_value
                       ^ (bad-whitespace)
desc/original/preprocessing.py:131:34: C0326: Exactly one space required around assignment
                tmp[tmp>max_value]=max_value
                                  ^ (bad-whitespace)
desc/original/preprocessing.py:132:15: C0326: Exactly one space required around assignment
            res=np.vstack((res,np.copy(tmp))) if res is not None else np.copy(tmp)
               ^ (bad-whitespace)
desc/original/preprocessing.py:132:30: C0326: Exactly one space required after comma
            res=np.vstack((res,np.copy(tmp))) if res is not None else np.copy(tmp)
                              ^ (bad-whitespace)
desc/original/preprocessing.py:133:15: C0326: Exactly one space required around assignment
        adata.X=res
               ^ (bad-whitespace)
desc/original/preprocessing.py:135:13: C0326: Exactly one space required around assignment
        adata=sc.pp.scale(adata,zero_center=True, max_value=max_value,copy=True)
             ^ (bad-whitespace)
desc/original/preprocessing.py:135:31: C0326: Exactly one space required after comma
        adata=sc.pp.scale(adata,zero_center=True, max_value=max_value,copy=True)
                               ^ (bad-whitespace)
desc/original/preprocessing.py:135:69: C0326: Exactly one space required after comma
        adata=sc.pp.scale(adata,zero_center=True, max_value=max_value,copy=True)
                                                                     ^ (bad-whitespace)
desc/original/preprocessing.py:138:0: C0303: Trailing whitespace (trailing-whitespace)
desc/original/preprocessing.py:140:0: C0303: Trailing whitespace (trailing-whitespace)
desc/original/preprocessing.py:142:0: C0301: Line too long (126/100) (line-too-long)
desc/original/preprocessing.py:142:28: C0326: Exactly one space required after comma
def OriginalClustering(adata,resolution=1.2,n_neighbors=20,n_comps=50,n_PC=20,n_job=4,dotsne=True,doumap=True,dolouvain=True):
                            ^ (bad-whitespace)
desc/original/preprocessing.py:142:43: C0326: Exactly one space required after comma
def OriginalClustering(adata,resolution=1.2,n_neighbors=20,n_comps=50,n_PC=20,n_job=4,dotsne=True,doumap=True,dolouvain=True):
                                           ^ (bad-whitespace)
desc/original/preprocessing.py:142:58: C0326: Exactly one space required after comma
def OriginalClustering(adata,resolution=1.2,n_neighbors=20,n_comps=50,n_PC=20,n_job=4,dotsne=True,doumap=True,dolouvain=True):
                                                          ^ (bad-whitespace)
desc/original/preprocessing.py:142:69: C0326: Exactly one space required after comma
def OriginalClustering(adata,resolution=1.2,n_neighbors=20,n_comps=50,n_PC=20,n_job=4,dotsne=True,doumap=True,dolouvain=True):
                                                                     ^ (bad-whitespace)
desc/original/preprocessing.py:142:77: C0326: Exactly one space required after comma
def OriginalClustering(adata,resolution=1.2,n_neighbors=20,n_comps=50,n_PC=20,n_job=4,dotsne=True,doumap=True,dolouvain=True):
                                                                             ^ (bad-whitespace)
desc/original/preprocessing.py:142:85: C0326: Exactly one space required after comma
def OriginalClustering(adata,resolution=1.2,n_neighbors=20,n_comps=50,n_PC=20,n_job=4,dotsne=True,doumap=True,dolouvain=True):
                                                                                     ^ (bad-whitespace)
desc/original/preprocessing.py:142:97: C0326: Exactly one space required after comma
def OriginalClustering(adata,resolution=1.2,n_neighbors=20,n_comps=50,n_PC=20,n_job=4,dotsne=True,doumap=True,dolouvain=True):
                                                                                                 ^ (bad-whitespace)
desc/original/preprocessing.py:142:109: C0326: Exactly one space required after comma
def OriginalClustering(adata,resolution=1.2,n_neighbors=20,n_comps=50,n_PC=20,n_job=4,dotsne=True,doumap=True,dolouvain=True):
                                                                                                             ^ (bad-whitespace)
desc/original/preprocessing.py:144:19: C0326: Exactly one space required after comma
    sc.tl.pca(adata,n_comps=n_comps)
                   ^ (bad-whitespace)
desc/original/preprocessing.py:145:9: C0326: Exactly one space required around assignment
    n_pcs=n_PC if n_PC<n_comps else n_comps
         ^ (bad-whitespace)
desc/original/preprocessing.py:145:22: C0326: Exactly one space required around comparison
    n_pcs=n_PC if n_PC<n_comps else n_comps
                      ^ (bad-whitespace)
desc/original/preprocessing.py:148:24: C0326: Exactly one space required after comma
        sc.tl.tsne(adata,random_state=2,learning_rate=150,n_pcs=n_PC,n_jobs=n_job)
                        ^ (bad-whitespace)
desc/original/preprocessing.py:148:39: C0326: Exactly one space required after comma
        sc.tl.tsne(adata,random_state=2,learning_rate=150,n_pcs=n_PC,n_jobs=n_job)
                                       ^ (bad-whitespace)
desc/original/preprocessing.py:148:57: C0326: Exactly one space required after comma
        sc.tl.tsne(adata,random_state=2,learning_rate=150,n_pcs=n_PC,n_jobs=n_job)
                                                         ^ (bad-whitespace)
desc/original/preprocessing.py:148:68: C0326: Exactly one space required after comma
        sc.tl.tsne(adata,random_state=2,learning_rate=150,n_pcs=n_PC,n_jobs=n_job)
                                                                    ^ (bad-whitespace)
desc/original/preprocessing.py:150:32: C0326: Exactly one space required around assignment
        adata.obsm["X_tsne.ori"]=adata.obsm['X_tsne']
                                ^ (bad-whitespace)
desc/original/preprocessing.py:151:12: C0303: Trailing whitespace (trailing-whitespace)
desc/original/preprocessing.py:153:29: C0326: Exactly one space required after comma
        sc.pp.neighbors(adata,n_neighbors=n_neighbors)
                             ^ (bad-whitespace)
desc/original/preprocessing.py:156:32: C0326: Exactly one space required around assignment
        adata.obsm['X_umap.ori']=adata.obsm['X_umap']
                                ^ (bad-whitespace)
desc/original/preprocessing.py:158:27: C0326: Exactly one space required after comma
        sc.tl.louvain(adata,resolution=resolution)
                           ^ (bad-whitespace)
desc/original/preprocessing.py:159:32: C0326: Exactly one space required around assignment
        adata.obs['louvain_ori']=adata.obs['louvain']
                                ^ (bad-whitespace)
desc/original/preprocessing.py:164:15: C0326: Exactly one space required around assignment
    first2ratio=[name for name in adata.uns.key() if str(name).startswith("prob_matrix")]
               ^ (bad-whitespace)
desc/original/preprocessing.py:166:14: C0326: Exactly one space required around assignment
        q_pred=adata.uns[key_]
              ^ (bad-whitespace)
desc/original/preprocessing.py:167:19: C0326: Exactly one space required around assignment
        q_pred_sort=np.sort(q_pred,axis=1)
                   ^ (bad-whitespace)
desc/original/preprocessing.py:167:34: C0326: Exactly one space required after comma
        q_pred_sort=np.sort(q_pred,axis=1)
                                  ^ (bad-whitespace)
desc/original/preprocessing.py:168:9: C0326: Exactly one space required around assignment
        y=q_pred_sort[:,-1]/q_pred_sort[:,-2]
         ^ (bad-whitespace)
desc/original/preprocessing.py:168:23: C0326: Exactly one space required after comma
        y=q_pred_sort[:,-1]/q_pred_sort[:,-2]
                       ^ (bad-whitespace)
desc/original/preprocessing.py:168:41: C0326: Exactly one space required after comma
        y=q_pred_sort[:,-1]/q_pred_sort[:,-2]
                                         ^ (bad-whitespace)
desc/original/preprocessing.py:169:58: C0326: Exactly one space required around assignment
        adata["first2ratio_"+str(key_).split("matrix")[1]]=y
                                                          ^ (bad-whitespace)
desc/original/preprocessing.py:173:3: C0303: Trailing whitespace (trailing-whitespace)
desc/original/preprocessing.py:174:20: C0326: Exactly one space required after comma
def getdims(x=(10000,200)):
                    ^ (bad-whitespace)
desc/original/preprocessing.py:178:17: C0326: Exactly one space required around comparison
    assert len(x)==2
                 ^^ (bad-whitespace)
desc/original/preprocessing.py:179:12: C0326: Exactly one space required around assignment
    n_sample=x[0]
            ^ (bad-whitespace)
desc/original/preprocessing.py:180:15: C0326: Exactly one space required around comparison
    if n_sample>20000:# may be need complex network
               ^ (bad-whitespace)
desc/original/preprocessing.py:181:12: C0326: Exactly one space required around assignment
        dims=[x[-1],128,32]
            ^ (bad-whitespace)
desc/original/preprocessing.py:181:19: C0326: Exactly one space required after comma
        dims=[x[-1],128,32]
                   ^ (bad-whitespace)
desc/original/preprocessing.py:181:23: C0326: Exactly one space required after comma
        dims=[x[-1],128,32]
                       ^ (bad-whitespace)
desc/original/preprocessing.py:182:17: C0326: Exactly one space required around comparison
    elif n_sample>10000:#10000
                 ^ (bad-whitespace)
desc/original/preprocessing.py:183:12: C0326: Exactly one space required around assignment
        dims=[x[-1],64,32]
            ^ (bad-whitespace)
desc/original/preprocessing.py:183:19: C0326: Exactly one space required after comma
        dims=[x[-1],64,32]
                   ^ (bad-whitespace)
desc/original/preprocessing.py:183:22: C0326: Exactly one space required after comma
        dims=[x[-1],64,32]
                      ^ (bad-whitespace)
desc/original/preprocessing.py:184:17: C0326: Exactly one space required around comparison
    elif n_sample>5000: #5000
                 ^ (bad-whitespace)
desc/original/preprocessing.py:185:12: C0326: Exactly one space required around assignment
        dims=[x[-1],32,16] #16
            ^ (bad-whitespace)
desc/original/preprocessing.py:185:19: C0326: Exactly one space required after comma
        dims=[x[-1],32,16] #16
                   ^ (bad-whitespace)
desc/original/preprocessing.py:185:22: C0326: Exactly one space required after comma
        dims=[x[-1],32,16] #16
                      ^ (bad-whitespace)
desc/original/preprocessing.py:186:17: C0326: Exactly one space required around comparison
    elif n_sample>2000:
                 ^ (bad-whitespace)
desc/original/preprocessing.py:187:12: C0326: Exactly one space required around assignment
        dims=[x[-1],128]
            ^ (bad-whitespace)
desc/original/preprocessing.py:187:19: C0326: Exactly one space required after comma
        dims=[x[-1],128]
                   ^ (bad-whitespace)
desc/original/preprocessing.py:188:17: C0326: Exactly one space required around comparison
    elif n_sample>500:
                 ^ (bad-whitespace)
desc/original/preprocessing.py:189:12: C0326: Exactly one space required around assignment
        dims=[x[-1],64]
            ^ (bad-whitespace)
desc/original/preprocessing.py:189:19: C0326: Exactly one space required after comma
        dims=[x[-1],64]
                   ^ (bad-whitespace)
desc/original/preprocessing.py:191:12: C0326: Exactly one space required around assignment
        dims=[x[-1],16]
            ^ (bad-whitespace)
desc/original/preprocessing.py:191:19: C0326: Exactly one space required after comma
        dims=[x[-1],16]
                   ^ (bad-whitespace)
desc/original/preprocessing.py:194:0: C0305: Trailing newlines (trailing-newlines)
desc/original/preprocessing.py:1:0: C0114: Missing module docstring (missing-module-docstring)
desc/original/preprocessing.py:1:0: E0401: Unable to import 'scanpy.api' (import-error)
desc/original/preprocessing.py:2:0: E0401: Unable to import 'pandas' (import-error)
desc/original/preprocessing.py:4:0: E0401: Unable to import 'scipy' (import-error)
desc/original/preprocessing.py:6:0: E0401: Unable to import 'scipy.sparse' (import-error)
desc/original/preprocessing.py:53:0: C0116: Missing function or method docstring (missing-function-docstring)
desc/original/preprocessing.py:61:4: W0212: Access to a protected member _inplace_subset_obs of a client class (protected-access)
desc/original/preprocessing.py:68:0: C0116: Missing function or method docstring (missing-function-docstring)
desc/original/preprocessing.py:76:4: W0212: Access to a protected member _inplace_subset_var of a client class (protected-access)
desc/original/preprocessing.py:82:0: C0103: Argument name "nUMIbefore_filter_MT_gene" doesn't conform to snake_case naming style (invalid-name)
desc/original/preprocessing.py:82:0: C0116: Missing function or method docstring (missing-function-docstring)
desc/original/preprocessing.py:86:40: E1101: Instance of 'ndarray' has no 'A1' member (no-member)
desc/original/preprocessing.py:86:84: E1101: Instance of 'ndarray' has no 'A1' member (no-member)
desc/original/preprocessing.py:97:12: W0212: Access to a protected member _inplace_subset_obs of a client class (protected-access)
desc/original/preprocessing.py:100:12: W0212: Access to a protected member _inplace_subset_var of a client class (protected-access)
desc/original/preprocessing.py:101:12: W0212: Access to a protected member _inplace_subset_obs of a client class (protected-access)
desc/original/preprocessing.py:116:0: C0116: Missing function or method docstring (missing-function-docstring)
desc/original/preprocessing.py:117:22: C0321: More than one statement on a single line (multiple-statements)
desc/original/preprocessing.py:118:22: C0321: More than one statement on a single line (multiple-statements)
desc/original/preprocessing.py:120:8: C0103: Variable name "df" doesn't conform to snake_case naming style (invalid-name)
desc/original/preprocessing.py:123:23: E0602: Undefined variable 'get_mean_var' (undefined-variable)
desc/original/preprocessing.py:142:0: C0103: Function name "OriginalClustering" doesn't conform to snake_case naming style (invalid-name)
desc/original/preprocessing.py:142:0: C0103: Argument name "n_PC" doesn't conform to snake_case naming style (invalid-name)
desc/original/preprocessing.py:142:0: C0116: Missing function or method docstring (missing-function-docstring)
desc/original/preprocessing.py:142:0: R0913: Too many arguments (9/5) (too-many-arguments)
desc/original/preprocessing.py:145:4: W0612: Unused variable 'n_pcs' (unused-variable)
desc/original/preprocessing.py:163:0: C0116: Missing function or method docstring (missing-function-docstring)
desc/original/preprocessing.py:168:8: C0103: Variable name "y" doesn't conform to snake_case naming style (invalid-name)
desc/original/preprocessing.py:174:0: C0103: Argument name "x" doesn't conform to snake_case naming style (invalid-name)
************* Module desc.original.network
desc/original/network.py:4:25: C0303: Trailing whitespace (trailing-whitespace)
desc/original/network.py:23:90: C0326: Exactly one space required after comma
from keras.callbacks import TensorBoard, ModelCheckpoint, EarlyStopping, ReduceLROnPlateau,History
                                                                                          ^ (bad-whitespace)
desc/original/network.py:25:30: C0326: Exactly one space required after comma
from keras.models import Model,load_model
                              ^ (bad-whitespace)
desc/original/network.py:40:0: C0301: Line too long (120/100) (line-too-long)
desc/original/network.py:49:0: C0301: Line too long (120/100) (line-too-long)
desc/original/network.py:70:0: C0301: Line too long (116/100) (line-too-long)
desc/original/network.py:82:0: C0301: Line too long (102/100) (line-too-long)
desc/original/network.py:84:0: C0301: Line too long (111/100) (line-too-long)
desc/original/network.py:102:62: C0303: Trailing whitespace (trailing-whitespace)
desc/original/network.py:104:0: C0330: Wrong continued indentation (remove 0 space).
		 tol=0.005,
                 | (bad-continuation)
desc/original/network.py:106:0: C0301: Line too long (124/100) (line-too-long)
desc/original/network.py:107:65: C0303: Trailing whitespace (trailing-whitespace)
desc/original/network.py:108:41: C0303: Trailing whitespace (trailing-whitespace)
desc/original/network.py:112:0: C0330: Wrong continued indentation (remove 0 space).
		 activation='relu',
                 | (bad-continuation)
desc/original/network.py:113:0: C0301: Line too long (110/100) (line-too-long)
desc/original/network.py:113:110: C0303: Trailing whitespace (trailing-whitespace)
desc/original/network.py:118:0: C0330: Wrong continued indentation (remove 0 space).
		 save_encoder_weights=False,
                 | (bad-continuation)
desc/original/network.py:119:0: C0301: Line too long (268/100) (line-too-long)
desc/original/network.py:126:14: C0326: Exactly one space required around assignment
        self.x=x #feature n*p, n:number of cells, p: number of genes
              ^ (bad-whitespace)
desc/original/network.py:128:16: C0326: Exactly one space required around assignment
        self.tol=tol
                ^ (bad-whitespace)
desc/original/network.py:129:17: C0326: Exactly one space required around assignment
        self.init=init
                 ^ (bad-whitespace)
desc/original/network.py:130:56: C0303: Trailing whitespace (trailing-whitespace)
desc/original/network.py:132:23: C0326: Exactly one space required around assignment
        self.is_stacked=is_stacked
                       ^ (bad-whitespace)
desc/original/network.py:133:23: C0326: Exactly one space required around assignment
        self.resolution=louvain_resolution
                       ^ (bad-whitespace)
desc/original/network.py:134:24: C0326: Exactly one space required around assignment
        self.n_neighbors=n_neighbors
                        ^ (bad-whitespace)
desc/original/network.py:135:28: C0326: Exactly one space required around assignment
        self.pretrain_epochs=pretrain_epochs
                            ^ (bad-whitespace)
desc/original/network.py:136:23: C0326: Exactly one space required around assignment
        self.batch_size=batch_size
                       ^ (bad-whitespace)
desc/original/network.py:137:24: C0326: Exactly one space required around assignment
        self.random_seed=random_seed
                        ^ (bad-whitespace)
desc/original/network.py:138:23: C0326: Exactly one space required around assignment
        self.activation=activation
                       ^ (bad-whitespace)
desc/original/network.py:139:24: C0326: Exactly one space required around assignment
        self.actincenter=actincenter
                        ^ (bad-whitespace)
desc/original/network.py:140:26: C0326: Exactly one space required around assignment
        self.drop_rate_SAE=drop_rate_SAE
                          ^ (bad-whitespace)
desc/original/network.py:141:23: C0326: Exactly one space required around assignment
        self.is_stacked=is_stacked
                       ^ (bad-whitespace)
desc/original/network.py:142:26: C0326: Exactly one space required around assignment
        self.use_earlyStop=use_earlyStop
                          ^ (bad-whitespace)
desc/original/network.py:143:27: C0326: Exactly one space required around assignment
        self.use_ae_weights=use_ae_weights
                           ^ (bad-whitespace)
desc/original/network.py:144:33: C0326: Exactly one space required around assignment
        self.save_encoder_weights=save_encoder_weights
                                 ^ (bad-whitespace)
desc/original/network.py:145:21: C0326: Exactly one space required around assignment
        self.save_dir=save_dir
                     ^ (bad-whitespace)
desc/original/network.py:152:0: C0303: Trailing whitespace (trailing-whitespace)
desc/original/network.py:154:21: C0326: Exactly one space required after comma
    def pretrain(self,n_clusters=None):
                     ^ (bad-whitespace)
desc/original/network.py:155:11: C0326: Exactly one space required around assignment
        sae=SAE(dims=self.dims,
           ^ (bad-whitespace)
desc/original/network.py:156:0: C0330: Wrong continued indentation (remove 0 space).
		act=self.activation,
                | (bad-continuation)
desc/original/network.py:163:0: C0330: Wrong continued indentation.
           )
           ^   || (bad-continuation)
desc/original/network.py:166:0: C0301: Line too long (110/100) (line-too-long)
desc/original/network.py:166:91: C0326: Exactly one space required after comma
        print("Checking whether %s  exists in the directory"%str(os.path.join(self.save_dir,'ae_weights,h5')))
                                                                                           ^ (bad-whitespace)
desc/original/network.py:167:31: C0303: Trailing whitespace (trailing-whitespace)
desc/original/network.py:170:34: C0326: Exactly one space required after comma
                    sae.fit(self.x,epochs=self.pretrain_epochs)
                                  ^ (bad-whitespace)
desc/original/network.py:172:35: C0326: Exactly one space required after comma
                    sae.fit2(self.x,epochs=self.pretrain_epochs)
                                   ^ (bad-whitespace)
desc/original/network.py:173:32: C0326: Exactly one space required around assignment
                self.autoencoder=sae.autoencoders
                                ^ (bad-whitespace)
desc/original/network.py:174:28: C0326: Exactly one space required around assignment
                self.encoder=sae.encoder
                            ^ (bad-whitespace)
desc/original/network.py:176:72: C0326: Exactly one space required after comma
                sae.autoencoders.load_weights(os.path.join(self.save_dir,"ae_weights.h5"))
                                                                        ^ (bad-whitespace)
desc/original/network.py:177:32: C0326: Exactly one space required around assignment
                self.autoencoder=sae.autoencoders
                                ^ (bad-whitespace)
desc/original/network.py:178:28: C0326: Exactly one space required around assignment
                self.encoder=sae.encoder
                            ^ (bad-whitespace)
desc/original/network.py:181:30: C0326: Exactly one space required after comma
                sae.fit(self.x,epochs=self.pretrain_epochs)
                              ^ (bad-whitespace)
desc/original/network.py:183:31: C0326: Exactly one space required after comma
                sae.fit2(self.x,epochs=self.pretrain_epochs)
                               ^ (bad-whitespace)
desc/original/network.py:184:28: C0326: Exactly one space required around assignment
            self.autoencoder=sae.autoencoders
                            ^ (bad-whitespace)
desc/original/network.py:185:24: C0326: Exactly one space required around assignment
            self.encoder=sae.encoder
                        ^ (bad-whitespace)
desc/original/network.py:186:0: C0303: Trailing whitespace (trailing-whitespace)
desc/original/network.py:189:56: C0326: Exactly one space required after comma
        if not os.path.isfile(os.path.join(self.save_dir,"ae_weights.h5")):
                                                        ^ (bad-whitespace)
desc/original/network.py:190:68: C0326: Exactly one space required after comma
            self.autoencoder.save_weights(os.path.join(self.save_dir,'ae_weights.h5'))
                                                                    ^ (bad-whitespace)
desc/original/network.py:191:64: C0326: Exactly one space required after comma
            self.encoder.save_weights(os.path.join(self.save_dir,'encoder_weights.h5'))
                                                                ^ (bad-whitespace)
desc/original/network.py:194:16: C0326: Exactly one space required around assignment
        features=self.extract_features(self.x)
                ^ (bad-whitespace)
desc/original/network.py:195:16: C0326: Exactly one space required around assignment
        features=np.asarray(features)
                ^ (bad-whitespace)
desc/original/network.py:196:32: C0326: Exactly one space required after comma
        if isinstance(n_clusters,int):
                                ^ (bad-whitespace)
desc/original/network.py:197:0: C0301: Line too long (108/100) (line-too-long)
desc/original/network.py:200:26: C0326: Exactly one space required before assignment
            self.init_pred= np.copy(Y_pred_init)
                          ^ (bad-whitespace)
desc/original/network.py:201:27: C0326: Exactly one space required around assignment
            self.n_clusters=n_clusters
                           ^ (bad-whitespace)
desc/original/network.py:202:27: C0326: Exactly one space required around assignment
            cluster_centers=kmeans.cluster_centers_
                           ^ (bad-whitespace)
desc/original/network.py:203:30: C0326: Exactly one space required around assignment
            self.init_centroid=[cluster_centers]
                              ^ (bad-whitespace)
desc/original/network.py:205:0: C0301: Line too long (103/100) (line-too-long)
desc/original/network.py:208:18: C0326: Exactly one space required around assignment
            adata0=sc.AnnData(features)
                  ^ (bad-whitespace)
desc/original/network.py:209:30: C0326: Exactly one space required around comparison
            if adata0.shape[0]>200000:
                              ^ (bad-whitespace)
desc/original/network.py:210:57: C0303: Trailing whitespace (trailing-whitespace)
desc/original/network.py:211:85: C0303: Trailing whitespace (trailing-whitespace)
desc/original/network.py:211:22: C0326: Exactly one space required around assignment
                adata0=adata0[np.random.choice(adata0.shape[0],200000,replace=False)] 
                      ^ (bad-whitespace)
desc/original/network.py:211:62: C0326: Exactly one space required after comma
                adata0=adata0[np.random.choice(adata0.shape[0],200000,replace=False)] 
                                                              ^ (bad-whitespace)
desc/original/network.py:211:69: C0326: Exactly one space required after comma
                adata0=adata0[np.random.choice(adata0.shape[0],200000,replace=False)] 
                                                                     ^ (bad-whitespace)
desc/original/network.py:213:32: C0326: Exactly one space required after comma
            sc.tl.louvain(adata0,resolution=self.resolution)
                                ^ (bad-whitespace)
desc/original/network.py:214:23: C0326: Exactly one space required around assignment
            Y_pred_init=adata0.obs['louvain']
                       ^ (bad-whitespace)
desc/original/network.py:215:26: C0326: Exactly one space required around assignment
            self.init_pred=np.asarray(Y_pred_init,dtype=int)
                          ^ (bad-whitespace)
desc/original/network.py:215:49: C0326: Exactly one space required after comma
            self.init_pred=np.asarray(Y_pred_init,dtype=int)
                                                 ^ (bad-whitespace)
desc/original/network.py:216:20: C0326: Exactly one space required around assignment
            features=pd.DataFrame(adata0.X,index=np.arange(0,adata0.shape[0]))
                    ^ (bad-whitespace)
desc/original/network.py:216:42: C0326: Exactly one space required after comma
            features=pd.DataFrame(adata0.X,index=np.arange(0,adata0.shape[0]))
                                          ^ (bad-whitespace)
desc/original/network.py:216:60: C0326: Exactly one space required after comma
            features=pd.DataFrame(adata0.X,index=np.arange(0,adata0.shape[0]))
                                                            ^ (bad-whitespace)
desc/original/network.py:217:17: C0326: Exactly one space required around assignment
            Group=pd.Series(self.init_pred,index=np.arange(0,adata0.shape[0]),name="Group")
                 ^ (bad-whitespace)
desc/original/network.py:217:42: C0326: Exactly one space required after comma
            Group=pd.Series(self.init_pred,index=np.arange(0,adata0.shape[0]),name="Group")
                                          ^ (bad-whitespace)
desc/original/network.py:217:60: C0326: Exactly one space required after comma
            Group=pd.Series(self.init_pred,index=np.arange(0,adata0.shape[0]),name="Group")
                                                            ^ (bad-whitespace)
desc/original/network.py:217:77: C0326: Exactly one space required after comma
            Group=pd.Series(self.init_pred,index=np.arange(0,adata0.shape[0]),name="Group")
                                                                             ^ (bad-whitespace)
desc/original/network.py:218:24: C0326: Exactly one space required around assignment
            Mergefeature=pd.concat([features,Group],axis=1)
                        ^ (bad-whitespace)
desc/original/network.py:218:44: C0326: Exactly one space required after comma
            Mergefeature=pd.concat([features,Group],axis=1)
                                            ^ (bad-whitespace)
desc/original/network.py:218:51: C0326: Exactly one space required after comma
            Mergefeature=pd.concat([features,Group],axis=1)
                                                   ^ (bad-whitespace)
desc/original/network.py:219:27: C0326: Exactly one space required around assignment
            cluster_centers=np.asarray(Mergefeature.groupby("Group").mean())
                           ^ (bad-whitespace)
desc/original/network.py:220:27: C0326: Exactly one space required around assignment
            self.n_clusters=cluster_centers.shape[0]
                           ^ (bad-whitespace)
desc/original/network.py:221:30: C0326: Exactly one space required around assignment
            self.init_centroid=[cluster_centers]
                              ^ (bad-whitespace)
desc/original/network.py:223:0: C0301: Line too long (125/100) (line-too-long)
desc/original/network.py:223:58: C0326: Exactly one space required after comma
        clustering_layer = ClusteringLayer(self.n_clusters,weights=self.init_centroid,name='clustering')(self.encoder.output)
                                                          ^ (bad-whitespace)
desc/original/network.py:223:85: C0326: Exactly one space required after comma
        clustering_layer = ClusteringLayer(self.n_clusters,weights=self.init_centroid,name='clustering')(self.encoder.output)
                                                                                     ^ (bad-whitespace)
desc/original/network.py:225:0: C0303: Trailing whitespace (trailing-whitespace)
desc/original/network.py:227:0: C0303: Trailing whitespace (trailing-whitespace)
desc/original/network.py:245:0: C0303: Trailing whitespace (trailing-whitespace)
desc/original/network.py:247:16: C0326: Exactly one space required around assignment
        save_dir=self.save_dir
                ^ (bad-whitespace)
desc/original/network.py:253:50: C0326: Exactly one space required around comparison
            if self.save_encoder_weights and ite%5==0: #save ae_weights for every 20 iterations
                                                  ^^ (bad-whitespace)
desc/original/network.py:254:0: C0301: Line too long (104/100) (line-too-long)
desc/original/network.py:254:68: C0326: Exactly one space required after comma
                self.encoder.save_weights(os.path.join(self.save_dir,'encoder_weights_'+str(ite)+'.h5'))
                                                                    ^ (bad-whitespace)
desc/original/network.py:255:0: C0301: Line too long (103/100) (line-too-long)
desc/original/network.py:267:0: C0301: Line too long (115/100) (line-too-long)
desc/original/network.py:267:55: C0326: Exactly one space required after comma
            print("The value of delta_label of current",str(ite+1),"th iteration is",delta_label,">= tol",self.tol)
                                                       ^ (bad-whitespace)
desc/original/network.py:267:66: C0326: Exactly one space required after comma
            print("The value of delta_label of current",str(ite+1),"th iteration is",delta_label,">= tol",self.tol)
                                                                  ^ (bad-whitespace)
desc/original/network.py:267:84: C0326: Exactly one space required after comma
            print("The value of delta_label of current",str(ite+1),"th iteration is",delta_label,">= tol",self.tol)
                                                                                    ^ (bad-whitespace)
desc/original/network.py:267:96: C0326: Exactly one space required after comma
            print("The value of delta_label of current",str(ite+1),"th iteration is",delta_label,">= tol",self.tol)
                                                                                                ^ (bad-whitespace)
desc/original/network.py:267:105: C0326: Exactly one space required after comma
            print("The value of delta_label of current",str(ite+1),"th iteration is",delta_label,">= tol",self.tol)
                                                                                                         ^ (bad-whitespace)
desc/original/network.py:270:0: C0301: Line too long (105/100) (line-too-long)
desc/original/network.py:270:25: C0326: Exactly one space required around assignment
                callbacks=[EarlyStopping(monitor='loss',min_delta=1e-4,patience=5,verbose=1,mode='auto')]
                         ^ (bad-whitespace)
desc/original/network.py:270:55: C0326: Exactly one space required after comma
                callbacks=[EarlyStopping(monitor='loss',min_delta=1e-4,patience=5,verbose=1,mode='auto')]
                                                       ^ (bad-whitespace)
desc/original/network.py:270:70: C0326: Exactly one space required after comma
                callbacks=[EarlyStopping(monitor='loss',min_delta=1e-4,patience=5,verbose=1,mode='auto')]
                                                                      ^ (bad-whitespace)
desc/original/network.py:270:81: C0326: Exactly one space required after comma
                callbacks=[EarlyStopping(monitor='loss',min_delta=1e-4,patience=5,verbose=1,mode='auto')]
                                                                                 ^ (bad-whitespace)
desc/original/network.py:270:91: C0326: Exactly one space required after comma
                callbacks=[EarlyStopping(monitor='loss',min_delta=1e-4,patience=5,verbose=1,mode='auto')]
                                                                                           ^ (bad-whitespace)
desc/original/network.py:271:0: C0301: Line too long (135/100) (line-too-long)
desc/original/network.py:271:39: C0326: Exactly one space required after comma
                self.model.fit(x=self.x,y=p,epochs=epochs_fit,batch_size=self.batch_size,callbacks=callbacks,shuffle=True,verbose=True)
                                       ^ (bad-whitespace)
desc/original/network.py:271:43: C0326: Exactly one space required after comma
                self.model.fit(x=self.x,y=p,epochs=epochs_fit,batch_size=self.batch_size,callbacks=callbacks,shuffle=True,verbose=True)
                                           ^ (bad-whitespace)
desc/original/network.py:271:61: C0326: Exactly one space required after comma
                self.model.fit(x=self.x,y=p,epochs=epochs_fit,batch_size=self.batch_size,callbacks=callbacks,shuffle=True,verbose=True)
                                                             ^ (bad-whitespace)
desc/original/network.py:271:88: C0326: Exactly one space required after comma
                self.model.fit(x=self.x,y=p,epochs=epochs_fit,batch_size=self.batch_size,callbacks=callbacks,shuffle=True,verbose=True)
                                                                                        ^ (bad-whitespace)
desc/original/network.py:271:108: C0326: Exactly one space required after comma
                self.model.fit(x=self.x,y=p,epochs=epochs_fit,batch_size=self.batch_size,callbacks=callbacks,shuffle=True,verbose=True)
                                                                                                            ^ (bad-whitespace)
desc/original/network.py:271:121: C0326: Exactly one space required after comma
                self.model.fit(x=self.x,y=p,epochs=epochs_fit,batch_size=self.batch_size,callbacks=callbacks,shuffle=True,verbose=True)
                                                                                                                         ^ (bad-whitespace)
desc/original/network.py:273:0: C0301: Line too long (115/100) (line-too-long)
desc/original/network.py:273:39: C0326: Exactly one space required after comma
                self.model.fit(x=self.x,y=p,epochs=epochs_fit,batch_size=self.batch_size,shuffle=True,verbose=True)
                                       ^ (bad-whitespace)
desc/original/network.py:273:43: C0326: Exactly one space required after comma
                self.model.fit(x=self.x,y=p,epochs=epochs_fit,batch_size=self.batch_size,shuffle=True,verbose=True)
                                           ^ (bad-whitespace)
desc/original/network.py:273:61: C0326: Exactly one space required after comma
                self.model.fit(x=self.x,y=p,epochs=epochs_fit,batch_size=self.batch_size,shuffle=True,verbose=True)
                                                             ^ (bad-whitespace)
desc/original/network.py:273:88: C0326: Exactly one space required after comma
                self.model.fit(x=self.x,y=p,epochs=epochs_fit,batch_size=self.batch_size,shuffle=True,verbose=True)
                                                                                        ^ (bad-whitespace)
desc/original/network.py:273:101: C0326: Exactly one space required after comma
                self.model.fit(x=self.x,y=p,epochs=epochs_fit,batch_size=self.batch_size,shuffle=True,verbose=True)
                                                                                                     ^ (bad-whitespace)
desc/original/network.py:275:52: C0326: Exactly one space required after comma
        self.encoder.save(os.path.join(self.save_dir,"encoder_model.h5"))
                                                    ^ (bad-whitespace)
desc/original/network.py:279:0: C0303: Trailing whitespace (trailing-whitespace)
desc/original/network.py:280:10: C0326: Exactly one space required around assignment
        y0=pd.Series(y_pred,dtype='category')
          ^ (bad-whitespace)
desc/original/network.py:280:27: C0326: Exactly one space required after comma
        y0=pd.Series(y_pred,dtype='category')
                           ^ (bad-whitespace)
desc/original/network.py:281:25: C0326: Exactly one space required around assignment
        y0.cat.categories=range(0,len(y0.cat.categories))
                         ^ (bad-whitespace)
desc/original/network.py:281:33: C0326: Exactly one space required after comma
        y0.cat.categories=range(0,len(y0.cat.categories))
                                 ^ (bad-whitespace)
desc/original/network.py:283:9: C0326: Exactly one space required around assignment
        x=y0.value_counts()
         ^ (bad-whitespace)
desc/original/network.py:285:17: C0326: Exactly one space required around assignment
        Embeded_z=self.extract_features(self.x)
                 ^ (bad-whitespace)
desc/original/network.py:286:24: C0326: Exactly one space required after comma
        return Embeded_z,q
                        ^ (bad-whitespace)
desc/original/network.py:287:0: C0303: Trailing whitespace (trailing-whitespace)
desc/original/network.py:306:31: C0303: Trailing whitespace (trailing-whitespace)
desc/original/network.py:309:5: C0326: Exactly one space required after comma
    x,y=load_mnist(sample_size=10000,seed=0)
     ^ (bad-whitespace)
desc/original/network.py:309:7: C0326: Exactly one space required around assignment
    x,y=load_mnist(sample_size=10000,seed=0)
       ^ (bad-whitespace)
desc/original/network.py:309:36: C0326: Exactly one space required after comma
    x,y=load_mnist(sample_size=10000,seed=0)
                                    ^ (bad-whitespace)
desc/original/network.py:312:8: C0326: Exactly one space required around assignment
    dims=[x.shape[-1],64,32]
        ^ (bad-whitespace)
desc/original/network.py:312:21: C0326: Exactly one space required after comma
    dims=[x.shape[-1],64,32]
                     ^ (bad-whitespace)
desc/original/network.py:312:24: C0326: Exactly one space required after comma
    dims=[x.shape[-1],64,32]
                        ^ (bad-whitespace)
desc/original/network.py:314:31: C0326: Exactly one space required after comma
    desc = DESC_MODEL(dims=dims,x=x,louvain_resolution=0.3,use_ae_weights=True)
                               ^ (bad-whitespace)
desc/original/network.py:314:35: C0326: Exactly one space required after comma
    desc = DESC_MODEL(dims=dims,x=x,louvain_resolution=0.3,use_ae_weights=True)
                                   ^ (bad-whitespace)
desc/original/network.py:314:58: C0326: Exactly one space required after comma
    desc = DESC_MODEL(dims=dims,x=x,louvain_resolution=0.3,use_ae_weights=True)
                                                          ^ (bad-whitespace)
desc/original/network.py:318:13: C0326: Exactly one space required after comma
    Embeded_z,q_pred= desc.fit(maxiter=30,epochs_fit=4)
             ^ (bad-whitespace)
desc/original/network.py:318:20: C0326: Exactly one space required before assignment
    Embeded_z,q_pred= desc.fit(maxiter=30,epochs_fit=4)
                    ^ (bad-whitespace)
desc/original/network.py:318:41: C0326: Exactly one space required after comma
    Embeded_z,q_pred= desc.fit(maxiter=30,epochs_fit=4)
                                         ^ (bad-whitespace)
desc/original/network.py:319:10: C0326: Exactly one space required around assignment
    y_pred=q_pred.max(axis=1)
          ^ (bad-whitespace)
desc/original/network.py:320:12: C0326: Exactly one space required around assignment
    obs_info=pd.DataFrame()
            ^ (bad-whitespace)
desc/original/network.py:321:22: C0326: Exactly one space required around assignment
    obs_info["y_true"]=pd.Series(y.astype("U"),dtype="category")
                      ^ (bad-whitespace)
desc/original/network.py:321:46: C0326: Exactly one space required after comma
    obs_info["y_true"]=pd.Series(y.astype("U"),dtype="category")
                                              ^ (bad-whitespace)
desc/original/network.py:322:22: C0326: Exactly one space required around assignment
    obs_info["y_pred"]=pd.Series(y_pred.astype("U"),dtype="category")
                      ^ (bad-whitespace)
desc/original/network.py:322:51: C0326: Exactly one space required after comma
    obs_info["y_pred"]=pd.Series(y_pred.astype("U"),dtype="category")
                                                   ^ (bad-whitespace)
desc/original/network.py:323:9: C0326: Exactly one space required around assignment
    adata=sc.AnnData(x,obs=obs_info)
         ^ (bad-whitespace)
desc/original/network.py:323:22: C0326: Exactly one space required after comma
    adata=sc.AnnData(x,obs=obs_info)
                      ^ (bad-whitespace)
desc/original/network.py:324:29: C0326: Exactly one space required around assignment
    adata.obsm["X_Embeded_z"]=Embeded_z
                             ^ (bad-whitespace)
desc/original/network.py:326:0: C0303: Trailing whitespace (trailing-whitespace)
desc/original/network.py:327:0: C0303: Trailing whitespace (trailing-whitespace)
desc/original/network.py:15:0: E0401: Unable to import 'networkx' (import-error)
desc/original/network.py:15:0: C0413: Import "import networkx as nx" should be placed at the top of the module (wrong-import-position)
desc/original/network.py:16:0: C0413: Import "import matplotlib.pyplot as plt" should be placed at the top of the module (wrong-import-position)
desc/original/network.py:17:0: C0413: Import "from time import time" should be placed at the top of the module (wrong-import-position)
desc/original/network.py:18:0: C0413: Import "import numpy as np" should be placed at the top of the module (wrong-import-position)
desc/original/network.py:19:0: C0413: Import "import random" should be placed at the top of the module (wrong-import-position)
desc/original/network.py:20:0: E0401: Unable to import 'tensorflow' (import-error)
desc/original/network.py:20:0: C0413: Import "import tensorflow as tf" should be placed at the top of the module (wrong-import-position)
desc/original/network.py:21:0: E0401: Unable to import 'keras.backend' (import-error)
desc/original/network.py:21:0: C0413: Import "import keras.backend as K" should be placed at the top of the module (wrong-import-position)
desc/original/network.py:22:0: E0401: Unable to import 'keras.engine.topology' (import-error)
desc/original/network.py:22:0: C0413: Import "from keras.engine.topology import Layer, InputSpec" should be placed at the top of the module (wrong-import-position)
desc/original/network.py:23:0: E0401: Unable to import 'keras.callbacks' (import-error)
desc/original/network.py:23:0: C0413: Import "from keras.callbacks import TensorBoard, ModelCheckpoint, EarlyStopping, ReduceLROnPlateau, History" should be placed at the top of the module (wrong-import-position)
desc/original/network.py:24:0: E0401: Unable to import 'keras.layers' (import-error)
desc/original/network.py:24:0: C0413: Import "from keras.layers import Dense, Input" should be placed at the top of the module (wrong-import-position)
desc/original/network.py:25:0: E0401: Unable to import 'keras.models' (import-error)
desc/original/network.py:25:0: C0413: Import "from keras.models import Model, load_model" should be placed at the top of the module (wrong-import-position)
desc/original/network.py:26:0: E0401: Unable to import 'keras.optimizers' (import-error)
desc/original/network.py:26:0: C0413: Import "from keras.optimizers import SGD" should be placed at the top of the module (wrong-import-position)
desc/original/network.py:27:0: E0401: Unable to import 'keras' (import-error)
desc/original/network.py:27:0: C0413: Import "from keras import callbacks" should be placed at the top of the module (wrong-import-position)
desc/original/network.py:28:0: E0401: Unable to import 'keras.initializers' (import-error)
desc/original/network.py:28:0: C0413: Import "from keras.initializers import VarianceScaling" should be placed at the top of the module (wrong-import-position)
desc/original/network.py:29:0: E0401: Unable to import 'sklearn.cluster' (import-error)
desc/original/network.py:29:0: C0413: Import "from sklearn.cluster import KMeans" should be placed at the top of the module (wrong-import-position)
desc/original/network.py:30:0: E0401: Unable to import 'scanpy.api' (import-error)
desc/original/network.py:30:0: C0413: Import "import scanpy.api as sc" should be placed at the top of the module (wrong-import-position)
desc/original/network.py:31:0: E0401: Unable to import 'pandas' (import-error)
desc/original/network.py:31:0: C0413: Import "import pandas as pd" should be placed at the top of the module (wrong-import-position)
desc/original/network.py:32:0: E0401: Unable to import 'natsort' (import-error)
desc/original/network.py:32:0: C0413: Import "from natsort import natsorted" should be placed at the top of the module (wrong-import-position)
desc/original/network.py:33:0: C0413: Import "import os" should be placed at the top of the module (wrong-import-position)
desc/original/network.py:34:0: C0413: Import "from .SAE import SAE" should be placed at the top of the module (wrong-import-position)
desc/original/network.py:66:4: C0116: Missing function or method docstring (missing-function-docstring)
desc/original/network.py:84:8: C0103: Variable name "q" doesn't conform to snake_case naming style (invalid-name)
desc/original/network.py:85:8: C0103: Variable name "q" doesn't conform to snake_case naming style (invalid-name)
desc/original/network.py:86:8: C0103: Variable name "q" doesn't conform to snake_case naming style (invalid-name)
desc/original/network.py:76:0: W0613: Unused argument 'kwargs' (unused-argument)
desc/original/network.py:89:4: C0116: Missing function or method docstring (missing-function-docstring)
desc/original/network.py:93:4: C0116: Missing function or method docstring (missing-function-docstring)
desc/original/network.py:70:8: W0201: Attribute 'clusters' defined outside __init__ (attribute-defined-outside-init)
desc/original/network.py:74:8: W0201: Attribute 'built' defined outside __init__ (attribute-defined-outside-init)
desc/original/network.py:99:0: C0103: Class name "DESC_MODEL" doesn't conform to PascalCase naming style (invalid-name)
desc/original/network.py:126:8: C0103: Attribute name "x" doesn't conform to snake_case naming style (invalid-name)
desc/original/network.py:140:8: C0103: Attribute name "drop_rate_SAE" doesn't conform to snake_case naming style (invalid-name)
desc/original/network.py:142:8: C0103: Attribute name "use_earlyStop" doesn't conform to snake_case naming style (invalid-name)
desc/original/network.py:99:0: C0115: Missing class docstring (missing-class-docstring)
desc/original/network.py:99:0: R0902: Too many instance attributes (26/7) (too-many-instance-attributes)
desc/original/network.py:99:0: R0205: Class 'DESC_MODEL' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
desc/original/network.py:101:17: W0621: Redefining name 'dims' from outer scope (line 312) (redefined-outer-name)
desc/original/network.py:102:17: W0621: Redefining name 'x' from outer scope (line 309) (redefined-outer-name)
desc/original/network.py:105:17: W0621: Redefining name 'init' from outer scope (line 310) (redefined-outer-name)
desc/original/network.py:100:4: R0913: Too many arguments (20/5) (too-many-arguments)
desc/original/network.py:100:4: R0914: Too many local variables (20/15) (too-many-locals)
desc/original/network.py:165:8: W0621: Redefining name 't0' from outer scope (line 316) (redefined-outer-name)
desc/original/network.py:154:4: C0116: Missing function or method docstring (missing-function-docstring)
desc/original/network.py:165:8: C0103: Variable name "t0" doesn't conform to snake_case naming style (invalid-name)
desc/original/network.py:199:12: C0103: Variable name "Y_pred_init" doesn't conform to snake_case naming style (invalid-name)
desc/original/network.py:214:12: C0103: Variable name "Y_pred_init" doesn't conform to snake_case naming style (invalid-name)
desc/original/network.py:217:12: C0103: Variable name "Group" doesn't conform to snake_case naming style (invalid-name)
desc/original/network.py:218:12: C0103: Variable name "Mergefeature" doesn't conform to snake_case naming style (invalid-name)
desc/original/network.py:154:4: R0915: Too many statements (56/50) (too-many-statements)
desc/original/network.py:228:4: C0116: Missing function or method docstring (missing-function-docstring)
desc/original/network.py:231:31: W0621: Redefining name 'x' from outer scope (line 309) (redefined-outer-name)
desc/original/network.py:231:4: C0103: Argument name "x" doesn't conform to snake_case naming style (invalid-name)
desc/original/network.py:231:4: C0116: Missing function or method docstring (missing-function-docstring)
desc/original/network.py:234:22: W0621: Redefining name 'x' from outer scope (line 309) (redefined-outer-name)
desc/original/network.py:234:4: C0103: Argument name "x" doesn't conform to snake_case naming style (invalid-name)
desc/original/network.py:234:4: C0116: Missing function or method docstring (missing-function-docstring)
desc/original/network.py:235:8: C0103: Variable name "q" doesn't conform to snake_case naming style (invalid-name)
desc/original/network.py:239:4: C0103: Argument name "q" doesn't conform to snake_case naming style (invalid-name)
desc/original/network.py:239:4: C0116: Missing function or method docstring (missing-function-docstring)
desc/original/network.py:243:4: C0116: Missing function or method docstring (missing-function-docstring)
desc/original/network.py:259:12: W0621: Redefining name 'y_pred' from outer scope (line 319) (redefined-outer-name)
desc/original/network.py:270:16: W0621: Redefining name 'callbacks' from outer scope (line 27) (redefined-outer-name)
desc/original/network.py:283:8: W0621: Redefining name 'x' from outer scope (line 309) (redefined-outer-name)
desc/original/network.py:285:8: W0621: Redefining name 'Embeded_z' from outer scope (line 318) (redefined-outer-name)
desc/original/network.py:246:4: C0116: Missing function or method docstring (missing-function-docstring)
desc/original/network.py:256:12: C0103: Variable name "q" doesn't conform to snake_case naming style (invalid-name)
desc/original/network.py:257:12: C0103: Variable name "p" doesn't conform to snake_case naming style (invalid-name)
desc/original/network.py:280:8: C0103: Variable name "y0" doesn't conform to snake_case naming style (invalid-name)
desc/original/network.py:283:8: C0103: Variable name "x" doesn't conform to snake_case naming style (invalid-name)
desc/original/network.py:285:8: C0103: Variable name "Embeded_z" doesn't conform to snake_case naming style (invalid-name)
desc/original/network.py:247:8: W0612: Unused variable 'save_dir' (unused-variable)
desc/original/network.py:302:4: W0404: Reimport 'os' (imported line 33) (reimported)
desc/original/network.py:307:4: W0404: Reimport 'numpy' (imported line 18) (reimported)
desc/original/network.py:308:4: E0401: Unable to import 'load_mnist' (import-error)
desc/original/network.py:310:4: C0103: Constant name "init" doesn't conform to UPPER_CASE naming style (invalid-name)
desc/original/network.py:302:4: C0412: Imports from package os are not grouped (ungrouped-imports)
desc/original/network.py:16:0: C0412: Imports from package matplotlib are not grouped (ungrouped-imports)
desc/original/network.py:307:4: C0412: Imports from package numpy are not grouped (ungrouped-imports)
************* Module desc.original.DESC
desc/original/DESC.py:4:25: C0303: Trailing whitespace (trailing-whitespace)
desc/original/DESC.py:21:90: C0326: Exactly one space required after comma
from keras.callbacks import TensorBoard, ModelCheckpoint, EarlyStopping, ReduceLROnPlateau,History
                                                                                          ^ (bad-whitespace)
desc/original/DESC.py:40:0: C0301: Line too long (120/100) (line-too-long)
desc/original/DESC.py:49:0: C0301: Line too long (120/100) (line-too-long)
desc/original/DESC.py:70:0: C0301: Line too long (116/100) (line-too-long)
desc/original/DESC.py:82:0: C0301: Line too long (102/100) (line-too-long)
desc/original/DESC.py:84:0: C0301: Line too long (111/100) (line-too-long)
desc/original/DESC.py:102:62: C0303: Trailing whitespace (trailing-whitespace)
desc/original/DESC.py:104:0: C0330: Wrong continued indentation (remove 0 space).
		 tol=0.005,
                 | (bad-continuation)
desc/original/DESC.py:106:0: C0301: Line too long (124/100) (line-too-long)
desc/original/DESC.py:107:65: C0303: Trailing whitespace (trailing-whitespace)
desc/original/DESC.py:108:41: C0303: Trailing whitespace (trailing-whitespace)
desc/original/DESC.py:111:0: C0330: Wrong continued indentation (remove 0 space).
		 activation='relu',
                 | (bad-continuation)
desc/original/DESC.py:112:0: C0301: Line too long (110/100) (line-too-long)
desc/original/DESC.py:112:110: C0303: Trailing whitespace (trailing-whitespace)
desc/original/DESC.py:116:0: C0301: Line too long (268/100) (line-too-long)
desc/original/DESC.py:123:14: C0326: Exactly one space required around assignment
        self.x=x #feature n*p, n:number of cells, p: number of genes
              ^ (bad-whitespace)
desc/original/DESC.py:125:16: C0326: Exactly one space required around assignment
        self.tol=tol
                ^ (bad-whitespace)
desc/original/DESC.py:126:17: C0326: Exactly one space required around assignment
        self.init=init
                 ^ (bad-whitespace)
desc/original/DESC.py:127:56: C0303: Trailing whitespace (trailing-whitespace)
desc/original/DESC.py:129:23: C0326: Exactly one space required around assignment
        self.is_stacked=is_stacked
                       ^ (bad-whitespace)
desc/original/DESC.py:130:23: C0326: Exactly one space required around assignment
        self.resolution=louvain_resolution
                       ^ (bad-whitespace)
desc/original/DESC.py:131:24: C0326: Exactly one space required around assignment
        self.n_neighbors=n_neighbors
                        ^ (bad-whitespace)
desc/original/DESC.py:132:28: C0326: Exactly one space required around assignment
        self.pretrain_epochs=pretrain_epochs
                            ^ (bad-whitespace)
desc/original/DESC.py:133:23: C0326: Exactly one space required around assignment
        self.batch_size=batch_size
                       ^ (bad-whitespace)
desc/original/DESC.py:134:23: C0326: Exactly one space required around assignment
        self.activation=activation
                       ^ (bad-whitespace)
desc/original/DESC.py:135:24: C0326: Exactly one space required around assignment
        self.actinlayer1=actinlayer1
                        ^ (bad-whitespace)
desc/original/DESC.py:136:26: C0326: Exactly one space required around assignment
        self.drop_rate_SAE=drop_rate_SAE
                          ^ (bad-whitespace)
desc/original/DESC.py:137:23: C0326: Exactly one space required around assignment
        self.is_stacked=is_stacked
                       ^ (bad-whitespace)
desc/original/DESC.py:138:26: C0326: Exactly one space required around assignment
        self.use_earlyStop=use_earlyStop
                          ^ (bad-whitespace)
desc/original/DESC.py:139:21: C0326: Exactly one space required around assignment
        self.save_dir=save_dir
                     ^ (bad-whitespace)
desc/original/DESC.py:142:21: C0326: Exactly one space required after comma
    def pretrain(self,n_clusters=None):
                     ^ (bad-whitespace)
desc/original/DESC.py:143:11: C0326: Exactly one space required around assignment
        sae=SAE(dims=self.dims,
           ^ (bad-whitespace)
desc/original/DESC.py:144:0: C0330: Wrong continued indentation (remove 16 spaces).
				act=self.activation,
                |               ^ (bad-continuation)
desc/original/DESC.py:150:0: C0330: Wrong continued indentation.
           )
           ^   || (bad-continuation)
desc/original/DESC.py:153:0: C0301: Line too long (110/100) (line-too-long)
desc/original/DESC.py:153:91: C0326: Exactly one space required after comma
        print("Checking whether %s  exists in the directory"%str(os.path.join(self.save_dir,'ae_weights,h5')))
                                                                                           ^ (bad-whitespace)
desc/original/DESC.py:156:30: C0326: Exactly one space required after comma
                sae.fit(self.x,epochs=self.pretrain_epochs)
                              ^ (bad-whitespace)
desc/original/DESC.py:158:31: C0326: Exactly one space required after comma
                sae.fit2(self.x,epochs=self.pretrain_epochs)
                               ^ (bad-whitespace)
desc/original/DESC.py:159:28: C0326: Exactly one space required around assignment
            self.autoencoder=sae.autoencoders
                            ^ (bad-whitespace)
desc/original/DESC.py:160:24: C0326: Exactly one space required around assignment
            self.encoder=sae.encoder
                        ^ (bad-whitespace)
desc/original/DESC.py:162:68: C0326: Exactly one space required after comma
            sae.autoencoders.load_weights(os.path.join(self.save_dir,"ae_weights.h5"))
                                                                    ^ (bad-whitespace)
desc/original/DESC.py:163:28: C0326: Exactly one space required around assignment
            self.autoencoder=sae.autoencoders
                            ^ (bad-whitespace)
desc/original/DESC.py:164:24: C0326: Exactly one space required around assignment
            self.encoder=sae.encoder
                        ^ (bad-whitespace)
desc/original/DESC.py:167:56: C0326: Exactly one space required after comma
        if not os.path.isfile(os.path.join(self.save_dir,"ae_weights.h5")):
                                                        ^ (bad-whitespace)
desc/original/DESC.py:168:68: C0326: Exactly one space required after comma
            self.autoencoder.save_weights(os.path.join(self.save_dir,'ae_weights.h5'))
                                                                    ^ (bad-whitespace)
desc/original/DESC.py:171:16: C0326: Exactly one space required around assignment
        features=self.extract_features(self.x)
                ^ (bad-whitespace)
desc/original/DESC.py:172:16: C0326: Exactly one space required around assignment
        features=np.asarray(features)
                ^ (bad-whitespace)
desc/original/DESC.py:173:32: C0326: Exactly one space required after comma
        if isinstance(n_clusters,int):
                                ^ (bad-whitespace)
desc/original/DESC.py:174:0: C0301: Line too long (108/100) (line-too-long)
desc/original/DESC.py:177:26: C0326: Exactly one space required before assignment
            self.init_pred= np.copy(Y_pred_init)
                          ^ (bad-whitespace)
desc/original/DESC.py:178:27: C0326: Exactly one space required around assignment
            self.n_clusters=n_clusters
                           ^ (bad-whitespace)
desc/original/DESC.py:179:27: C0326: Exactly one space required around assignment
            cluster_centers=kmeans.cluster_centers_
                           ^ (bad-whitespace)
desc/original/DESC.py:180:30: C0326: Exactly one space required around assignment
            self.init_centroid=[cluster_centers]
                              ^ (bad-whitespace)
desc/original/DESC.py:182:0: C0301: Line too long (103/100) (line-too-long)
desc/original/DESC.py:185:17: C0326: Exactly one space required around assignment
            adata=sc.AnnData(features)
                 ^ (bad-whitespace)
desc/original/DESC.py:187:31: C0326: Exactly one space required after comma
            sc.tl.louvain(adata,resolution=self.resolution)
                               ^ (bad-whitespace)
desc/original/DESC.py:188:23: C0326: Exactly one space required around assignment
            Y_pred_init=adata.obs['louvain']
                       ^ (bad-whitespace)
desc/original/DESC.py:189:26: C0326: Exactly one space required around assignment
            self.init_pred=np.asarray(Y_pred_init,dtype=int)
                          ^ (bad-whitespace)
desc/original/DESC.py:189:49: C0326: Exactly one space required after comma
            self.init_pred=np.asarray(Y_pred_init,dtype=int)
                                                 ^ (bad-whitespace)
desc/original/DESC.py:190:20: C0326: Exactly one space required around assignment
            features=pd.DataFrame(features,index=np.arange(0,features.shape[0]))
                    ^ (bad-whitespace)
desc/original/DESC.py:190:42: C0326: Exactly one space required after comma
            features=pd.DataFrame(features,index=np.arange(0,features.shape[0]))
                                          ^ (bad-whitespace)
desc/original/DESC.py:190:60: C0326: Exactly one space required after comma
            features=pd.DataFrame(features,index=np.arange(0,features.shape[0]))
                                                            ^ (bad-whitespace)
desc/original/DESC.py:191:17: C0326: Exactly one space required around assignment
            Group=pd.Series(self.init_pred,index=np.arange(0,features.shape[0]),name="Group")
                 ^ (bad-whitespace)
desc/original/DESC.py:191:42: C0326: Exactly one space required after comma
            Group=pd.Series(self.init_pred,index=np.arange(0,features.shape[0]),name="Group")
                                          ^ (bad-whitespace)
desc/original/DESC.py:191:60: C0326: Exactly one space required after comma
            Group=pd.Series(self.init_pred,index=np.arange(0,features.shape[0]),name="Group")
                                                            ^ (bad-whitespace)
desc/original/DESC.py:191:79: C0326: Exactly one space required after comma
            Group=pd.Series(self.init_pred,index=np.arange(0,features.shape[0]),name="Group")
                                                                               ^ (bad-whitespace)
desc/original/DESC.py:192:24: C0326: Exactly one space required around assignment
            Mergefeature=pd.concat([features,Group],axis=1)
                        ^ (bad-whitespace)
desc/original/DESC.py:192:44: C0326: Exactly one space required after comma
            Mergefeature=pd.concat([features,Group],axis=1)
                                            ^ (bad-whitespace)
desc/original/DESC.py:192:51: C0326: Exactly one space required after comma
            Mergefeature=pd.concat([features,Group],axis=1)
                                                   ^ (bad-whitespace)
desc/original/DESC.py:193:27: C0326: Exactly one space required around assignment
            cluster_centers=np.asarray(Mergefeature.groupby("Group").mean())
                           ^ (bad-whitespace)
desc/original/DESC.py:194:27: C0326: Exactly one space required around assignment
            self.n_clusters=cluster_centers.shape[0]
                           ^ (bad-whitespace)
desc/original/DESC.py:195:30: C0326: Exactly one space required around assignment
            self.init_centroid=[cluster_centers]
                              ^ (bad-whitespace)
desc/original/DESC.py:197:0: C0301: Line too long (125/100) (line-too-long)
desc/original/DESC.py:197:58: C0326: Exactly one space required after comma
        clustering_layer = ClusteringLayer(self.n_clusters,weights=self.init_centroid,name='clustering')(self.encoder.output)
                                                          ^ (bad-whitespace)
desc/original/DESC.py:197:85: C0326: Exactly one space required after comma
        clustering_layer = ClusteringLayer(self.n_clusters,weights=self.init_centroid,name='clustering')(self.encoder.output)
                                                                                     ^ (bad-whitespace)
desc/original/DESC.py:199:0: C0303: Trailing whitespace (trailing-whitespace)
desc/original/DESC.py:201:0: C0303: Trailing whitespace (trailing-whitespace)
desc/original/DESC.py:219:0: C0303: Trailing whitespace (trailing-whitespace)
desc/original/DESC.py:221:16: C0326: Exactly one space required around assignment
        save_dir=self.save_dir
                ^ (bad-whitespace)
desc/original/DESC.py:239:0: C0301: Line too long (115/100) (line-too-long)
desc/original/DESC.py:239:55: C0326: Exactly one space required after comma
            print("The value of delta_label of current",str(ite+1),"th iteration is",delta_label,">= tol",self.tol)
                                                       ^ (bad-whitespace)
desc/original/DESC.py:239:66: C0326: Exactly one space required after comma
            print("The value of delta_label of current",str(ite+1),"th iteration is",delta_label,">= tol",self.tol)
                                                                  ^ (bad-whitespace)
desc/original/DESC.py:239:84: C0326: Exactly one space required after comma
            print("The value of delta_label of current",str(ite+1),"th iteration is",delta_label,">= tol",self.tol)
                                                                                    ^ (bad-whitespace)
desc/original/DESC.py:239:96: C0326: Exactly one space required after comma
            print("The value of delta_label of current",str(ite+1),"th iteration is",delta_label,">= tol",self.tol)
                                                                                                ^ (bad-whitespace)
desc/original/DESC.py:239:105: C0326: Exactly one space required after comma
            print("The value of delta_label of current",str(ite+1),"th iteration is",delta_label,">= tol",self.tol)
                                                                                                         ^ (bad-whitespace)
desc/original/DESC.py:242:0: C0301: Line too long (105/100) (line-too-long)
desc/original/DESC.py:242:25: C0326: Exactly one space required around assignment
                callbacks=[EarlyStopping(monitor='loss',min_delta=1e-4,patience=5,verbose=1,mode='auto')]
                         ^ (bad-whitespace)
desc/original/DESC.py:242:55: C0326: Exactly one space required after comma
                callbacks=[EarlyStopping(monitor='loss',min_delta=1e-4,patience=5,verbose=1,mode='auto')]
                                                       ^ (bad-whitespace)
desc/original/DESC.py:242:70: C0326: Exactly one space required after comma
                callbacks=[EarlyStopping(monitor='loss',min_delta=1e-4,patience=5,verbose=1,mode='auto')]
                                                                      ^ (bad-whitespace)
desc/original/DESC.py:242:81: C0326: Exactly one space required after comma
                callbacks=[EarlyStopping(monitor='loss',min_delta=1e-4,patience=5,verbose=1,mode='auto')]
                                                                                 ^ (bad-whitespace)
desc/original/DESC.py:242:91: C0326: Exactly one space required after comma
                callbacks=[EarlyStopping(monitor='loss',min_delta=1e-4,patience=5,verbose=1,mode='auto')]
                                                                                           ^ (bad-whitespace)
desc/original/DESC.py:243:0: C0301: Line too long (135/100) (line-too-long)
desc/original/DESC.py:243:39: C0326: Exactly one space required after comma
                self.model.fit(x=self.x,y=p,epochs=epochs_fit,batch_size=self.batch_size,callbacks=callbacks,shuffle=True,verbose=True)
                                       ^ (bad-whitespace)
desc/original/DESC.py:243:43: C0326: Exactly one space required after comma
                self.model.fit(x=self.x,y=p,epochs=epochs_fit,batch_size=self.batch_size,callbacks=callbacks,shuffle=True,verbose=True)
                                           ^ (bad-whitespace)
desc/original/DESC.py:243:61: C0326: Exactly one space required after comma
                self.model.fit(x=self.x,y=p,epochs=epochs_fit,batch_size=self.batch_size,callbacks=callbacks,shuffle=True,verbose=True)
                                                             ^ (bad-whitespace)
desc/original/DESC.py:243:88: C0326: Exactly one space required after comma
                self.model.fit(x=self.x,y=p,epochs=epochs_fit,batch_size=self.batch_size,callbacks=callbacks,shuffle=True,verbose=True)
                                                                                        ^ (bad-whitespace)
desc/original/DESC.py:243:108: C0326: Exactly one space required after comma
                self.model.fit(x=self.x,y=p,epochs=epochs_fit,batch_size=self.batch_size,callbacks=callbacks,shuffle=True,verbose=True)
                                                                                                            ^ (bad-whitespace)
desc/original/DESC.py:243:121: C0326: Exactly one space required after comma
                self.model.fit(x=self.x,y=p,epochs=epochs_fit,batch_size=self.batch_size,callbacks=callbacks,shuffle=True,verbose=True)
                                                                                                                         ^ (bad-whitespace)
desc/original/DESC.py:245:0: C0301: Line too long (115/100) (line-too-long)
desc/original/DESC.py:245:39: C0326: Exactly one space required after comma
                self.model.fit(x=self.x,y=p,epochs=epochs_fit,batch_size=self.batch_size,shuffle=True,verbose=True)
                                       ^ (bad-whitespace)
desc/original/DESC.py:245:43: C0326: Exactly one space required after comma
                self.model.fit(x=self.x,y=p,epochs=epochs_fit,batch_size=self.batch_size,shuffle=True,verbose=True)
                                           ^ (bad-whitespace)
desc/original/DESC.py:245:61: C0326: Exactly one space required after comma
                self.model.fit(x=self.x,y=p,epochs=epochs_fit,batch_size=self.batch_size,shuffle=True,verbose=True)
                                                             ^ (bad-whitespace)
desc/original/DESC.py:245:88: C0326: Exactly one space required after comma
                self.model.fit(x=self.x,y=p,epochs=epochs_fit,batch_size=self.batch_size,shuffle=True,verbose=True)
                                                                                        ^ (bad-whitespace)
desc/original/DESC.py:245:101: C0326: Exactly one space required after comma
                self.model.fit(x=self.x,y=p,epochs=epochs_fit,batch_size=self.batch_size,shuffle=True,verbose=True)
                                                                                                     ^ (bad-whitespace)
desc/original/DESC.py:246:10: C0326: Exactly one space required around assignment
        y0=pd.Series(y_pred,dtype='category')
          ^ (bad-whitespace)
desc/original/DESC.py:246:27: C0326: Exactly one space required after comma
        y0=pd.Series(y_pred,dtype='category')
                           ^ (bad-whitespace)
desc/original/DESC.py:247:25: C0326: Exactly one space required around assignment
        y0.cat.categories=range(0,len(y0.cat.categories))
                         ^ (bad-whitespace)
desc/original/DESC.py:247:33: C0326: Exactly one space required after comma
        y0.cat.categories=range(0,len(y0.cat.categories))
                                 ^ (bad-whitespace)
desc/original/DESC.py:249:9: C0326: Exactly one space required around assignment
        x=y0.value_counts()
         ^ (bad-whitespace)
desc/original/DESC.py:251:17: C0326: Exactly one space required around assignment
        Embeded_z=self.extract_features(self.x)
                 ^ (bad-whitespace)
desc/original/DESC.py:252:24: C0326: Exactly one space required after comma
        return Embeded_z,q
                        ^ (bad-whitespace)
desc/original/DESC.py:253:0: C0303: Trailing whitespace (trailing-whitespace)
desc/original/DESC.py:272:31: C0303: Trailing whitespace (trailing-whitespace)
desc/original/DESC.py:282:14: C0326: No space allowed before bracket
        print ('MNIST samples', x.shape)
              ^ (bad-whitespace)
desc/original/DESC.py:285:5: C0326: Exactly one space required after comma
    x,y=load_mnist()
     ^ (bad-whitespace)
desc/original/DESC.py:285:7: C0326: Exactly one space required around assignment
    x,y=load_mnist()
       ^ (bad-whitespace)
desc/original/DESC.py:286:22: C0326: Exactly one space required around assignment
    sc.settings.figdir="./figures/mnist"
                      ^ (bad-whitespace)
desc/original/DESC.py:289:8: C0326: Exactly one space required around assignment
    dims=[x.shape[-1],64,32]
        ^ (bad-whitespace)
desc/original/DESC.py:289:21: C0326: Exactly one space required after comma
    dims=[x.shape[-1],64,32]
                     ^ (bad-whitespace)
desc/original/DESC.py:289:24: C0326: Exactly one space required after comma
    dims=[x.shape[-1],64,32]
                        ^ (bad-whitespace)
desc/original/DESC.py:291:6: C0326: Exactly one space required around assignment
    id=np.random.choice([True,False],size=x.shape[0],p=[0.3,0.7])
      ^ (bad-whitespace)
desc/original/DESC.py:291:29: C0326: Exactly one space required after comma
    id=np.random.choice([True,False],size=x.shape[0],p=[0.3,0.7])
                             ^ (bad-whitespace)
desc/original/DESC.py:291:36: C0326: Exactly one space required after comma
    id=np.random.choice([True,False],size=x.shape[0],p=[0.3,0.7])
                                    ^ (bad-whitespace)
desc/original/DESC.py:291:52: C0326: Exactly one space required after comma
    id=np.random.choice([True,False],size=x.shape[0],p=[0.3,0.7])
                                                    ^ (bad-whitespace)
desc/original/DESC.py:291:59: C0326: Exactly one space required after comma
    id=np.random.choice([True,False],size=x.shape[0],p=[0.3,0.7])
                                                           ^ (bad-whitespace)
desc/original/DESC.py:292:5: C0326: Exactly one space required around assignment
    x=x[id]
     ^ (bad-whitespace)
desc/original/DESC.py:293:11: C0303: Trailing whitespace (trailing-whitespace)
desc/original/DESC.py:293:5: C0326: Exactly one space required around assignment
    y=y[id] 
     ^ (bad-whitespace)
desc/original/DESC.py:294:25: C0326: Exactly one space required after comma
    desc = DESC(dims=dims,x=x,louvain_resolution=0.3)
                         ^ (bad-whitespace)
desc/original/DESC.py:294:29: C0326: Exactly one space required after comma
    desc = DESC(dims=dims,x=x,louvain_resolution=0.3)
                             ^ (bad-whitespace)
desc/original/DESC.py:298:13: C0326: Exactly one space required after comma
    Embeded_z,q_pred= desc.fit(maxiter=30,epochs_fit=4)
             ^ (bad-whitespace)
desc/original/DESC.py:298:20: C0326: Exactly one space required before assignment
    Embeded_z,q_pred= desc.fit(maxiter=30,epochs_fit=4)
                    ^ (bad-whitespace)
desc/original/DESC.py:298:41: C0326: Exactly one space required after comma
    Embeded_z,q_pred= desc.fit(maxiter=30,epochs_fit=4)
                                         ^ (bad-whitespace)
desc/original/DESC.py:299:10: C0326: Exactly one space required around assignment
    y_pred=q_pred.max(axis=1)
          ^ (bad-whitespace)
desc/original/DESC.py:300:12: C0326: Exactly one space required around assignment
    obs_info=pd.DataFrame()
            ^ (bad-whitespace)
desc/original/DESC.py:301:22: C0326: Exactly one space required around assignment
    obs_info["y_true"]=pd.Series(y.astype("U"),dtype="category")
                      ^ (bad-whitespace)
desc/original/DESC.py:301:46: C0326: Exactly one space required after comma
    obs_info["y_true"]=pd.Series(y.astype("U"),dtype="category")
                                              ^ (bad-whitespace)
desc/original/DESC.py:302:22: C0326: Exactly one space required around assignment
    obs_info["y_pred"]=pd.Series(y_pred.astype("U"),dtype="category")
                      ^ (bad-whitespace)
desc/original/DESC.py:302:51: C0326: Exactly one space required after comma
    obs_info["y_pred"]=pd.Series(y_pred.astype("U"),dtype="category")
                                                   ^ (bad-whitespace)
desc/original/DESC.py:303:9: C0326: Exactly one space required around assignment
    adata=sc.AnnData(x,obs=obs_info)
         ^ (bad-whitespace)
desc/original/DESC.py:303:22: C0326: Exactly one space required after comma
    adata=sc.AnnData(x,obs=obs_info)
                      ^ (bad-whitespace)
desc/original/DESC.py:304:29: C0326: Exactly one space required around assignment
    adata.obsm["X_Embeded_z"]=Embeded_z
                             ^ (bad-whitespace)
desc/original/DESC.py:306:0: C0303: Trailing whitespace (trailing-whitespace)
desc/original/DESC.py:307:0: C0303: Trailing whitespace (trailing-whitespace)
desc/original/DESC.py:291:4: W0622: Redefining built-in 'id' (redefined-builtin)
desc/original/DESC.py:1:0: C0103: Module name "DESC" doesn't conform to snake_case naming style (invalid-name)
desc/original/DESC.py:15:0: E0401: Unable to import 'networkx' (import-error)
desc/original/DESC.py:15:0: C0413: Import "import networkx as nx" should be placed at the top of the module (wrong-import-position)
desc/original/DESC.py:16:0: C0413: Import "import matplotlib.pyplot as plt" should be placed at the top of the module (wrong-import-position)
desc/original/DESC.py:17:0: C0413: Import "from time import time" should be placed at the top of the module (wrong-import-position)
desc/original/DESC.py:18:0: C0413: Import "import numpy as np" should be placed at the top of the module (wrong-import-position)
desc/original/DESC.py:19:0: E0401: Unable to import 'keras.backend' (import-error)
desc/original/DESC.py:19:0: C0413: Import "import keras.backend as K" should be placed at the top of the module (wrong-import-position)
desc/original/DESC.py:20:0: E0401: Unable to import 'keras.engine.topology' (import-error)
desc/original/DESC.py:20:0: C0413: Import "from keras.engine.topology import Layer, InputSpec" should be placed at the top of the module (wrong-import-position)
desc/original/DESC.py:21:0: E0401: Unable to import 'keras.callbacks' (import-error)
desc/original/DESC.py:21:0: C0413: Import "from keras.callbacks import TensorBoard, ModelCheckpoint, EarlyStopping, ReduceLROnPlateau, History" should be placed at the top of the module (wrong-import-position)
desc/original/DESC.py:22:0: E0401: Unable to import 'keras.layers' (import-error)
desc/original/DESC.py:22:0: C0413: Import "from keras.layers import Dense, Input" should be placed at the top of the module (wrong-import-position)
desc/original/DESC.py:23:0: E0401: Unable to import 'keras.models' (import-error)
desc/original/DESC.py:23:0: C0413: Import "from keras.models import Model" should be placed at the top of the module (wrong-import-position)
desc/original/DESC.py:24:0: E0401: Unable to import 'keras.optimizers' (import-error)
desc/original/DESC.py:24:0: C0413: Import "from keras.optimizers import SGD" should be placed at the top of the module (wrong-import-position)
desc/original/DESC.py:25:0: E0401: Unable to import 'keras' (import-error)
desc/original/DESC.py:25:0: C0413: Import "from keras import callbacks" should be placed at the top of the module (wrong-import-position)
desc/original/DESC.py:26:0: E0401: Unable to import 'keras.initializers' (import-error)
desc/original/DESC.py:26:0: C0413: Import "from keras.initializers import VarianceScaling" should be placed at the top of the module (wrong-import-position)
desc/original/DESC.py:27:0: E0401: Unable to import 'sklearn.cluster' (import-error)
desc/original/DESC.py:27:0: C0413: Import "from sklearn.cluster import KMeans" should be placed at the top of the module (wrong-import-position)
desc/original/DESC.py:28:0: E0401: Unable to import 'scanpy.api' (import-error)
desc/original/DESC.py:28:0: C0413: Import "import scanpy.api as sc" should be placed at the top of the module (wrong-import-position)
desc/original/DESC.py:29:0: E0401: Unable to import 'pandas' (import-error)
desc/original/DESC.py:29:0: C0413: Import "import pandas as pd" should be placed at the top of the module (wrong-import-position)
desc/original/DESC.py:30:0: E0401: Unable to import 'natsort' (import-error)
desc/original/DESC.py:30:0: C0413: Import "from natsort import natsorted" should be placed at the top of the module (wrong-import-position)
desc/original/DESC.py:31:0: C0413: Import "import os" should be placed at the top of the module (wrong-import-position)
desc/original/DESC.py:34:0: W0702: No exception type(s) specified (bare-except)
desc/original/DESC.py:66:4: C0116: Missing function or method docstring (missing-function-docstring)
desc/original/DESC.py:84:8: C0103: Variable name "q" doesn't conform to snake_case naming style (invalid-name)
desc/original/DESC.py:85:8: C0103: Variable name "q" doesn't conform to snake_case naming style (invalid-name)
desc/original/DESC.py:86:8: C0103: Variable name "q" doesn't conform to snake_case naming style (invalid-name)
desc/original/DESC.py:76:0: W0613: Unused argument 'kwargs' (unused-argument)
desc/original/DESC.py:89:4: C0116: Missing function or method docstring (missing-function-docstring)
desc/original/DESC.py:93:4: C0116: Missing function or method docstring (missing-function-docstring)
desc/original/DESC.py:70:8: W0201: Attribute 'clusters' defined outside __init__ (attribute-defined-outside-init)
desc/original/DESC.py:74:8: W0201: Attribute 'built' defined outside __init__ (attribute-defined-outside-init)
desc/original/DESC.py:123:8: C0103: Attribute name "x" doesn't conform to snake_case naming style (invalid-name)
desc/original/DESC.py:136:8: C0103: Attribute name "drop_rate_SAE" doesn't conform to snake_case naming style (invalid-name)
desc/original/DESC.py:138:8: C0103: Attribute name "use_earlyStop" doesn't conform to snake_case naming style (invalid-name)
desc/original/DESC.py:99:0: C0115: Missing class docstring (missing-class-docstring)
desc/original/DESC.py:99:0: R0902: Too many instance attributes (23/7) (too-many-instance-attributes)
desc/original/DESC.py:99:0: R0205: Class 'DESC' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
desc/original/DESC.py:101:17: W0621: Redefining name 'dims' from outer scope (line 289) (redefined-outer-name)
desc/original/DESC.py:102:17: W0621: Redefining name 'x' from outer scope (line 285) (redefined-outer-name)
desc/original/DESC.py:105:17: W0621: Redefining name 'init' from outer scope (line 287) (redefined-outer-name)
desc/original/DESC.py:100:4: R0913: Too many arguments (17/5) (too-many-arguments)
desc/original/DESC.py:100:4: R0914: Too many local variables (17/15) (too-many-locals)
desc/original/DESC.py:152:8: W0621: Redefining name 't0' from outer scope (line 296) (redefined-outer-name)
desc/original/DESC.py:185:12: W0621: Redefining name 'adata' from outer scope (line 303) (redefined-outer-name)
desc/original/DESC.py:142:4: C0116: Missing function or method docstring (missing-function-docstring)
desc/original/DESC.py:143:12: E1123: Unexpected keyword argument 'actinlayer1' in constructor call (unexpected-keyword-arg)
desc/original/DESC.py:152:8: C0103: Variable name "t0" doesn't conform to snake_case naming style (invalid-name)
desc/original/DESC.py:176:12: C0103: Variable name "Y_pred_init" doesn't conform to snake_case naming style (invalid-name)
desc/original/DESC.py:188:12: C0103: Variable name "Y_pred_init" doesn't conform to snake_case naming style (invalid-name)
desc/original/DESC.py:191:12: C0103: Variable name "Group" doesn't conform to snake_case naming style (invalid-name)
desc/original/DESC.py:192:12: C0103: Variable name "Mergefeature" doesn't conform to snake_case naming style (invalid-name)
desc/original/DESC.py:202:4: C0116: Missing function or method docstring (missing-function-docstring)
desc/original/DESC.py:205:31: W0621: Redefining name 'x' from outer scope (line 285) (redefined-outer-name)
desc/original/DESC.py:205:4: C0103: Argument name "x" doesn't conform to snake_case naming style (invalid-name)
desc/original/DESC.py:205:4: C0116: Missing function or method docstring (missing-function-docstring)
desc/original/DESC.py:208:22: W0621: Redefining name 'x' from outer scope (line 285) (redefined-outer-name)
desc/original/DESC.py:208:4: C0103: Argument name "x" doesn't conform to snake_case naming style (invalid-name)
desc/original/DESC.py:208:4: C0116: Missing function or method docstring (missing-function-docstring)
desc/original/DESC.py:209:8: C0103: Variable name "q" doesn't conform to snake_case naming style (invalid-name)
desc/original/DESC.py:213:4: C0103: Argument name "q" doesn't conform to snake_case naming style (invalid-name)
desc/original/DESC.py:213:4: C0116: Missing function or method docstring (missing-function-docstring)
desc/original/DESC.py:217:4: C0116: Missing function or method docstring (missing-function-docstring)
desc/original/DESC.py:230:12: W0621: Redefining name 'y_pred' from outer scope (line 299) (redefined-outer-name)
desc/original/DESC.py:242:16: W0621: Redefining name 'callbacks' from outer scope (line 25) (redefined-outer-name)
desc/original/DESC.py:249:8: W0621: Redefining name 'x' from outer scope (line 285) (redefined-outer-name)
desc/original/DESC.py:251:8: W0621: Redefining name 'Embeded_z' from outer scope (line 298) (redefined-outer-name)
desc/original/DESC.py:220:4: C0116: Missing function or method docstring (missing-function-docstring)
desc/original/DESC.py:227:12: C0103: Variable name "q" doesn't conform to snake_case naming style (invalid-name)
desc/original/DESC.py:228:12: C0103: Variable name "p" doesn't conform to snake_case naming style (invalid-name)
desc/original/DESC.py:246:8: C0103: Variable name "y0" doesn't conform to snake_case naming style (invalid-name)
desc/original/DESC.py:249:8: C0103: Variable name "x" doesn't conform to snake_case naming style (invalid-name)
desc/original/DESC.py:251:8: C0103: Variable name "Embeded_z" doesn't conform to snake_case naming style (invalid-name)
desc/original/DESC.py:221:8: W0612: Unused variable 'save_dir' (unused-variable)
desc/original/DESC.py:268:4: W0404: Reimport 'os' (imported line 31) (reimported)
desc/original/DESC.py:273:4: W0404: Reimport 'numpy' (imported line 18) (reimported)
desc/original/DESC.py:278:8: W0621: Redefining name 'x' from outer scope (line 285) (redefined-outer-name)
desc/original/DESC.py:279:8: W0621: Redefining name 'y' from outer scope (line 285) (redefined-outer-name)
desc/original/DESC.py:274:4: C0116: Missing function or method docstring (missing-function-docstring)
desc/original/DESC.py:276:8: E0401: Unable to import 'keras.datasets' (import-error)
desc/original/DESC.py:276:8: C0415: Import outside toplevel (keras.datasets.mnist) (import-outside-toplevel)
desc/original/DESC.py:278:8: C0103: Variable name "x" doesn't conform to snake_case naming style (invalid-name)
desc/original/DESC.py:279:8: C0103: Variable name "y" doesn't conform to snake_case naming style (invalid-name)
desc/original/DESC.py:280:8: C0103: Variable name "x" doesn't conform to snake_case naming style (invalid-name)
desc/original/DESC.py:281:8: C0103: Variable name "x" doesn't conform to snake_case naming style (invalid-name)
desc/original/DESC.py:287:4: C0103: Constant name "init" doesn't conform to UPPER_CASE naming style (invalid-name)
desc/original/DESC.py:268:4: C0412: Imports from package os are not grouped (ungrouped-imports)
desc/original/DESC.py:16:0: C0412: Imports from package matplotlib are not grouped (ungrouped-imports)
desc/original/DESC.py:273:4: C0412: Imports from package numpy are not grouped (ungrouped-imports)
************* Module desc.original.load_mnist
desc/original/load_mnist.py:3:32: C0326: Exactly one space required after comma
def load_mnist(sample_size=10000,seed=0):
                                ^ (bad-whitespace)
desc/original/load_mnist.py:11:67: C0303: Trailing whitespace (trailing-whitespace)
desc/original/load_mnist.py:11:7: C0326: Exactly one space required around assignment
    id0=np.random.choice(x.shape[0],size=sample_size,replace=False) 
       ^ (bad-whitespace)
desc/original/load_mnist.py:11:35: C0326: Exactly one space required after comma
    id0=np.random.choice(x.shape[0],size=sample_size,replace=False) 
                                   ^ (bad-whitespace)
desc/original/load_mnist.py:11:52: C0326: Exactly one space required after comma
    id0=np.random.choice(x.shape[0],size=sample_size,replace=False) 
                                                    ^ (bad-whitespace)
desc/original/load_mnist.py:1:0: C0114: Missing module docstring (missing-module-docstring)
desc/original/load_mnist.py:3:0: C0116: Missing function or method docstring (missing-function-docstring)
desc/original/load_mnist.py:4:4: E0401: Unable to import 'keras.datasets' (import-error)
desc/original/load_mnist.py:4:4: C0415: Import outside toplevel (keras.datasets.mnist) (import-outside-toplevel)
desc/original/load_mnist.py:7:4: C0103: Variable name "x" doesn't conform to snake_case naming style (invalid-name)
desc/original/load_mnist.py:8:4: C0103: Variable name "y" doesn't conform to snake_case naming style (invalid-name)
desc/original/load_mnist.py:9:4: C0103: Variable name "x" doesn't conform to snake_case naming style (invalid-name)
desc/original/load_mnist.py:10:4: C0103: Variable name "x" doesn't conform to snake_case naming style (invalid-name)
************* Module desc.original.main
desc/original/main.py:18:9: C0326: Exactly one space required after comma
import os,sys,argparse,textwrap
         ^ (bad-whitespace)
desc/original/main.py:18:13: C0326: Exactly one space required after comma
import os,sys,argparse,textwrap
             ^ (bad-whitespace)
desc/original/main.py:18:22: C0326: Exactly one space required after comma
import os,sys,argparse,textwrap
                      ^ (bad-whitespace)
desc/original/main.py:24:0: C0301: Line too long (147/100) (line-too-long)
desc/original/main.py:24:28: C0326: Exactly one space required after comma
    parser.add_argument('-i','--input',type=str,help=textwrap.dedent(''' Input is raw count data in TSV(tsv,tab,data)/CSV or .h5ad(anndata) format'
                            ^ (bad-whitespace)
desc/original/main.py:24:38: C0326: Exactly one space required after comma
    parser.add_argument('-i','--input',type=str,help=textwrap.dedent(''' Input is raw count data in TSV(tsv,tab,data)/CSV or .h5ad(anndata) format'
                                      ^ (bad-whitespace)
desc/original/main.py:24:47: C0326: Exactly one space required after comma
    parser.add_argument('-i','--input',type=str,help=textwrap.dedent(''' Input is raw count data in TSV(tsv,tab,data)/CSV or .h5ad(anndata) format'
                                               ^ (bad-whitespace)
desc/original/main.py:56:0: C0301: Line too long (114/100) (line-too-long)
desc/original/main.py:56:28: C0326: Exactly one space required after comma
    parser.add_argument('-o','--output',type=str,default='adata.h5ad',help="The file name of the output`anndata`")
                            ^ (bad-whitespace)
desc/original/main.py:56:39: C0326: Exactly one space required after comma
    parser.add_argument('-o','--output',type=str,default='adata.h5ad',help="The file name of the output`anndata`")
                                       ^ (bad-whitespace)
desc/original/main.py:56:48: C0326: Exactly one space required after comma
    parser.add_argument('-o','--output',type=str,default='adata.h5ad',help="The file name of the output`anndata`")
                                                ^ (bad-whitespace)
desc/original/main.py:56:69: C0326: Exactly one space required after comma
    parser.add_argument('-o','--output',type=str,default='adata.h5ad',help="The file name of the output`anndata`")
                                                                     ^ (bad-whitespace)
desc/original/main.py:58:0: C0301: Line too long (146/100) (line-too-long)
desc/original/main.py:58:28: C0326: Exactly one space required after comma
    parser.add_argument('-t','--transpose',type=bool,default=False,help="Transpose input matrix(default:False) only True when input is cell*gene")
                            ^ (bad-whitespace)
desc/original/main.py:58:42: C0326: Exactly one space required after comma
    parser.add_argument('-t','--transpose',type=bool,default=False,help="Transpose input matrix(default:False) only True when input is cell*gene")
                                          ^ (bad-whitespace)
desc/original/main.py:58:52: C0326: Exactly one space required after comma
    parser.add_argument('-t','--transpose',type=bool,default=False,help="Transpose input matrix(default:False) only True when input is cell*gene")
                                                    ^ (bad-whitespace)
desc/original/main.py:58:66: C0326: Exactly one space required after comma
    parser.add_argument('-t','--transpose',type=bool,default=False,help="Transpose input matrix(default:False) only True when input is cell*gene")
                                                                  ^ (bad-whitespace)
desc/original/main.py:60:43: C0326: Exactly one space required after comma
    parser.add_argument('--prefilter_cells',type=bool,default=True,help='Prefilter cells')
                                           ^ (bad-whitespace)
desc/original/main.py:60:53: C0326: Exactly one space required after comma
    parser.add_argument('--prefilter_cells',type=bool,default=True,help='Prefilter cells')
                                                     ^ (bad-whitespace)
desc/original/main.py:60:66: C0326: Exactly one space required after comma
    parser.add_argument('--prefilter_cells',type=bool,default=True,help='Prefilter cells')
                                                                  ^ (bad-whitespace)
desc/original/main.py:61:67: C0303: Trailing whitespace (trailing-whitespace)
desc/original/main.py:61:39: C0326: Exactly one space required after comma
    parser.add_argument('--c_min_genes',type=int,default=1,help='')    
                                       ^ (bad-whitespace)
desc/original/main.py:61:48: C0326: Exactly one space required after comma
    parser.add_argument('--c_min_genes',type=int,default=1,help='')    
                                                ^ (bad-whitespace)
desc/original/main.py:61:58: C0326: Exactly one space required after comma
    parser.add_argument('--c_min_genes',type=int,default=1,help='')    
                                                          ^ (bad-whitespace)
desc/original/main.py:62:70: C0303: Trailing whitespace (trailing-whitespace)
desc/original/main.py:62:39: C0326: Exactly one space required after comma
    parser.add_argument('--c_max_genes',type=int,default=None,help='')    
                                       ^ (bad-whitespace)
desc/original/main.py:62:48: C0326: Exactly one space required after comma
    parser.add_argument('--c_max_genes',type=int,default=None,help='')    
                                                ^ (bad-whitespace)
desc/original/main.py:62:61: C0326: Exactly one space required after comma
    parser.add_argument('--c_max_genes',type=int,default=None,help='')    
                                                             ^ (bad-whitespace)
desc/original/main.py:63:71: C0303: Trailing whitespace (trailing-whitespace)
desc/original/main.py:63:40: C0326: Exactly one space required after comma
    parser.add_argument('--c_min_counts',type=int,default=None,help='')    
                                        ^ (bad-whitespace)
desc/original/main.py:63:49: C0326: Exactly one space required after comma
    parser.add_argument('--c_min_counts',type=int,default=None,help='')    
                                                 ^ (bad-whitespace)
desc/original/main.py:63:62: C0326: Exactly one space required after comma
    parser.add_argument('--c_min_counts',type=int,default=None,help='')    
                                                              ^ (bad-whitespace)
desc/original/main.py:64:71: C0303: Trailing whitespace (trailing-whitespace)
desc/original/main.py:64:40: C0326: Exactly one space required after comma
    parser.add_argument('--c_max_counts',type=int,default=None,help='')    
                                        ^ (bad-whitespace)
desc/original/main.py:64:49: C0326: Exactly one space required after comma
    parser.add_argument('--c_max_counts',type=int,default=None,help='')    
                                                 ^ (bad-whitespace)
desc/original/main.py:64:62: C0326: Exactly one space required after comma
    parser.add_argument('--c_max_counts',type=int,default=None,help='')    
                                                              ^ (bad-whitespace)
desc/original/main.py:66:0: C0301: Line too long (123/100) (line-too-long)
desc/original/main.py:66:123: C0303: Trailing whitespace (trailing-whitespace)
desc/original/main.py:66:45: C0326: Exactly one space required after comma
    parser.add_argument('--filter_cells_mito',type=bool,default=True,help='Whether filter cells according to mito_percent') 
                                             ^ (bad-whitespace)
desc/original/main.py:66:55: C0326: Exactly one space required after comma
    parser.add_argument('--filter_cells_mito',type=bool,default=True,help='Whether filter cells according to mito_percent') 
                                                       ^ (bad-whitespace)
desc/original/main.py:66:68: C0326: Exactly one space required after comma
    parser.add_argument('--filter_cells_mito',type=bool,default=True,help='Whether filter cells according to mito_percent') 
                                                                    ^ (bad-whitespace)
desc/original/main.py:67:0: C0301: Line too long (130/100) (line-too-long)
desc/original/main.py:67:47: C0326: Exactly one space required after comma
    parser.add_argument('--mito_percent_cutoff',type=float, default=0.10,help='The cell with mito_percent>0.20 will be filtered.')
                                               ^ (bad-whitespace)
desc/original/main.py:67:72: C0326: Exactly one space required after comma
    parser.add_argument('--mito_percent_cutoff',type=float, default=0.10,help='The cell with mito_percent>0.20 will be filtered.')
                                                                        ^ (bad-whitespace)
desc/original/main.py:68:0: C0301: Line too long (195/100) (line-too-long)
desc/original/main.py:68:52: C0326: Exactly one space required after comma
    parser.add_argument('-nUMIbefore_filter_MT_gene',type=bool,default=True,help='Compute n_counts and n_gene before filtering MT-ge                        ne if nUMIbefore_filter_MT_gene==True')
                                                    ^ (bad-whitespace)
desc/original/main.py:68:62: C0326: Exactly one space required after comma
    parser.add_argument('-nUMIbefore_filter_MT_gene',type=bool,default=True,help='Compute n_counts and n_gene before filtering MT-ge                        ne if nUMIbefore_filter_MT_gene==True')
                                                              ^ (bad-whitespace)
desc/original/main.py:68:75: C0326: Exactly one space required after comma
    parser.add_argument('-nUMIbefore_filter_MT_gene',type=bool,default=True,help='Compute n_counts and n_gene before filtering MT-ge                        ne if nUMIbefore_filter_MT_gene==True')
                                                                           ^ (bad-whitespace)
desc/original/main.py:71:0: C0301: Line too long (119/100) (line-too-long)
desc/original/main.py:71:46: C0326: Exactly one space required after comma
    parser.add_argument('--normalize_per_cell',type=bool,default=False,help='Normalize cells. if normalize_cell=False')
                                              ^ (bad-whitespace)
desc/original/main.py:71:56: C0326: Exactly one space required after comma
    parser.add_argument('--normalize_per_cell',type=bool,default=False,help='Normalize cells. if normalize_cell=False')
                                                        ^ (bad-whitespace)
desc/original/main.py:71:70: C0326: Exactly one space required after comma
    parser.add_argument('--normalize_per_cell',type=bool,default=False,help='Normalize cells. if normalize_cell=False')
                                                                      ^ (bad-whitespace)
desc/original/main.py:72:0: C0301: Line too long (144/100) (line-too-long)
desc/original/main.py:72:144: C0303: Trailing whitespace (trailing-whitespace)
desc/original/main.py:72:49: C0326: Exactly one space required after comma
    parser.add_argument('--counts_per_cell_after',default=1e4,action='store_true',help=textwrap.dedent(''' `float` or `None`, optional (default: 
                                                 ^ (bad-whitespace)
desc/original/main.py:72:61: C0326: Exactly one space required after comma
    parser.add_argument('--counts_per_cell_after',default=1e4,action='store_true',help=textwrap.dedent(''' `float` or `None`, optional (default: 
                                                             ^ (bad-whitespace)
desc/original/main.py:72:81: C0326: Exactly one space required after comma
    parser.add_argument('--counts_per_cell_after',default=1e4,action='store_true',help=textwrap.dedent(''' `float` or `None`, optional (default: 
                                                                                 ^ (bad-whitespace)
desc/original/main.py:75:0: C0301: Line too long (157/100) (line-too-long)
desc/original/main.py:75:43: C0326: Exactly one space required after comma
    parser.add_argument('--counts_per_cell',default=None,action='store_true',help='`float` or `None`, optional(default:`None`) Precomputed counts per cell.')
                                           ^ (bad-whitespace)
desc/original/main.py:75:56: C0326: Exactly one space required after comma
    parser.add_argument('--counts_per_cell',default=None,action='store_true',help='`float` or `None`, optional(default:`None`) Precomputed counts per cell.')
                                                        ^ (bad-whitespace)
desc/original/main.py:75:76: C0326: Exactly one space required after comma
    parser.add_argument('--counts_per_cell',default=None,action='store_true',help='`float` or `None`, optional(default:`None`) Precomputed counts per cell.')
                                                                            ^ (bad-whitespace)
desc/original/main.py:77:43: C0326: Exactly one space required after comma
    parser.add_argument('--prefilter_genes',type=bool,default=True,help='Prefilter cells')
                                           ^ (bad-whitespace)
desc/original/main.py:77:53: C0326: Exactly one space required after comma
    parser.add_argument('--prefilter_genes',type=bool,default=True,help='Prefilter cells')
                                                     ^ (bad-whitespace)
desc/original/main.py:77:66: C0326: Exactly one space required after comma
    parser.add_argument('--prefilter_genes',type=bool,default=True,help='Prefilter cells')
                                                                  ^ (bad-whitespace)
desc/original/main.py:78:67: C0303: Trailing whitespace (trailing-whitespace)
desc/original/main.py:78:39: C0326: Exactly one space required after comma
    parser.add_argument('--g_min_cells',type=int,default=1,help='')    
                                       ^ (bad-whitespace)
desc/original/main.py:78:48: C0326: Exactly one space required after comma
    parser.add_argument('--g_min_cells',type=int,default=1,help='')    
                                                ^ (bad-whitespace)
desc/original/main.py:78:58: C0326: Exactly one space required after comma
    parser.add_argument('--g_min_cells',type=int,default=1,help='')    
                                                          ^ (bad-whitespace)
desc/original/main.py:79:70: C0303: Trailing whitespace (trailing-whitespace)
desc/original/main.py:79:39: C0326: Exactly one space required after comma
    parser.add_argument('--g_max_cells',type=int,default=None,help='')    
                                       ^ (bad-whitespace)
desc/original/main.py:79:48: C0326: Exactly one space required after comma
    parser.add_argument('--g_max_cells',type=int,default=None,help='')    
                                                ^ (bad-whitespace)
desc/original/main.py:79:61: C0326: Exactly one space required after comma
    parser.add_argument('--g_max_cells',type=int,default=None,help='')    
                                                             ^ (bad-whitespace)
desc/original/main.py:80:71: C0303: Trailing whitespace (trailing-whitespace)
desc/original/main.py:80:40: C0326: Exactly one space required after comma
    parser.add_argument('--g_min_counts',type=int,default=None,help='')    
                                        ^ (bad-whitespace)
desc/original/main.py:80:49: C0326: Exactly one space required after comma
    parser.add_argument('--g_min_counts',type=int,default=None,help='')    
                                                 ^ (bad-whitespace)
desc/original/main.py:80:62: C0326: Exactly one space required after comma
    parser.add_argument('--g_min_counts',type=int,default=None,help='')    
                                                              ^ (bad-whitespace)
desc/original/main.py:81:71: C0303: Trailing whitespace (trailing-whitespace)
desc/original/main.py:81:40: C0326: Exactly one space required after comma
    parser.add_argument('--g_max_counts',type=int,default=None,help='')  
                                        ^ (bad-whitespace)
desc/original/main.py:81:49: C0326: Exactly one space required after comma
    parser.add_argument('--g_max_counts',type=int,default=None,help='')  
                                                 ^ (bad-whitespace)
desc/original/main.py:81:62: C0326: Exactly one space required after comma
    parser.add_argument('--g_max_counts',type=int,default=None,help='')  
                                                              ^ (bad-whitespace)
desc/original/main.py:83:0: C0301: Line too long (161/100) (line-too-long)
desc/original/main.py:83:47: C0326: Exactly one space required after comma
    parser.add_argument('--find_variable_genes',type=bool,default=True,help='find variable genes, the parameter is same as scanpy.api.pp.filter_gene_dispersion')
                                               ^ (bad-whitespace)
desc/original/main.py:83:57: C0326: Exactly one space required after comma
    parser.add_argument('--find_variable_genes',type=bool,default=True,help='find variable genes, the parameter is same as scanpy.api.pp.filter_gene_dispersion')
                                                         ^ (bad-whitespace)
desc/original/main.py:83:70: C0326: Exactly one space required after comma
    parser.add_argument('--find_variable_genes',type=bool,default=True,help='find variable genes, the parameter is same as scanpy.api.pp.filter_gene_dispersion')
                                                                      ^ (bad-whitespace)
desc/original/main.py:84:0: C0301: Line too long (142/100) (line-too-long)
desc/original/main.py:84:34: C0326: Exactly one space required after comma
    parser.add_argument('--flavor',type=str,default='seurat',help=textwrap.dedent(''' "{'seurat', 'cell_ranger'}, optional (default: 'seurat')
                                  ^ (bad-whitespace)
desc/original/main.py:84:43: C0326: Exactly one space required after comma
    parser.add_argument('--flavor',type=str,default='seurat',help=textwrap.dedent(''' "{'seurat', 'cell_ranger'}, optional (default: 'seurat')
                                           ^ (bad-whitespace)
desc/original/main.py:84:60: C0326: Exactly one space required after comma
    parser.add_argument('--flavor',type=str,default='seurat',help=textwrap.dedent(''' "{'seurat', 'cell_ranger'}, optional (default: 'seurat')
                                                            ^ (bad-whitespace)
desc/original/main.py:94:36: C0326: Exactly one space required after comma
    parser.add_argument('--min_mean',type=float,default=0.0125)
                                    ^ (bad-whitespace)
desc/original/main.py:94:47: C0326: Exactly one space required after comma
    parser.add_argument('--min_mean',type=float,default=0.0125)
                                               ^ (bad-whitespace)
desc/original/main.py:95:36: C0326: Exactly one space required after comma
    parser.add_argument('--max_mean',type=float,default=None)
                                    ^ (bad-whitespace)
desc/original/main.py:95:47: C0326: Exactly one space required after comma
    parser.add_argument('--max_mean',type=float,default=None)
                                               ^ (bad-whitespace)
desc/original/main.py:96:36: C0326: Exactly one space required after comma
    parser.add_argument('--min_disp',type=float,default=None)
                                    ^ (bad-whitespace)
desc/original/main.py:96:47: C0326: Exactly one space required after comma
    parser.add_argument('--min_disp',type=float,default=None)
                                               ^ (bad-whitespace)
desc/original/main.py:97:36: C0326: Exactly one space required after comma
    parser.add_argument('--max_disp',type=float,default=None)
                                    ^ (bad-whitespace)
desc/original/main.py:97:47: C0326: Exactly one space required after comma
    parser.add_argument('--max_disp',type=float,default=None)
                                               ^ (bad-whitespace)
desc/original/main.py:98:0: C0301: Line too long (110/100) (line-too-long)
desc/original/main.py:98:39: C0326: Exactly one space required after comma
    parser.add_argument('--n_top_genes',type=int,default=1000,help="Number of highly-variable genes to keep.")
                                       ^ (bad-whitespace)
desc/original/main.py:98:48: C0326: Exactly one space required after comma
    parser.add_argument('--n_top_genes',type=int,default=1000,help="Number of highly-variable genes to keep.")
                                                ^ (bad-whitespace)
desc/original/main.py:98:61: C0326: Exactly one space required after comma
    parser.add_argument('--n_top_genes',type=int,default=1000,help="Number of highly-variable genes to keep.")
                                                             ^ (bad-whitespace)
desc/original/main.py:100:0: C0301: Line too long (116/100) (line-too-long)
desc/original/main.py:100:33: C0326: Exactly one space required after comma
    parser.add_argument('--log1p',type=bool,default=True,help='Take log1p transformation after find variable genes')
                                 ^ (bad-whitespace)
desc/original/main.py:100:43: C0326: Exactly one space required after comma
    parser.add_argument('--log1p',type=bool,default=True,help='Take log1p transformation after find variable genes')
                                           ^ (bad-whitespace)
desc/original/main.py:100:56: C0326: Exactly one space required after comma
    parser.add_argument('--log1p',type=bool,default=True,help='Take log1p transformation after find variable genes')
                                                        ^ (bad-whitespace)
desc/original/main.py:102:0: C0301: Line too long (131/100) (line-too-long)
desc/original/main.py:102:38: C0326: Exactly one space required after comma
    parser.add_argument('--scale_data',type=int,default=1,help='one of [0,1,2],0:no scale, 1:scale overall cells 2:scale by group')
                                      ^ (bad-whitespace)
desc/original/main.py:102:47: C0326: Exactly one space required after comma
    parser.add_argument('--scale_data',type=int,default=1,help='one of [0,1,2],0:no scale, 1:scale overall cells 2:scale by group')
                                               ^ (bad-whitespace)
desc/original/main.py:102:57: C0326: Exactly one space required after comma
    parser.add_argument('--scale_data',type=int,default=1,help='one of [0,1,2],0:no scale, 1:scale overall cells 2:scale by group')
                                                         ^ (bad-whitespace)
desc/original/main.py:103:0: C0301: Line too long (120/100) (line-too-long)
desc/original/main.py:103:33: C0326: Exactly one space required after comma
    parser.add_argument('--group',type=str,default=None,help='Scale gene by group, group must be the columns of adata.')
                                 ^ (bad-whitespace)
desc/original/main.py:103:42: C0326: Exactly one space required after comma
    parser.add_argument('--group',type=str,default=None,help='Scale gene by group, group must be the columns of adata.')
                                          ^ (bad-whitespace)
desc/original/main.py:103:55: C0326: Exactly one space required after comma
    parser.add_argument('--group',type=str,default=None,help='Scale gene by group, group must be the columns of adata.')
                                                       ^ (bad-whitespace)
desc/original/main.py:104:37: C0326: Exactly one space required after comma
    parser.add_argument('--max_value',type=str,default=None,help='The maxmum value after scale')
                                     ^ (bad-whitespace)
desc/original/main.py:104:46: C0326: Exactly one space required after comma
    parser.add_argument('--max_value',type=str,default=None,help='The maxmum value after scale')
                                              ^ (bad-whitespace)
desc/original/main.py:104:59: C0326: Exactly one space required after comma
    parser.add_argument('--max_value',type=str,default=None,help='The maxmum value after scale')
                                                           ^ (bad-whitespace)
desc/original/main.py:105:0: C0303: Trailing whitespace (trailing-whitespace)
desc/original/main.py:106:25: C0303: Trailing whitespace (trailing-whitespace)
desc/original/main.py:107:33: C0326: Exactly one space required after comma
    parser.add_argument('--alpha',type=float,default=1.0,help='the degree of t-distribution')
                                 ^ (bad-whitespace)
desc/original/main.py:107:44: C0326: Exactly one space required after comma
    parser.add_argument('--alpha',type=float,default=1.0,help='the degree of t-distribution')
                                            ^ (bad-whitespace)
desc/original/main.py:107:56: C0326: Exactly one space required after comma
    parser.add_argument('--alpha',type=float,default=1.0,help='the degree of t-distribution')
                                                        ^ (bad-whitespace)
desc/original/main.py:108:0: C0301: Line too long (206/100) (line-too-long)
desc/original/main.py:108:31: C0326: Exactly one space required after comma
    parser.add_argument('--tol',type=float,default=0.005,help='Stop criterion, clustering procedure will be stoped when the difference ratio betwen the current iteration and last iteration larger than tol')
                               ^ (bad-whitespace)
desc/original/main.py:108:42: C0326: Exactly one space required after comma
    parser.add_argument('--tol',type=float,default=0.005,help='Stop criterion, clustering procedure will be stoped when the difference ratio betwen the current iteration and last iteration larger than tol')
                                          ^ (bad-whitespace)
desc/original/main.py:108:56: C0326: Exactly one space required after comma
    parser.add_argument('--tol',type=float,default=0.005,help='Stop criterion, clustering procedure will be stoped when the difference ratio betwen the current iteration and last iteration larger than tol')
                                                        ^ (bad-whitespace)
desc/original/main.py:109:0: C0301: Line too long (122/100) (line-too-long)
desc/original/main.py:109:32: C0326: Exactly one space required after comma
    parser.add_argument('--init',type=str,default='glorot_uniform',help='Initializing distribution,detail refer to keras')
                                ^ (bad-whitespace)
desc/original/main.py:109:41: C0326: Exactly one space required after comma
    parser.add_argument('--init',type=str,default='glorot_uniform',help='Initializing distribution,detail refer to keras')
                                         ^ (bad-whitespace)
desc/original/main.py:109:66: C0326: Exactly one space required after comma
    parser.add_argument('--init',type=str,default='glorot_uniform',help='Initializing distribution,detail refer to keras')
                                                                  ^ (bad-whitespace)
desc/original/main.py:110:0: C0301: Line too long (188/100) (line-too-long)
desc/original/main.py:110:38: C0326: Exactly one space required after comma
    parser.add_argument('--n_clusters',type=int,default=None,help="The number of clusters for K-means methods, if not sepcified, it will use louvain method to initialize cluster centroid")
                                      ^ (bad-whitespace)
desc/original/main.py:110:47: C0326: Exactly one space required after comma
    parser.add_argument('--n_clusters',type=int,default=None,help="The number of clusters for K-means methods, if not sepcified, it will use louvain method to initialize cluster centroid")
                                               ^ (bad-whitespace)
desc/original/main.py:110:60: C0326: Exactly one space required after comma
    parser.add_argument('--n_clusters',type=int,default=None,help="The number of clusters for K-means methods, if not sepcified, it will use louvain method to initialize cluster centroid")
                                                            ^ (bad-whitespace)
desc/original/main.py:111:0: C0301: Line too long (119/100) (line-too-long)
desc/original/main.py:111:46: C0326: Exactly one space required after comma
    parser.add_argument('--louvain_resolution',type=float,default=[0.4],nargs='+',help="resolution for louvian method")
                                              ^ (bad-whitespace)
desc/original/main.py:111:57: C0326: Exactly one space required after comma
    parser.add_argument('--louvain_resolution',type=float,default=[0.4],nargs='+',help="resolution for louvian method")
                                                         ^ (bad-whitespace)
desc/original/main.py:111:71: C0326: Exactly one space required after comma
    parser.add_argument('--louvain_resolution',type=float,default=[0.4],nargs='+',help="resolution for louvian method")
                                                                       ^ (bad-whitespace)
desc/original/main.py:111:81: C0326: Exactly one space required after comma
    parser.add_argument('--louvain_resolution',type=float,default=[0.4],nargs='+',help="resolution for louvian method")
                                                                                 ^ (bad-whitespace)
desc/original/main.py:112:0: C0301: Line too long (113/100) (line-too-long)
desc/original/main.py:112:39: C0326: Exactly one space required after comma
    parser.add_argument('--n_neighbors',type=int,default=15,help="The neighbors for connectivity matrix of cell")
                                       ^ (bad-whitespace)
desc/original/main.py:112:48: C0326: Exactly one space required after comma
    parser.add_argument('--n_neighbors',type=int,default=15,help="The neighbors for connectivity matrix of cell")
                                                ^ (bad-whitespace)
desc/original/main.py:112:59: C0326: Exactly one space required after comma
    parser.add_argument('--n_neighbors',type=int,default=15,help="The neighbors for connectivity matrix of cell")
                                                           ^ (bad-whitespace)
desc/original/main.py:113:0: C0301: Line too long (115/100) (line-too-long)
desc/original/main.py:113:43: C0326: Exactly one space required after comma
    parser.add_argument('--pretrain_epochs',type=int,default=300,help='the number of epochs for autoencoder model')
                                           ^ (bad-whitespace)
desc/original/main.py:113:52: C0326: Exactly one space required after comma
    parser.add_argument('--pretrain_epochs',type=int,default=300,help='the number of epochs for autoencoder model')
                                                    ^ (bad-whitespace)
desc/original/main.py:113:64: C0326: Exactly one space required after comma
    parser.add_argument('--pretrain_epochs',type=int,default=300,help='the number of epochs for autoencoder model')
                                                                ^ (bad-whitespace)
desc/original/main.py:114:0: C0301: Line too long (125/100) (line-too-long)
desc/original/main.py:114:38: C0326: Exactly one space required after comma
    parser.add_argument('--batch_size',type=int,default=256,help='the batch size for autoencoder model and clustering model')
                                      ^ (bad-whitespace)
desc/original/main.py:114:47: C0326: Exactly one space required after comma
    parser.add_argument('--batch_size',type=int,default=256,help='the batch size for autoencoder model and clustering model')
                                               ^ (bad-whitespace)
desc/original/main.py:114:59: C0326: Exactly one space required after comma
    parser.add_argument('--batch_size',type=int,default=256,help='the batch size for autoencoder model and clustering model')
                                                           ^ (bad-whitespace)
desc/original/main.py:115:0: C0301: Line too long (227/100) (line-too-long)
desc/original/main.py:115:38: C0326: Exactly one space required after comma
    parser.add_argument('--activation',type=str,default='relu',help="the activation function for autoencoder model,which can be `elu,selu,softplus,tanh,siogmid et al.`, for detail please refer to`https://keras.io/activations/")
                                      ^ (bad-whitespace)
desc/original/main.py:115:47: C0326: Exactly one space required after comma
    parser.add_argument('--activation',type=str,default='relu',help="the activation function for autoencoder model,which can be `elu,selu,softplus,tanh,siogmid et al.`, for detail please refer to`https://keras.io/activations/")
                                               ^ (bad-whitespace)
desc/original/main.py:115:62: C0326: Exactly one space required after comma
    parser.add_argument('--activation',type=str,default='relu',help="the activation function for autoencoder model,which can be `elu,selu,softplus,tanh,siogmid et al.`, for detail please refer to`https://keras.io/activations/")
                                                              ^ (bad-whitespace)
desc/original/main.py:116:0: C0301: Line too long (144/100) (line-too-long)
desc/original/main.py:116:39: C0326: Exactly one space required after comma
    parser.add_argument('--actinlayer1',type=str,default='tanh',help=' the activation function for the last layer in encoder and decoder model')
                                       ^ (bad-whitespace)
desc/original/main.py:116:48: C0326: Exactly one space required after comma
    parser.add_argument('--actinlayer1',type=str,default='tanh',help=' the activation function for the last layer in encoder and decoder model')
                                                ^ (bad-whitespace)
desc/original/main.py:116:63: C0326: Exactly one space required after comma
    parser.add_argument('--actinlayer1',type=str,default='tanh',help=' the activation function for the last layer in encoder and decoder model')
                                                               ^ (bad-whitespace)
desc/original/main.py:117:0: C0301: Line too long (138/100) (line-too-long)
desc/original/main.py:117:41: C0326: Exactly one space required after comma
    parser.add_argument('--drop_rate_SAE',type=float,default=0.2,help='The drop rate for Stacked autoencoder, which just for  finetuning')
                                         ^ (bad-whitespace)
desc/original/main.py:117:52: C0326: Exactly one space required after comma
    parser.add_argument('--drop_rate_SAE',type=float,default=0.2,help='The drop rate for Stacked autoencoder, which just for  finetuning')
                                                    ^ (bad-whitespace)
desc/original/main.py:117:64: C0326: Exactly one space required after comma
    parser.add_argument('--drop_rate_SAE',type=float,default=0.2,help='The drop rate for Stacked autoencoder, which just for  finetuning')
                                                                ^ (bad-whitespace)
desc/original/main.py:118:0: C0301: Line too long (141/100) (line-too-long)
desc/original/main.py:118:38: C0326: Exactly one space required after comma
    parser.add_argument('--is_stacked',type=bool,default=True,help='The model will be pretrained by stacked autoencoder if is_stacked==True')
                                      ^ (bad-whitespace)
desc/original/main.py:118:48: C0326: Exactly one space required after comma
    parser.add_argument('--is_stacked',type=bool,default=True,help='The model will be pretrained by stacked autoencoder if is_stacked==True')
                                                ^ (bad-whitespace)
desc/original/main.py:118:61: C0326: Exactly one space required after comma
    parser.add_argument('--is_stacked',type=bool,default=True,help='The model will be pretrained by stacked autoencoder if is_stacked==True')
                                                             ^ (bad-whitespace)
desc/original/main.py:119:0: C0301: Line too long (150/100) (line-too-long)
desc/original/main.py:119:41: C0326: Exactly one space required after comma
    parser.add_argument('--use_earlyStop',type=bool,default=True,help='Stops training if loss does not improve if given min_delta=1e-4, patience=10.')
                                         ^ (bad-whitespace)
desc/original/main.py:119:51: C0326: Exactly one space required after comma
    parser.add_argument('--use_earlyStop',type=bool,default=True,help='Stops training if loss does not improve if given min_delta=1e-4, patience=10.')
                                                   ^ (bad-whitespace)
desc/original/main.py:119:64: C0326: Exactly one space required after comma
    parser.add_argument('--use_earlyStop',type=bool,default=True,help='Stops training if loss does not improve if given min_delta=1e-4, patience=10.')
                                                                ^ (bad-whitespace)
desc/original/main.py:120:36: C0326: Exactly one space required after comma
    parser.add_argument('--save_dir',type=str,default='result_tmp',help='The  directory for result')
                                    ^ (bad-whitespace)
desc/original/main.py:120:45: C0326: Exactly one space required after comma
    parser.add_argument('--save_dir',type=str,default='result_tmp',help='The  directory for result')
                                             ^ (bad-whitespace)
desc/original/main.py:120:66: C0326: Exactly one space required after comma
    parser.add_argument('--save_dir',type=str,default='result_tmp',help='The  directory for result')
                                                                  ^ (bad-whitespace)
desc/original/main.py:121:0: C0301: Line too long (104/100) (line-too-long)
desc/original/main.py:121:36: C0326: Exactly one space required after comma
    parser.add_argument('--max_iter',type=int,default=1000,help=' The maximum iteration for clustering')
                                    ^ (bad-whitespace)
desc/original/main.py:121:45: C0326: Exactly one space required after comma
    parser.add_argument('--max_iter',type=int,default=1000,help=' The maximum iteration for clustering')
                                             ^ (bad-whitespace)
desc/original/main.py:121:58: C0326: Exactly one space required after comma
    parser.add_argument('--max_iter',type=int,default=1000,help=' The maximum iteration for clustering')
                                                          ^ (bad-whitespace)
desc/original/main.py:122:0: C0301: Line too long (175/100) (line-too-long)
desc/original/main.py:122:38: C0326: Exactly one space required after comma
    parser.add_argument('--epochs_fit',type=int,default=4,help='updateing clustering probability for every epochs_fit. If sample size is samll, we tend to set a larger value')
                                      ^ (bad-whitespace)
desc/original/main.py:122:47: C0326: Exactly one space required after comma
    parser.add_argument('--epochs_fit',type=int,default=4,help='updateing clustering probability for every epochs_fit. If sample size is samll, we tend to set a larger value')
                                               ^ (bad-whitespace)
desc/original/main.py:122:57: C0326: Exactly one space required after comma
    parser.add_argument('--epochs_fit',type=int,default=4,help='updateing clustering probability for every epochs_fit. If sample size is samll, we tend to set a larger value')
                                                         ^ (bad-whitespace)
desc/original/main.py:123:0: C0301: Line too long (199/100) (line-too-long)
desc/original/main.py:123:37: C0326: Exactly one space required after comma
    parser.add_argument('--num_Cores',type=int,default=20,help='How many cpus use during tranning. if num_Cores > the max cpus in our computer , num_Cores will use  a half of cpus in your computer.')
                                     ^ (bad-whitespace)
desc/original/main.py:123:46: C0326: Exactly one space required after comma
    parser.add_argument('--num_Cores',type=int,default=20,help='How many cpus use during tranning. if num_Cores > the max cpus in our computer , num_Cores will use  a half of cpus in your computer.')
                                              ^ (bad-whitespace)
desc/original/main.py:123:57: C0326: Exactly one space required after comma
    parser.add_argument('--num_Cores',type=int,default=20,help='How many cpus use during tranning. if num_Cores > the max cpus in our computer , num_Cores will use  a half of cpus in your computer.')
                                                         ^ (bad-whitespace)
desc/original/main.py:124:0: C0301: Line too long (118/100) (line-too-long)
desc/original/main.py:124:35: C0326: Exactly one space required after comma
    parser.add_argument('--use_GPU',type=bool,default=False,help='It will use GPU to train model if GPU is avaliable')
                                   ^ (bad-whitespace)
desc/original/main.py:124:45: C0326: Exactly one space required after comma
    parser.add_argument('--use_GPU',type=bool,default=False,help='It will use GPU to train model if GPU is avaliable')
                                             ^ (bad-whitespace)
desc/original/main.py:124:59: C0326: Exactly one space required after comma
    parser.add_argument('--use_GPU',type=bool,default=False,help='It will use GPU to train model if GPU is avaliable')
                                                           ^ (bad-whitespace)
desc/original/main.py:125:0: C0301: Line too long (149/100) (line-too-long)
desc/original/main.py:125:39: C0326: Exactly one space required after comma
    parser.add_argument('--random_seed',type=int,default=201809,help='he random seed for random.seed,,,numpy.random.seed,tensorflow.set_random_seed')
                                       ^ (bad-whitespace)
desc/original/main.py:125:48: C0326: Exactly one space required after comma
    parser.add_argument('--random_seed',type=int,default=201809,help='he random seed for random.seed,,,numpy.random.seed,tensorflow.set_random_seed')
                                                ^ (bad-whitespace)
desc/original/main.py:125:63: C0326: Exactly one space required after comma
    parser.add_argument('--random_seed',type=int,default=201809,help='he random seed for random.seed,,,numpy.random.seed,tensorflow.set_random_seed')
                                                               ^ (bad-whitespace)
desc/original/main.py:126:0: C0301: Line too long (117/100) (line-too-long)
desc/original/main.py:126:35: C0326: Exactly one space required after comma
    parser.add_argument('--verbose',type=bool,default=False,help='It will ouput the model summary if verbose==True.')
                                   ^ (bad-whitespace)
desc/original/main.py:126:45: C0326: Exactly one space required after comma
    parser.add_argument('--verbose',type=bool,default=False,help='It will ouput the model summary if verbose==True.')
                                             ^ (bad-whitespace)
desc/original/main.py:126:59: C0326: Exactly one space required after comma
    parser.add_argument('--verbose',type=bool,default=False,help='It will ouput the model summary if verbose==True.')
                                                           ^ (bad-whitespace)
desc/original/main.py:128:0: C0303: Trailing whitespace (trailing-whitespace)
desc/original/main.py:130:8: C0326: Exactly one space required around assignment
    args=parse_args()
        ^ (bad-whitespace)
desc/original/main.py:136:0: C0301: Line too long (134/100) (line-too-long)
desc/original/main.py:136:134: C0303: Trailing whitespace (trailing-whitespace)
desc/original/main.py:138:62: C0303: Trailing whitespace (trailing-whitespace)
desc/original/main.py:138:9: C0326: Exactly one space required around assignment
    adata=io.read_dataset(args.input,transpose=args.transpose) 
         ^ (bad-whitespace)
desc/original/main.py:138:36: C0326: Exactly one space required after comma
    adata=io.read_dataset(args.input,transpose=args.transpose) 
                                    ^ (bad-whitespace)
desc/original/main.py:140:28: C0303: Trailing whitespace (trailing-whitespace)
desc/original/main.py:141:0: C0301: Line too long (144/100) (line-too-long)
desc/original/main.py:141:32: C0326: Exactly one space required after comma
        io.prefilter_cells(adata,min_counts=args.c_min_genes,max_counts=args.c_max_counts,min_genes=args.c_min_genes,max_genes=args.c_max_genes)
                                ^ (bad-whitespace)
desc/original/main.py:141:60: C0326: Exactly one space required after comma
        io.prefilter_cells(adata,min_counts=args.c_min_genes,max_counts=args.c_max_counts,min_genes=args.c_min_genes,max_genes=args.c_max_genes)
                                                            ^ (bad-whitespace)
desc/original/main.py:141:89: C0326: Exactly one space required after comma
        io.prefilter_cells(adata,min_counts=args.c_min_genes,max_counts=args.c_max_counts,min_genes=args.c_min_genes,max_genes=args.c_max_genes)
                                                                                         ^ (bad-whitespace)
desc/original/main.py:141:116: C0326: Exactly one space required after comma
        io.prefilter_cells(adata,min_counts=args.c_min_genes,max_counts=args.c_max_counts,min_genes=args.c_min_genes,max_genes=args.c_max_genes)
                                                                                                                    ^ (bad-whitespace)
desc/original/main.py:142:0: C0301: Line too long (117/100) (line-too-long)
desc/original/main.py:144:0: C0301: Line too long (137/100) (line-too-long)
desc/original/main.py:144:137: C0303: Trailing whitespace (trailing-whitespace)
desc/original/main.py:144:34: C0326: Exactly one space required after comma
        io.filter_cells_mito(adata,mito_percent_cutoff=args.mito_percent_cutoff,nUMIbefore_filter_MT_gene=args.nUMIbefore_filter_MT_gene) 
                                  ^ (bad-whitespace)
desc/original/main.py:144:79: C0326: Exactly one space required after comma
        io.filter_cells_mito(adata,mito_percent_cutoff=args.mito_percent_cutoff,nUMIbefore_filter_MT_gene=args.nUMIbefore_filter_MT_gene) 
                                                                               ^ (bad-whitespace)
desc/original/main.py:147:0: C0301: Line too long (125/100) (line-too-long)
desc/original/main.py:147:38: C0326: Exactly one space required after comma
        sc.pp.normalize_per_cell(adata,counts_per_cell_after=args.counts_per_cell_after,counts_per_cell=args.counts_per_cell)
                                      ^ (bad-whitespace)
desc/original/main.py:147:87: C0326: Exactly one space required after comma
        sc.pp.normalize_per_cell(adata,counts_per_cell_after=args.counts_per_cell_after,counts_per_cell=args.counts_per_cell)
                                                                                       ^ (bad-whitespace)
desc/original/main.py:148:17: C0326: Exactly one space required around assignment
        adata.raw=sc.pp.log1p(adata,copy=True)
                 ^ (bad-whitespace)
desc/original/main.py:148:35: C0326: Exactly one space required after comma
        adata.raw=sc.pp.log1p(adata,copy=True)
                                   ^ (bad-whitespace)
desc/original/main.py:151:28: C0303: Trailing whitespace (trailing-whitespace)
desc/original/main.py:152:0: C0301: Line too long (145/100) (line-too-long)
desc/original/main.py:152:32: C0326: Exactly one space required after comma
        io.prefilter_genes(adata,min_counts=args.g_min_counts,max_counts=args.g_min_counts,min_cells=args.g_min_cells,max_cells=args.g_max_cells)
                                ^ (bad-whitespace)
desc/original/main.py:152:61: C0326: Exactly one space required after comma
        io.prefilter_genes(adata,min_counts=args.g_min_counts,max_counts=args.g_min_counts,min_cells=args.g_min_cells,max_cells=args.g_max_cells)
                                                             ^ (bad-whitespace)
desc/original/main.py:152:90: C0326: Exactly one space required after comma
        io.prefilter_genes(adata,min_counts=args.g_min_counts,max_counts=args.g_min_counts,min_cells=args.g_min_cells,max_cells=args.g_max_cells)
                                                                                          ^ (bad-whitespace)
desc/original/main.py:152:117: C0326: Exactly one space required after comma
        io.prefilter_genes(adata,min_counts=args.g_min_counts,max_counts=args.g_min_counts,min_cells=args.g_min_cells,max_cells=args.g_max_cells)
                                                                                                                     ^ (bad-whitespace)
desc/original/main.py:154:32: C0303: Trailing whitespace (trailing-whitespace)
desc/original/main.py:155:0: C0301: Line too long (103/100) (line-too-long)
desc/original/main.py:155:39: C0326: Exactly one space required after comma
        assert args.flavor in ["seurat","cell_ranger"],"flavor must be one of{'seurat', 'cell_ranger'}"
                                       ^ (bad-whitespace)
desc/original/main.py:155:54: C0326: Exactly one space required after comma
        assert args.flavor in ["seurat","cell_ranger"],"flavor must be one of{'seurat', 'cell_ranger'}"
                                                      ^ (bad-whitespace)
desc/original/main.py:156:0: C0301: Line too long (142/100) (line-too-long)
desc/original/main.py:156:43: C0326: Exactly one space required after comma
        sc.pp.filter_genes_dispersion(adata,max_mean=args.max_mean,min_disp=args.min_disp,max_disp=args.max_disp,n_top_genes=args.n_top_genes)
                                           ^ (bad-whitespace)
desc/original/main.py:156:66: C0326: Exactly one space required after comma
        sc.pp.filter_genes_dispersion(adata,max_mean=args.max_mean,min_disp=args.min_disp,max_disp=args.max_disp,n_top_genes=args.n_top_genes)
                                                                  ^ (bad-whitespace)
desc/original/main.py:156:89: C0326: Exactly one space required after comma
        sc.pp.filter_genes_dispersion(adata,max_mean=args.max_mean,min_disp=args.min_disp,max_disp=args.max_disp,n_top_genes=args.n_top_genes)
                                                                                         ^ (bad-whitespace)
desc/original/main.py:156:112: C0326: Exactly one space required after comma
        sc.pp.filter_genes_dispersion(adata,max_mean=args.max_mean,min_disp=args.min_disp,max_disp=args.max_disp,n_top_genes=args.n_top_genes)
                                                                                                                ^ (bad-whitespace)
desc/original/main.py:161:36: C0326: Exactly one space required after comma
        assert args.scale_data in [0,1,2],'`scale_data` must be of one of 0,1,2'
                                    ^ (bad-whitespace)
desc/original/main.py:161:38: C0326: Exactly one space required after comma
        assert args.scale_data in [0,1,2],'`scale_data` must be of one of 0,1,2'
                                      ^ (bad-whitespace)
desc/original/main.py:161:41: C0326: Exactly one space required after comma
        assert args.scale_data in [0,1,2],'`scale_data` must be of one of 0,1,2'
                                         ^ (bad-whitespace)
desc/original/main.py:162:13: C0326: Exactly one space required around assignment
        adata=io.scale_by_group(adata,groupby=args.group,max_value=args.max_value)
             ^ (bad-whitespace)
desc/original/main.py:162:37: C0326: Exactly one space required after comma
        adata=io.scale_by_group(adata,groupby=args.group,max_value=args.max_value)
                                     ^ (bad-whitespace)
desc/original/main.py:162:56: C0326: Exactly one space required after comma
        adata=io.scale_by_group(adata,groupby=args.group,max_value=args.max_value)
                                                        ^ (bad-whitespace)
desc/original/main.py:164:32: C0303: Trailing whitespace (trailing-whitespace)
desc/original/main.py:164:8: C0326: Exactly one space required around assignment
    dims=[adata.shape[-1],64,32]  
        ^ (bad-whitespace)
desc/original/main.py:164:25: C0326: Exactly one space required after comma
    dims=[adata.shape[-1],64,32]  
                         ^ (bad-whitespace)
desc/original/main.py:164:28: C0326: Exactly one space required after comma
    dims=[adata.shape[-1],64,32]  
                            ^ (bad-whitespace)
desc/original/main.py:165:9: C0326: Exactly one space required around assignment
    adata=train.train(adata,
         ^ (bad-whitespace)
desc/original/main.py:166:0: C0330: Wrong continued indentation (add 10 spaces).
            alpha=args.alpha,
            ^         | (bad-continuation)
desc/original/main.py:167:0: C0330: Wrong continued indentation (add 10 spaces).
            tol=args.tol,
            ^         | (bad-continuation)
desc/original/main.py:168:0: C0330: Wrong continued indentation (add 10 spaces).
            init=args.init,
            ^         | (bad-continuation)
desc/original/main.py:169:0: C0330: Wrong continued indentation (add 10 spaces).
            n_clusters=args.n_clusters,
            ^         | (bad-continuation)
desc/original/main.py:170:0: C0330: Wrong continued indentation (add 10 spaces).
            louvain_resolution=args.louvain_resolution,
            ^         | (bad-continuation)
desc/original/main.py:171:0: C0330: Wrong continued indentation (add 10 spaces).
            n_neighbors=args.n_neighbors,
            ^         | (bad-continuation)
desc/original/main.py:172:0: C0330: Wrong continued indentation (add 10 spaces).
            pretrain_epochs=args.pretrain_epochs,
            ^         | (bad-continuation)
desc/original/main.py:173:0: C0330: Wrong continued indentation (add 10 spaces).
            batch_size=args.batch_size,
            ^         | (bad-continuation)
desc/original/main.py:174:0: C0330: Wrong continued indentation (add 10 spaces).
            activation=args.activation,
            ^         | (bad-continuation)
desc/original/main.py:175:0: C0330: Wrong continued indentation (add 10 spaces).
            actinlayer1=args.actinlayer1,
            ^         | (bad-continuation)
desc/original/main.py:176:0: C0330: Wrong continued indentation (add 10 spaces).
            drop_rate_SAE=args.drop_rate_SAE,
            ^         | (bad-continuation)
desc/original/main.py:177:0: C0330: Wrong continued indentation (add 10 spaces).
            is_stacked=args.is_stacked,
            ^         | (bad-continuation)
desc/original/main.py:178:0: C0330: Wrong continued indentation (add 10 spaces).
            use_earlyStop=args.use_earlyStop,
            ^         | (bad-continuation)
desc/original/main.py:179:0: C0330: Wrong continued indentation (add 10 spaces).
            save_dir=args.save_dir,
            ^         | (bad-continuation)
desc/original/main.py:180:0: C0330: Wrong continued indentation (add 10 spaces).
            max_iter=args.max_iter,
            ^         | (bad-continuation)
desc/original/main.py:181:0: C0330: Wrong continued indentation (add 10 spaces).
            epochs_fit=args.epochs_fit,
            ^         | (bad-continuation)
desc/original/main.py:182:0: C0330: Wrong continued indentation (add 10 spaces).
            num_Cores=args.num_Cores,
            ^         | (bad-continuation)
desc/original/main.py:183:0: C0330: Wrong continued indentation (add 10 spaces).
            use_GPU=args.use_GPU,
            ^         | (bad-continuation)
desc/original/main.py:184:0: C0330: Wrong continued indentation (add 10 spaces).
            random_seed=args.random_seed,
            ^         | (bad-continuation)
desc/original/main.py:185:0: C0330: Wrong continued indentation (add 10 spaces).
            verbose=args.verbose)
            ^         | (bad-continuation)
desc/original/main.py:188:11: C0326: Exactly one space required around comparison
if __name__=='__main__':
           ^^ (bad-whitespace)
desc/original/main.py:1:0: C0114: Missing module docstring (missing-module-docstring)
desc/original/main.py:18:0: C0410: Multiple imports on one line (os, sys, argparse, textwrap) (multiple-imports)
desc/original/main.py:18:0: C0413: Import "import os, sys, argparse, textwrap" should be placed at the top of the module (wrong-import-position)
desc/original/main.py:18:0: C0413: Import "import os, sys, argparse, textwrap" should be placed at the top of the module (wrong-import-position)
desc/original/main.py:18:0: C0413: Import "import os, sys, argparse, textwrap" should be placed at the top of the module (wrong-import-position)
desc/original/main.py:18:0: C0413: Import "import os, sys, argparse, textwrap" should be placed at the top of the module (wrong-import-position)
desc/original/main.py:19:0: E0401: Unable to import 'scanpy.api' (import-error)
desc/original/main.py:19:0: C0413: Import "import scanpy.api as sc" should be placed at the top of the module (wrong-import-position)
desc/original/main.py:20:0: C0414: Import alias does not rename original package (useless-import-alias)
desc/original/main.py:20:0: E0401: Unable to import 'train' (import-error)
desc/original/main.py:20:0: C0413: Import "import train as train" should be placed at the top of the module (wrong-import-position)
desc/original/main.py:22:0: C0116: Missing function or method docstring (missing-function-docstring)
desc/original/main.py:22:0: R0915: Too many statements (52/50) (too-many-statements)
desc/original/main.py:129:0: C0116: Missing function or method docstring (missing-function-docstring)
desc/original/main.py:132:4: C0415: Import outside toplevel (preprocessing) (import-outside-toplevel)
desc/original/main.py:134:8: C0415: Import outside toplevel (tensorflow) (import-outside-toplevel)
desc/original/main.py:164:4: W0612: Unused variable 'dims' (unused-variable)
************* Module desc.original.SAE
desc/original/SAE.py:5:90: C0326: Exactly one space required after comma
from keras.callbacks import TensorBoard, ModelCheckpoint, EarlyStopping, ReduceLROnPlateau,History
                                                                                          ^ (bad-whitespace)
desc/original/SAE.py:13:7: C0303: Trailing whitespace (trailing-whitespace)
desc/original/SAE.py:19:0: C0303: Trailing whitespace (trailing-whitespace)
desc/original/SAE.py:25:0: C0303: Trailing whitespace (trailing-whitespace)
desc/original/SAE.py:27:0: C0301: Line too long (120/100) (line-too-long)
desc/original/SAE.py:28:0: C0301: Line too long (109/100) (line-too-long)
desc/original/SAE.py:30:0: C0301: Line too long (119/100) (line-too-long)
desc/original/SAE.py:33:0: C0301: Line too long (182/100) (line-too-long)
desc/original/SAE.py:33:69: C0326: Exactly one space required after comma
    def __init__(self, dims, act='relu', drop_rate=0.2, batch_size=32,random_seed=201809,actincenter="tanh",init="glorot_uniform",use_earlyStop=True,save_dir='result_tmp'): #act relu
                                                                     ^ (bad-whitespace)
desc/original/SAE.py:33:88: C0326: Exactly one space required after comma
    def __init__(self, dims, act='relu', drop_rate=0.2, batch_size=32,random_seed=201809,actincenter="tanh",init="glorot_uniform",use_earlyStop=True,save_dir='result_tmp'): #act relu
                                                                                        ^ (bad-whitespace)
desc/original/SAE.py:33:107: C0326: Exactly one space required after comma
    def __init__(self, dims, act='relu', drop_rate=0.2, batch_size=32,random_seed=201809,actincenter="tanh",init="glorot_uniform",use_earlyStop=True,save_dir='result_tmp'): #act relu
                                                                                                           ^ (bad-whitespace)
desc/original/SAE.py:33:129: C0326: Exactly one space required after comma
    def __init__(self, dims, act='relu', drop_rate=0.2, batch_size=32,random_seed=201809,actincenter="tanh",init="glorot_uniform",use_earlyStop=True,save_dir='result_tmp'): #act relu
                                                                                                                                 ^ (bad-whitespace)
desc/original/SAE.py:33:148: C0326: Exactly one space required after comma
    def __init__(self, dims, act='relu', drop_rate=0.2, batch_size=32,random_seed=201809,actincenter="tanh",init="glorot_uniform",use_earlyStop=True,save_dir='result_tmp'): #act relu
                                                                                                                                                    ^ (bad-whitespace)
desc/original/SAE.py:38:24: C0326: Exactly one space required around assignment
        self.actincenter=actincenter #linear
                        ^ (bad-whitespace)
desc/original/SAE.py:40:17: C0326: Exactly one space required around assignment
        self.init=init
                 ^ (bad-whitespace)
desc/original/SAE.py:47:26: C0326: Exactly one space required around assignment
        self.use_earlyStop=use_earlyStop
                          ^ (bad-whitespace)
desc/original/SAE.py:49:26: C0326: No space allowed before comma
        self.autoencoders ,self.encoder= self.make_autoencoders()
                          ^ (bad-whitespace)
desc/original/SAE.py:49:26: C0326: Exactly one space required after comma
        self.autoencoders ,self.encoder= self.make_autoencoders()
                          ^ (bad-whitespace)
desc/original/SAE.py:49:39: C0326: Exactly one space required before assignment
        self.autoencoders ,self.encoder= self.make_autoencoders()
                                       ^ (bad-whitespace)
desc/original/SAE.py:61:0: C0301: Line too long (122/100) (line-too-long)
desc/original/SAE.py:61:68: C0326: Exactly one space required after comma
            h = Dense(self.dims[i + 1], kernel_initializer=self.init,activation=self.activation, name='encoder_%d' % i)(h)
                                                                    ^ (bad-whitespace)
desc/original/SAE.py:64:0: C0301: Line too long (169/100) (line-too-long)
desc/original/SAE.py:64:31: C0326: Exactly one space required after comma
        h = Dense(self.dims[-1],kernel_initializer=self.init, name='encoder_%d' % (self.n_stacks - 1),activation=self.actincenter)(h)  # features are extracted from here
                               ^ (bad-whitespace)
desc/original/SAE.py:64:101: C0326: Exactly one space required after comma
        h = Dense(self.dims[-1],kernel_initializer=self.init, name='encoder_%d' % (self.n_stacks - 1),activation=self.actincenter)(h)  # features are extracted from here
                                                                                                     ^ (bad-whitespace)
desc/original/SAE.py:66:9: C0326: Exactly one space required around assignment
        y=h
         ^ (bad-whitespace)
desc/original/SAE.py:67:36: C0303: Trailing whitespace (trailing-whitespace)
desc/original/SAE.py:69:0: C0301: Line too long (118/100) (line-too-long)
desc/original/SAE.py:69:64: C0326: Exactly one space required after comma
            y = Dense(self.dims[i], kernel_initializer=self.init,activation=self.activation, name='decoder_%d' % i)(y)
                                                                ^ (bad-whitespace)
desc/original/SAE.py:72:0: C0301: Line too long (109/100) (line-too-long)
desc/original/SAE.py:72:60: C0326: Exactly one space required after comma
        y = Dense(self.dims[0], kernel_initializer=self.init,name='decoder_0',activation=self.actincenter)(y)
                                                            ^ (bad-whitespace)
desc/original/SAE.py:72:77: C0326: Exactly one space required after comma
        y = Dense(self.dims[0], kernel_initializer=self.init,name='decoder_0',activation=self.actincenter)(y)
                                                                             ^ (bad-whitespace)
desc/original/SAE.py:74:40: C0326: Exactly one space required after comma
        return Model(inputs=x, outputs=y,name="AE"),Model(inputs=x,outputs=h,name="encoder")
                                        ^ (bad-whitespace)
desc/original/SAE.py:74:51: C0326: Exactly one space required after comma
        return Model(inputs=x, outputs=y,name="AE"),Model(inputs=x,outputs=h,name="encoder")
                                                   ^ (bad-whitespace)
desc/original/SAE.py:74:66: C0326: Exactly one space required after comma
        return Model(inputs=x, outputs=y,name="AE"),Model(inputs=x,outputs=h,name="encoder")
                                                                  ^ (bad-whitespace)
desc/original/SAE.py:74:76: C0326: Exactly one space required after comma
        return Model(inputs=x, outputs=y,name="AE"),Model(inputs=x,outputs=h,name="encoder")
                                                                            ^ (bad-whitespace)
desc/original/SAE.py:77:11: C0303: Trailing whitespace (trailing-whitespace)
desc/original/SAE.py:78:0: C0301: Line too long (116/100) (line-too-long)
desc/original/SAE.py:78:116: C0303: Trailing whitespace (trailing-whitespace)
desc/original/SAE.py:80:0: C0303: Trailing whitespace (trailing-whitespace)
desc/original/SAE.py:99:43: C0326: Exactly one space required after comma
    def pretrain_stacks(self, x, epochs=200,decaying_step=3):
                                           ^ (bad-whitespace)
desc/original/SAE.py:100:11: C0303: Trailing whitespace (trailing-whitespace)
desc/original/SAE.py:101:0: C0301: Line too long (114/100) (line-too-long)
desc/original/SAE.py:103:0: C0303: Trailing whitespace (trailing-whitespace)
desc/original/SAE.py:110:17: C0326: No space allowed after bracket
            print( 'Pretraining the %dth layer...' % (i+1))
                 ^ (bad-whitespace)
desc/original/SAE.py:111:0: C0301: Line too long (103/100) (line-too-long)
desc/original/SAE.py:112:22: C0326: No space allowed before bracket
                print ('learning rate =', pow(10, -1-j))
                      ^ (bad-whitespace)
desc/original/SAE.py:115:0: C0301: Line too long (110/100) (line-too-long)
desc/original/SAE.py:115:29: C0326: Exactly one space required around assignment
                    callbacks=[EarlyStopping(monitor='loss',min_delta=1e-4,patience=10,verbose=1,mode='auto')]
                             ^ (bad-whitespace)
desc/original/SAE.py:115:59: C0326: Exactly one space required after comma
                    callbacks=[EarlyStopping(monitor='loss',min_delta=1e-4,patience=10,verbose=1,mode='auto')]
                                                           ^ (bad-whitespace)
desc/original/SAE.py:115:74: C0326: Exactly one space required after comma
                    callbacks=[EarlyStopping(monitor='loss',min_delta=1e-4,patience=10,verbose=1,mode='auto')]
                                                                          ^ (bad-whitespace)
desc/original/SAE.py:115:86: C0326: Exactly one space required after comma
                    callbacks=[EarlyStopping(monitor='loss',min_delta=1e-4,patience=10,verbose=1,mode='auto')]
                                                                                      ^ (bad-whitespace)
desc/original/SAE.py:115:96: C0326: Exactly one space required after comma
                    callbacks=[EarlyStopping(monitor='loss',min_delta=1e-4,patience=10,verbose=1,mode='auto')]
                                                                                                ^ (bad-whitespace)
desc/original/SAE.py:116:0: C0301: Line too long (143/100) (line-too-long)
desc/original/SAE.py:116:47: C0326: Exactly one space required after comma
                    self.stacks[i].fit(features,features,callbacks=callbacks,batch_size=self.batch_size,epochs=math.ceil(epochs/decaying_step))
                                               ^ (bad-whitespace)
desc/original/SAE.py:116:56: C0326: Exactly one space required after comma
                    self.stacks[i].fit(features,features,callbacks=callbacks,batch_size=self.batch_size,epochs=math.ceil(epochs/decaying_step))
                                                        ^ (bad-whitespace)
desc/original/SAE.py:116:76: C0326: Exactly one space required after comma
                    self.stacks[i].fit(features,features,callbacks=callbacks,batch_size=self.batch_size,epochs=math.ceil(epochs/decaying_step))
                                                                            ^ (bad-whitespace)
desc/original/SAE.py:116:103: C0326: Exactly one space required after comma
                    self.stacks[i].fit(features,features,callbacks=callbacks,batch_size=self.batch_size,epochs=math.ceil(epochs/decaying_step))
                                                                                                       ^ (bad-whitespace)
desc/original/SAE.py:118:0: C0301: Line too long (127/100) (line-too-long)
desc/original/SAE.py:118:49: C0326: Exactly one space required after comma
                    self.stacks[i].fit(x=features,y=features,batch_size=self.batch_size,epochs=math.ceil(epochs/decaying_step))
                                                 ^ (bad-whitespace)
desc/original/SAE.py:118:60: C0326: Exactly one space required after comma
                    self.stacks[i].fit(x=features,y=features,batch_size=self.batch_size,epochs=math.ceil(epochs/decaying_step))
                                                            ^ (bad-whitespace)
desc/original/SAE.py:118:87: C0326: Exactly one space required after comma
                    self.stacks[i].fit(x=features,y=features,batch_size=self.batch_size,epochs=math.ceil(epochs/decaying_step))
                                                                                       ^ (bad-whitespace)
desc/original/SAE.py:119:18: C0326: No space allowed before bracket
            print ('The %dth layer has been pretrained.' % (i+1))
                  ^ (bad-whitespace)
desc/original/SAE.py:122:0: C0301: Line too long (119/100) (line-too-long)
desc/original/SAE.py:129:0: C0303: Trailing whitespace (trailing-whitespace)
desc/original/SAE.py:133:14: C0326: No space allowed before bracket
        print ('Copying layer-wise pretrained weights to deep autoencoders')
              ^ (bad-whitespace)
desc/original/SAE.py:136:0: C0301: Line too long (103/100) (line-too-long)
desc/original/SAE.py:138:0: C0301: Line too long (103/100) (line-too-long)
desc/original/SAE.py:140:14: C0326: No space allowed before bracket
        print ('Fine-tuning autoencoder end-to-end')
              ^ (bad-whitespace)
desc/original/SAE.py:143:18: C0326: No space allowed before bracket
            print ('learning rate =', lr)
                  ^ (bad-whitespace)
desc/original/SAE.py:147:31: C0326: Exactly one space required after comma
    def fit(self, x, epochs=300,decaying_step=3):
                               ^ (bad-whitespace)
desc/original/SAE.py:148:52: C0326: Exactly one space required after comma
        self.pretrain_stacks(x, epochs=int(epochs/2),decaying_step=decaying_step)
                                                    ^ (bad-whitespace)
desc/original/SAE.py:151:59: C0303: Trailing whitespace (trailing-whitespace)
desc/original/SAE.py:151:17: C0326: Exactly one space required after comma
    def fit2(self,x,epochs=300): #no stack directly traning 
                 ^ (bad-whitespace)
desc/original/SAE.py:151:19: C0326: Exactly one space required after comma
    def fit2(self,x,epochs=300): #no stack directly traning 
                   ^ (bad-whitespace)
desc/original/SAE.py:154:18: C0326: No space allowed before bracket
            print ('learning rate =', lr)
                  ^ (bad-whitespace)
desc/original/SAE.py:157:0: C0301: Line too long (106/100) (line-too-long)
desc/original/SAE.py:157:25: C0326: Exactly one space required around assignment
                callbacks=[EarlyStopping(monitor='loss',min_delta=1e-4,patience=10,verbose=1,mode='auto')]
                         ^ (bad-whitespace)
desc/original/SAE.py:157:55: C0326: Exactly one space required after comma
                callbacks=[EarlyStopping(monitor='loss',min_delta=1e-4,patience=10,verbose=1,mode='auto')]
                                                       ^ (bad-whitespace)
desc/original/SAE.py:157:70: C0326: Exactly one space required after comma
                callbacks=[EarlyStopping(monitor='loss',min_delta=1e-4,patience=10,verbose=1,mode='auto')]
                                                                      ^ (bad-whitespace)
desc/original/SAE.py:157:82: C0326: Exactly one space required after comma
                callbacks=[EarlyStopping(monitor='loss',min_delta=1e-4,patience=10,verbose=1,mode='auto')]
                                                                                  ^ (bad-whitespace)
desc/original/SAE.py:157:92: C0326: Exactly one space required after comma
                callbacks=[EarlyStopping(monitor='loss',min_delta=1e-4,patience=10,verbose=1,mode='auto')]
                                                                                            ^ (bad-whitespace)
desc/original/SAE.py:158:0: C0301: Line too long (107/100) (line-too-long)
desc/original/SAE.py:158:41: C0326: Exactly one space required after comma
                self.autoencoders.fit(x=x,y=x,callbacks=callbacks,batch_size=self.batch_size,epochs=epochs)
                                         ^ (bad-whitespace)
desc/original/SAE.py:158:45: C0326: Exactly one space required after comma
                self.autoencoders.fit(x=x,y=x,callbacks=callbacks,batch_size=self.batch_size,epochs=epochs)
                                             ^ (bad-whitespace)
desc/original/SAE.py:158:65: C0326: Exactly one space required after comma
                self.autoencoders.fit(x=x,y=x,callbacks=callbacks,batch_size=self.batch_size,epochs=epochs)
                                                                 ^ (bad-whitespace)
desc/original/SAE.py:158:92: C0326: Exactly one space required after comma
                self.autoencoders.fit(x=x,y=x,callbacks=callbacks,batch_size=self.batch_size,epochs=epochs)
                                                                                            ^ (bad-whitespace)
desc/original/SAE.py:160:0: W0311: Bad indentation. Found 18 spaces, expected 16 (bad-indentation)
desc/original/SAE.py:165:0: C0303: Trailing whitespace (trailing-whitespace)
desc/original/SAE.py:182:5: C0326: Exactly one space required after comma
    x,y=load_mnist(sample_size=10000,seed=0)
     ^ (bad-whitespace)
desc/original/SAE.py:182:7: C0326: Exactly one space required around assignment
    x,y=load_mnist(sample_size=10000,seed=0)
       ^ (bad-whitespace)
desc/original/SAE.py:182:36: C0326: Exactly one space required after comma
    x,y=load_mnist(sample_size=10000,seed=0)
                                    ^ (bad-whitespace)
desc/original/SAE.py:186:35: C0326: Exactly one space required after comma
    sae = SAE(dims=[x.shape[-1], 64,32])
                                   ^ (bad-whitespace)
desc/original/SAE.py:191:10: C0326: No space allowed before bracket
    print ('Finished training, extracting features using the trained SAE model')
          ^ (bad-whitespace)
desc/original/SAE.py:194:10: C0326: No space allowed before bracket
    print ('performing k-means clustering on the extracted features')
          ^ (bad-whitespace)
desc/original/SAE.py:200:10: C0326: No space allowed before bracket
    print ('K-means clustering result on extracted features: NMI =', nmi(y, y_pred))
          ^ (bad-whitespace)
desc/original/SAE.py:1:0: C0103: Module name "SAE" doesn't conform to snake_case naming style (invalid-name)
desc/original/SAE.py:1:0: C0114: Missing module docstring (missing-module-docstring)
desc/original/SAE.py:1:0: E0401: Unable to import 'keras.layers' (import-error)
desc/original/SAE.py:2:0: E0401: Unable to import 'keras.models' (import-error)
desc/original/SAE.py:3:0: E0401: Unable to import 'keras.optimizers' (import-error)
desc/original/SAE.py:4:0: E0401: Unable to import 'keras.utils.vis_utils' (import-error)
desc/original/SAE.py:5:0: E0401: Unable to import 'keras.callbacks' (import-error)
desc/original/SAE.py:9:0: E0401: Unable to import 'tensorflow' (import-error)
desc/original/SAE.py:47:8: C0103: Attribute name "use_earlyStop" doesn't conform to snake_case naming style (invalid-name)
desc/original/SAE.py:12:0: R0902: Too many instance attributes (12/7) (too-many-instance-attributes)
desc/original/SAE.py:12:0: R0205: Class 'SAE' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
desc/original/SAE.py:33:4: R0913: Too many arguments (10/5) (too-many-arguments)
desc/original/SAE.py:33:149: W0613: Unused argument 'save_dir' (unused-argument)
desc/original/SAE.py:56:8: W0621: Redefining name 'x' from outer scope (line 182) (redefined-outer-name)
desc/original/SAE.py:66:8: W0621: Redefining name 'y' from outer scope (line 182) (redefined-outer-name)
desc/original/SAE.py:56:8: C0103: Variable name "x" doesn't conform to snake_case naming style (invalid-name)
desc/original/SAE.py:57:8: C0103: Variable name "h" doesn't conform to snake_case naming style (invalid-name)
desc/original/SAE.py:61:12: C0103: Variable name "h" doesn't conform to snake_case naming style (invalid-name)
desc/original/SAE.py:64:8: C0103: Variable name "h" doesn't conform to snake_case naming style (invalid-name)
desc/original/SAE.py:66:8: C0103: Variable name "y" doesn't conform to snake_case naming style (invalid-name)
desc/original/SAE.py:69:12: C0103: Variable name "y" doesn't conform to snake_case naming style (invalid-name)
desc/original/SAE.py:72:8: C0103: Variable name "y" doesn't conform to snake_case naming style (invalid-name)
desc/original/SAE.py:99:30: W0621: Redefining name 'x' from outer scope (line 182) (redefined-outer-name)
desc/original/SAE.py:108:8: W0621: Redefining name 'features' from outer scope (line 192) (redefined-outer-name)
desc/original/SAE.py:99:4: C0103: Argument name "x" doesn't conform to snake_case naming style (invalid-name)
desc/original/SAE.py:125:36: W0621: Redefining name 'x' from outer scope (line 182) (redefined-outer-name)
desc/original/SAE.py:125:4: C0103: Argument name "x" doesn't conform to snake_case naming style (invalid-name)
desc/original/SAE.py:142:12: C0103: Variable name "lr" doesn't conform to snake_case naming style (invalid-name)
desc/original/SAE.py:147:18: W0621: Redefining name 'x' from outer scope (line 182) (redefined-outer-name)
desc/original/SAE.py:147:4: C0103: Argument name "x" doesn't conform to snake_case naming style (invalid-name)
desc/original/SAE.py:147:4: C0116: Missing function or method docstring (missing-function-docstring)
desc/original/SAE.py:151:18: W0621: Redefining name 'x' from outer scope (line 182) (redefined-outer-name)
desc/original/SAE.py:151:4: C0103: Argument name "x" doesn't conform to snake_case naming style (invalid-name)
desc/original/SAE.py:151:4: C0116: Missing function or method docstring (missing-function-docstring)
desc/original/SAE.py:153:12: C0103: Variable name "lr" doesn't conform to snake_case naming style (invalid-name)
desc/original/SAE.py:162:30: W0621: Redefining name 'x' from outer scope (line 182) (redefined-outer-name)
desc/original/SAE.py:162:4: C0103: Argument name "x" doesn't conform to snake_case naming style (invalid-name)
desc/original/SAE.py:179:-1: W0105: String statement has no effect (pointless-string-statement)
desc/original/SAE.py:180:4: W0404: Reimport 'numpy' (imported line 7) (reimported)
desc/original/SAE.py:181:4: E0401: Unable to import 'load_mnist' (import-error)
desc/original/SAE.py:183:4: C0103: Constant name "db" doesn't conform to UPPER_CASE naming style (invalid-name)
desc/original/SAE.py:184:4: C0103: Constant name "n_clusters" doesn't conform to UPPER_CASE naming style (invalid-name)
desc/original/SAE.py:195:4: E0401: Unable to import 'sklearn.cluster' (import-error)
desc/original/SAE.py:199:4: E0401: Unable to import 'sklearn.metrics' (import-error)
desc/original/SAE.py:180:4: C0412: Imports from package numpy are not grouped (ungrouped-imports)
************* Module desc.original.__init__
desc/original/__init__.py:1:45: C0303: Trailing whitespace (trailing-whitespace)
desc/original/__init__.py:7:19: C0303: Trailing whitespace (trailing-whitespace)
desc/original/__init__.py:8:0: C0305: Trailing newlines (trailing-newlines)
************* Module desc.original
desc/original/__init__.py:6:0: C0413: Import "from .train import train" should be placed at the top of the module (wrong-import-position)
************* Module desc.original.SAE-non
desc/original/SAE-non.py:49:0: R1707: Disallow trailing comma tuple (trailing-comma-tuple)
desc/original/SAE-non.py:1:46: C0326: Exactly one space required after comma
from keras.layers import Input, Dense, Dropout,Activation,BatchNormalization
                                              ^ (bad-whitespace)
desc/original/SAE-non.py:1:57: C0326: Exactly one space required after comma
from keras.layers import Input, Dense, Dropout,Activation,BatchNormalization
                                                         ^ (bad-whitespace)
desc/original/SAE-non.py:2:42: C0303: Trailing whitespace (trailing-whitespace)
desc/original/SAE-non.py:5:90: C0326: Exactly one space required after comma
from keras.callbacks import TensorBoard, ModelCheckpoint, EarlyStopping, ReduceLROnPlateau,History
                                                                                          ^ (bad-whitespace)
desc/original/SAE-non.py:7:20: C0326: Exactly one space required around assignment
advanced_activations=('PReLU','LeakyRelU')
                    ^ (bad-whitespace)
desc/original/SAE-non.py:7:29: C0326: Exactly one space required after comma
advanced_activations=('PReLU','LeakyRelU')
                             ^ (bad-whitespace)
desc/original/SAE-non.py:10:7: C0303: Trailing whitespace (trailing-whitespace)
desc/original/SAE-non.py:16:0: C0303: Trailing whitespace (trailing-whitespace)
desc/original/SAE-non.py:22:0: C0303: Trailing whitespace (trailing-whitespace)
desc/original/SAE-non.py:24:0: C0301: Line too long (120/100) (line-too-long)
desc/original/SAE-non.py:25:0: C0301: Line too long (109/100) (line-too-long)
desc/original/SAE-non.py:27:0: C0301: Line too long (119/100) (line-too-long)
desc/original/SAE-non.py:31:0: C0330: Wrong continued indentation (add 1 space).
                dims,
                ^| (bad-continuation)
desc/original/SAE-non.py:32:0: C0330: Wrong continued indentation (add 1 space).
                batchnorm=True,
                ^| (bad-continuation)
desc/original/SAE-non.py:33:0: C0330: Wrong continued indentation (add 1 space).
                act='relu',
                ^| (bad-continuation)
desc/original/SAE-non.py:34:0: C0330: Wrong continued indentation (add 1 space).
                actinlayercenter='tanh',
                ^| (bad-continuation)
desc/original/SAE-non.py:35:0: C0330: Wrong continued indentation (add 1 space).
                drop_rate=0.2,
                ^| (bad-continuation)
desc/original/SAE-non.py:36:0: C0330: Wrong continued indentation (add 1 space).
                batch_size=32,
                ^| (bad-continuation)
desc/original/SAE-non.py:37:0: C0330: Wrong continued indentation (add 1 space).
                init="glorot_uniform",
                ^| (bad-continuation)
desc/original/SAE-non.py:38:0: C0330: Wrong continued indentation (add 1 space).
                use_earlyStop=False,
                ^| (bad-continuation)
desc/original/SAE-non.py:39:0: C0330: Wrong continued indentation (add 1 space).
                save_dir='SAE_result_tmp'
                ^| (bad-continuation)
desc/original/SAE-non.py:40:0: C0330: Wrong continued indentation.
            ): 
            ^   || (bad-continuation)
desc/original/SAE-non.py:40:14: C0303: Trailing whitespace (trailing-whitespace)
desc/original/SAE-non.py:41:42: C0326: Exactly one space required after comma
        assert actinlayercenter in ["tanh","linear"]
                                          ^ (bad-whitespace)
desc/original/SAE-non.py:42:17: C0326: Exactly one space required around assignment
        self.dims=dims
                 ^ (bad-whitespace)
desc/original/SAE-non.py:43:21: C0326: Exactly one space required around assignment
        self.n_stacks=len(dims)-1
                     ^ (bad-whitespace)
desc/original/SAE-non.py:44:21: C0326: Exactly one space required around assignment
        self.n_layers=2*self.n_stacks
                     ^ (bad-whitespace)
desc/original/SAE-non.py:45:22: C0326: Exactly one space required around assignment
        self.batchnorm=True
                      ^ (bad-whitespace)
desc/original/SAE-non.py:46:16: C0326: Exactly one space required around assignment
        self.act='relu'
                ^ (bad-whitespace)
desc/original/SAE-non.py:47:29: C0326: Exactly one space required around assignment
        self.actinlayercenter='tanh'
                             ^ (bad-whitespace)
desc/original/SAE-non.py:48:22: C0326: Exactly one space required around assignment
        self.drop_rate=drop_rate
                      ^ (bad-whitespace)
desc/original/SAE-non.py:49:23: C0326: Exactly one space required around assignment
        self.batch_size=batch_size,
                       ^ (bad-whitespace)
desc/original/SAE-non.py:50:17: C0326: Exactly one space required around assignment
        self.init=init
                 ^ (bad-whitespace)
desc/original/SAE-non.py:51:26: C0326: Exactly one space required around assignment
        self.use_earlyStop=use_earlyStop
                          ^ (bad-whitespace)
desc/original/SAE-non.py:52:19: C0326: Exactly one space required around assignment
        self.stacks=[self.make_stack(i) for i in range(self.n_stacks)]
                   ^ (bad-whitespace)
desc/original/SAE-non.py:54:36: C0326: Exactly one space required after comma
        plot_model(self.autoencoders,show_shapes=True,to_file="autoendoers.png")
                                    ^ (bad-whitespace)
desc/original/SAE-non.py:54:53: C0326: Exactly one space required after comma
        plot_model(self.autoencoders,show_shapes=True,to_file="autoendoers.png")
                                                     ^ (bad-whitespace)
desc/original/SAE-non.py:59:9: C0326: Exactly one space required around assignment
        x=Input(shape=(self.dims[0],),name='input')
         ^ (bad-whitespace)
desc/original/SAE-non.py:59:37: C0326: Exactly one space required after comma
        x=Input(shape=(self.dims[0],),name='input')
                                     ^ (bad-whitespace)
desc/original/SAE-non.py:60:9: C0326: Exactly one space required around assignment
        h=x
         ^ (bad-whitespace)
desc/original/SAE-non.py:63:0: C0301: Line too long (103/100) (line-too-long)
desc/original/SAE-non.py:63:13: C0326: Exactly one space required around assignment
            h=Dense(self.dims[i+1],kernel_initializer=self.init,activation=None,name='encoder_%d'%i)(h)
             ^ (bad-whitespace)
desc/original/SAE-non.py:63:34: C0326: Exactly one space required after comma
            h=Dense(self.dims[i+1],kernel_initializer=self.init,activation=None,name='encoder_%d'%i)(h)
                                  ^ (bad-whitespace)
desc/original/SAE-non.py:63:63: C0326: Exactly one space required after comma
            h=Dense(self.dims[i+1],kernel_initializer=self.init,activation=None,name='encoder_%d'%i)(h)
                                                               ^ (bad-whitespace)
desc/original/SAE-non.py:63:79: C0326: Exactly one space required after comma
            h=Dense(self.dims[i+1],kernel_initializer=self.init,activation=None,name='encoder_%d'%i)(h)
                                                                               ^ (bad-whitespace)
desc/original/SAE-non.py:65:17: C0326: Exactly one space required around assignment
                h=BatchNormalization(center=True, scale=False)(h)
                 ^ (bad-whitespace)
desc/original/SAE-non.py:67:17: C0326: Exactly one space required around assignment
                h=keras.layers.__dict__[self.act](name='encoder_%d'%i)(h)
                 ^ (bad-whitespace)
desc/original/SAE-non.py:69:17: C0326: Exactly one space required around assignment
                h=Activation(self.act,name="act_encoder_%d"%i)(h)
                 ^ (bad-whitespace)
desc/original/SAE-non.py:69:37: C0326: Exactly one space required after comma
                h=Activation(self.act,name="act_encoder_%d"%i)(h)
                                     ^ (bad-whitespace)
desc/original/SAE-non.py:70:68: C0303: Trailing whitespace (trailing-whitespace)
desc/original/SAE-non.py:71:0: C0301: Line too long (114/100) (line-too-long)
desc/original/SAE-non.py:71:9: C0326: Exactly one space required around assignment
        h=Dense(self.dims[-1],kernel_initializer=self.init,activation=None,name="encoder_%d"%(self.n_stacks-1))(h)
         ^ (bad-whitespace)
desc/original/SAE-non.py:71:29: C0326: Exactly one space required after comma
        h=Dense(self.dims[-1],kernel_initializer=self.init,activation=None,name="encoder_%d"%(self.n_stacks-1))(h)
                             ^ (bad-whitespace)
desc/original/SAE-non.py:71:58: C0326: Exactly one space required after comma
        h=Dense(self.dims[-1],kernel_initializer=self.init,activation=None,name="encoder_%d"%(self.n_stacks-1))(h)
                                                          ^ (bad-whitespace)
desc/original/SAE-non.py:71:74: C0326: Exactly one space required after comma
        h=Dense(self.dims[-1],kernel_initializer=self.init,activation=None,name="encoder_%d"%(self.n_stacks-1))(h)
                                                                          ^ (bad-whitespace)
desc/original/SAE-non.py:73:13: C0326: Exactly one space required around assignment
            h=BatchNormalization(center=True, scale=False)(h)
             ^ (bad-whitespace)
desc/original/SAE-non.py:74:9: C0326: Exactly one space required around assignment
        h=Activation(self.actinlayercenter,name="act_center")(h)
         ^ (bad-whitespace)
desc/original/SAE-non.py:74:42: C0326: Exactly one space required after comma
        h=Activation(self.actinlayercenter,name="act_center")(h)
                                          ^ (bad-whitespace)
desc/original/SAE-non.py:76:38: C0326: Exactly one space required after comma
        for i in range(self.n_stacks-1,0,-1):
                                      ^ (bad-whitespace)
desc/original/SAE-non.py:76:40: C0326: Exactly one space required after comma
        for i in range(self.n_stacks-1,0,-1):
                                        ^ (bad-whitespace)
desc/original/SAE-non.py:77:0: C0301: Line too long (101/100) (line-too-long)
desc/original/SAE-non.py:77:13: C0326: Exactly one space required around assignment
            h=Dense(self.dims[i],kernel_initializer=self.init,activation=None,name='decoder_%d'%i)(h)
             ^ (bad-whitespace)
desc/original/SAE-non.py:77:32: C0326: Exactly one space required after comma
            h=Dense(self.dims[i],kernel_initializer=self.init,activation=None,name='decoder_%d'%i)(h)
                                ^ (bad-whitespace)
desc/original/SAE-non.py:77:61: C0326: Exactly one space required after comma
            h=Dense(self.dims[i],kernel_initializer=self.init,activation=None,name='decoder_%d'%i)(h)
                                                             ^ (bad-whitespace)
desc/original/SAE-non.py:77:77: C0326: Exactly one space required after comma
            h=Dense(self.dims[i],kernel_initializer=self.init,activation=None,name='decoder_%d'%i)(h)
                                                                             ^ (bad-whitespace)
desc/original/SAE-non.py:79:17: C0326: Exactly one space required around assignment
                h=BatchNormalization(center=True, scale=False)(h)
                 ^ (bad-whitespace)
desc/original/SAE-non.py:81:17: C0326: Exactly one space required around assignment
                h=keras.layers.__dict__[self.act](name='decoder_%d'%i)(h)
                 ^ (bad-whitespace)
desc/original/SAE-non.py:83:17: C0326: Exactly one space required around assignment
                h=Activation(self.act,name="act_decoder_%d"%i)(h)
                 ^ (bad-whitespace)
desc/original/SAE-non.py:83:37: C0326: Exactly one space required after comma
                h=Activation(self.act,name="act_decoder_%d"%i)(h)
                                     ^ (bad-whitespace)
desc/original/SAE-non.py:85:0: C0301: Line too long (111/100) (line-too-long)
desc/original/SAE-non.py:85:9: C0326: Exactly one space required around assignment
        h=Dense(self.dims[0],kernel_initializer=self.init,name="decoder_0",activation=self.actinlayercenter)(h)
         ^ (bad-whitespace)
desc/original/SAE-non.py:85:28: C0326: Exactly one space required after comma
        h=Dense(self.dims[0],kernel_initializer=self.init,name="decoder_0",activation=self.actinlayercenter)(h)
                            ^ (bad-whitespace)
desc/original/SAE-non.py:85:57: C0326: Exactly one space required after comma
        h=Dense(self.dims[0],kernel_initializer=self.init,name="decoder_0",activation=self.actinlayercenter)(h)
                                                         ^ (bad-whitespace)
desc/original/SAE-non.py:85:74: C0326: Exactly one space required after comma
        h=Dense(self.dims[0],kernel_initializer=self.init,name="decoder_0",activation=self.actinlayercenter)(h)
                                                                          ^ (bad-whitespace)
desc/original/SAE-non.py:87:25: C0326: Exactly one space required around assignment
        self.autoencoders=Model(inputs=x,outputs=h,name="AE")
                         ^ (bad-whitespace)
desc/original/SAE-non.py:87:40: C0326: Exactly one space required after comma
        self.autoencoders=Model(inputs=x,outputs=h,name="AE")
                                        ^ (bad-whitespace)
desc/original/SAE-non.py:87:50: C0326: Exactly one space required after comma
        self.autoencoders=Model(inputs=x,outputs=h,name="AE")
                                                  ^ (bad-whitespace)
desc/original/SAE-non.py:89:20: C0326: Exactly one space required around assignment
        self.encoder=self.get_encoder()
                    ^ (bad-whitespace)
desc/original/SAE-non.py:90:0: C0303: Trailing whitespace (trailing-whitespace)
desc/original/SAE-non.py:92:12: C0326: Exactly one space required around assignment
        name="encoder_"+str(self.n_stacks-1)
            ^ (bad-whitespace)
desc/original/SAE-non.py:93:11: C0326: Exactly one space required before assignment
        ret= Model(inputs=self.autoencoders.input,
           ^ (bad-whitespace)
desc/original/SAE-non.py:94:67: C0326: Exactly one space required after comma
                   outputs=self.autoencoders.get_layer(name).output,name="encoder")
                                                                   ^ (bad-whitespace)
desc/original/SAE-non.py:97:23: C0326: Exactly one space required after comma
    def make_stack(self,ith):
                       ^ (bad-whitespace)
desc/original/SAE-non.py:99:0: C0301: Line too long (163/100) (line-too-long)
desc/original/SAE-non.py:103:18: C0326: Exactly one space required around assignment
        in_out_dim=self.dims[ith]
                  ^ (bad-whitespace)
desc/original/SAE-non.py:104:18: C0326: Exactly one space required around assignment
        hidden_dim=self.dims[ith+1]
                  ^ (bad-whitespace)
desc/original/SAE-non.py:105:14: C0326: Exactly one space required around assignment
        in_act=self.actinlayercenter if ith==self.n_stacks-1 else self.act
              ^ (bad-whitespace)
desc/original/SAE-non.py:105:43: C0326: Exactly one space required around comparison
        in_act=self.actinlayercenter if ith==self.n_stacks-1 else self.act
                                           ^^ (bad-whitespace)
desc/original/SAE-non.py:106:9: C0326: Exactly one space required around assignment
        x=Input(shape=(in_out_dim,),name="input")
         ^ (bad-whitespace)
desc/original/SAE-non.py:106:35: C0326: Exactly one space required after comma
        x=Input(shape=(in_out_dim,),name="input")
                                   ^ (bad-whitespace)
desc/original/SAE-non.py:107:9: C0326: Exactly one space required around assignment
        h=x
         ^ (bad-whitespace)
desc/original/SAE-non.py:108:28: C0303: Trailing whitespace (trailing-whitespace)
desc/original/SAE-non.py:109:25: C0326: Exactly one space required around comparison
        if self.drop_rate>0.0:
                         ^ (bad-whitespace)
desc/original/SAE-non.py:111:0: C0301: Line too long (134/100) (line-too-long)
desc/original/SAE-non.py:112:0: C0301: Line too long (103/100) (line-too-long)
desc/original/SAE-non.py:112:9: C0326: Exactly one space required around assignment
        h=Dense(units=hidden_dim,activation=None,kernel_initializer=self.init,name='encoder_%d'%ith)(h)
         ^ (bad-whitespace)
desc/original/SAE-non.py:112:32: C0326: Exactly one space required after comma
        h=Dense(units=hidden_dim,activation=None,kernel_initializer=self.init,name='encoder_%d'%ith)(h)
                                ^ (bad-whitespace)
desc/original/SAE-non.py:112:48: C0326: Exactly one space required after comma
        h=Dense(units=hidden_dim,activation=None,kernel_initializer=self.init,name='encoder_%d'%ith)(h)
                                                ^ (bad-whitespace)
desc/original/SAE-non.py:112:77: C0326: Exactly one space required after comma
        h=Dense(units=hidden_dim,activation=None,kernel_initializer=self.init,name='encoder_%d'%ith)(h)
                                                                             ^ (bad-whitespace)
desc/original/SAE-non.py:114:13: C0326: Exactly one space required around assignment
            h=keras.layers.__dict__[self.act](name='encoder_%d'%ith)(h)
             ^ (bad-whitespace)
desc/original/SAE-non.py:116:13: C0326: Exactly one space required around assignment
            h=Activation(self.act,name='act_encoder_%d'%ith)(h)
             ^ (bad-whitespace)
desc/original/SAE-non.py:116:33: C0326: Exactly one space required after comma
            h=Activation(self.act,name='act_encoder_%d'%ith)(h)
                                 ^ (bad-whitespace)
desc/original/SAE-non.py:117:0: C0301: Line too long (103/100) (line-too-long)
desc/original/SAE-non.py:117:9: C0326: Exactly one space required around assignment
        h=Dense(units=in_out_dim,activation=None,kernel_initializer=self.init,name='decoder_%d'%ith)(h)
         ^ (bad-whitespace)
desc/original/SAE-non.py:117:32: C0326: Exactly one space required after comma
        h=Dense(units=in_out_dim,activation=None,kernel_initializer=self.init,name='decoder_%d'%ith)(h)
                                ^ (bad-whitespace)
desc/original/SAE-non.py:117:48: C0326: Exactly one space required after comma
        h=Dense(units=in_out_dim,activation=None,kernel_initializer=self.init,name='decoder_%d'%ith)(h)
                                                ^ (bad-whitespace)
desc/original/SAE-non.py:117:77: C0326: Exactly one space required after comma
        h=Dense(units=in_out_dim,activation=None,kernel_initializer=self.init,name='decoder_%d'%ith)(h)
                                                                             ^ (bad-whitespace)
desc/original/SAE-non.py:118:28: C0303: Trailing whitespace (trailing-whitespace)
desc/original/SAE-non.py:119:25: C0326: Exactly one space required around comparison
        if self.drop_rate>0.0:
                         ^ (bad-whitespace)
desc/original/SAE-non.py:122:13: C0326: Exactly one space required around assignment
            h=keras.layers.__dict__[self.act](name='decoder_%d'%ith)(h)
             ^ (bad-whitespace)
desc/original/SAE-non.py:124:13: C0326: Exactly one space required around assignment
            h=Activation(self.act,name="act_decoder_%d"%ith)(h)
             ^ (bad-whitespace)
desc/original/SAE-non.py:124:33: C0326: Exactly one space required after comma
            h=Activation(self.act,name="act_decoder_%d"%ith)(h)
                                 ^ (bad-whitespace)
desc/original/SAE-non.py:125:13: C0326: Exactly one space required around assignment
        model=Model(inputs=x,outputs=h)
             ^ (bad-whitespace)
desc/original/SAE-non.py:125:28: C0326: Exactly one space required after comma
        model=Model(inputs=x,outputs=h)
                            ^ (bad-whitespace)
desc/original/SAE-non.py:126:21: C0326: Exactly one space required after comma
        print("Heere",model,type(model))
                     ^ (bad-whitespace)
desc/original/SAE-non.py:126:27: C0326: Exactly one space required after comma
        print("Heere",model,type(model))
                           ^ (bad-whitespace)
desc/original/SAE-non.py:129:28: C0326: Exactly one space required after comma
    def pretrain_stacks(self,x,epochs=200,decaying_step=4):
                            ^ (bad-whitespace)
desc/original/SAE-non.py:129:30: C0326: Exactly one space required after comma
    def pretrain_stacks(self,x,epochs=200,decaying_step=4):
                              ^ (bad-whitespace)
desc/original/SAE-non.py:129:41: C0326: Exactly one space required after comma
    def pretrain_stacks(self,x,epochs=200,decaying_step=4):
                                         ^ (bad-whitespace)
desc/original/SAE-non.py:130:11: C0303: Trailing whitespace (trailing-whitespace)
desc/original/SAE-non.py:131:0: C0301: Line too long (113/100) (line-too-long)
desc/original/SAE-non.py:133:0: C0303: Trailing whitespace (trailing-whitespace)
desc/original/SAE-non.py:136:37: C0303: Trailing whitespace (trailing-whitespace)
desc/original/SAE-non.py:139:16: C0326: Exactly one space required around assignment
        features=x
                ^ (bad-whitespace)
desc/original/SAE-non.py:140:28: C0326: Exactly one space required after comma
        print(type(features),features.shape)
                            ^ (bad-whitespace)
desc/original/SAE-non.py:141:21: C0326: Exactly one space required around assignment
        decaying_step=int(decaying_step)
                     ^ (bad-whitespace)
desc/original/SAE-non.py:146:38: C0326: Exactly one space required after comma
                print('learning rate=',pow(10,-1-j))
                                      ^ (bad-whitespace)
desc/original/SAE-non.py:146:45: C0326: Exactly one space required after comma
                print('learning rate=',pow(10,-1-j))
                                             ^ (bad-whitespace)
desc/original/SAE-non.py:147:59: C0326: Exactly one space required after comma
                self.stacks[i].compile(optimizer=SGD(pow(10,-1-j),momentum=0.9),loss='mse')
                                                           ^ (bad-whitespace)
desc/original/SAE-non.py:147:65: C0326: Exactly one space required after comma
                self.stacks[i].compile(optimizer=SGD(pow(10,-1-j),momentum=0.9),loss='mse')
                                                                 ^ (bad-whitespace)
desc/original/SAE-non.py:147:79: C0326: Exactly one space required after comma
                self.stacks[i].compile(optimizer=SGD(pow(10,-1-j),momentum=0.9),loss='mse')
                                                                               ^ (bad-whitespace)
desc/original/SAE-non.py:150:0: C0301: Line too long (110/100) (line-too-long)
desc/original/SAE-non.py:150:29: C0326: Exactly one space required around assignment
                    callbacks=[EarlyStopping(monitor='loss',min_delta=1e-4,patience=10,verbose=1,mode='auto')]
                             ^ (bad-whitespace)
desc/original/SAE-non.py:150:59: C0326: Exactly one space required after comma
                    callbacks=[EarlyStopping(monitor='loss',min_delta=1e-4,patience=10,verbose=1,mode='auto')]
                                                           ^ (bad-whitespace)
desc/original/SAE-non.py:150:74: C0326: Exactly one space required after comma
                    callbacks=[EarlyStopping(monitor='loss',min_delta=1e-4,patience=10,verbose=1,mode='auto')]
                                                                          ^ (bad-whitespace)
desc/original/SAE-non.py:150:86: C0326: Exactly one space required after comma
                    callbacks=[EarlyStopping(monitor='loss',min_delta=1e-4,patience=10,verbose=1,mode='auto')]
                                                                                      ^ (bad-whitespace)
desc/original/SAE-non.py:150:96: C0326: Exactly one space required after comma
                    callbacks=[EarlyStopping(monitor='loss',min_delta=1e-4,patience=10,verbose=1,mode='auto')]
                                                                                                ^ (bad-whitespace)
desc/original/SAE-non.py:151:0: C0301: Line too long (143/100) (line-too-long)
desc/original/SAE-non.py:151:143: C0303: Trailing whitespace (trailing-whitespace)
desc/original/SAE-non.py:151:47: C0326: Exactly one space required after comma
                    self.stacks[i].fit(features,features,callbacks=callbacks,batch_size=self.batch_size,epochs=math.ceil(epochs/decaying_step)) 
                                               ^ (bad-whitespace)
desc/original/SAE-non.py:151:56: C0326: Exactly one space required after comma
                    self.stacks[i].fit(features,features,callbacks=callbacks,batch_size=self.batch_size,epochs=math.ceil(epochs/decaying_step)) 
                                                        ^ (bad-whitespace)
desc/original/SAE-non.py:151:76: C0326: Exactly one space required after comma
                    self.stacks[i].fit(features,features,callbacks=callbacks,batch_size=self.batch_size,epochs=math.ceil(epochs/decaying_step)) 
                                                                            ^ (bad-whitespace)
desc/original/SAE-non.py:151:103: C0326: Exactly one space required after comma
                    self.stacks[i].fit(features,features,callbacks=callbacks,batch_size=self.batch_size,epochs=math.ceil(epochs/decaying_step)) 
                                                                                                       ^ (bad-whitespace)
desc/original/SAE-non.py:155:0: C0301: Line too long (115/100) (line-too-long)
desc/original/SAE-non.py:155:49: C0326: Exactly one space required after comma
                    self.stacks[i].fit(x=features,y=features,batch_size=self.batch_size,epochs=math.ceil(epochs/4))
                                                 ^ (bad-whitespace)
desc/original/SAE-non.py:155:60: C0326: Exactly one space required after comma
                    self.stacks[i].fit(x=features,y=features,batch_size=self.batch_size,epochs=math.ceil(epochs/4))
                                                            ^ (bad-whitespace)
desc/original/SAE-non.py:155:87: C0326: Exactly one space required after comma
                    self.stacks[i].fit(x=features,y=features,batch_size=self.batch_size,epochs=math.ceil(epochs/4))
                                                                                       ^ (bad-whitespace)
desc/original/SAE-non.py:158:0: C0301: Line too long (117/100) (line-too-long)
desc/original/SAE-non.py:158:25: C0326: Exactly one space required around assignment
            feature_model=Model(inputs=self.stacks[i].input, outputs=self.stacks[i].get_layer('encoder_%d'%i).output)
                         ^ (bad-whitespace)
desc/original/SAE-non.py:159:20: C0326: Exactly one space required around assignment
            features=feature_model.predict(features)
                    ^ (bad-whitespace)
desc/original/SAE-non.py:161:0: C0303: Trailing whitespace (trailing-whitespace)
desc/original/SAE-non.py:162:34: C0326: Exactly one space required after comma
    def pretrain_autoencoders(self,x,epochs=300):
                                  ^ (bad-whitespace)
desc/original/SAE-non.py:162:36: C0326: Exactly one space required after comma
    def pretrain_autoencoders(self,x,epochs=300):
                                    ^ (bad-whitespace)
desc/original/SAE-non.py:166:0: C0303: Trailing whitespace (trailing-whitespace)
desc/original/SAE-non.py:167:18: C0303: Trailing whitespace (trailing-whitespace)
desc/original/SAE-non.py:173:16: C0326: Exactly one space required around assignment
            name='encoder_%d'%i
                ^ (bad-whitespace)
desc/original/SAE-non.py:174:0: C0301: Line too long (103/100) (line-too-long)
desc/original/SAE-non.py:175:16: C0326: Exactly one space required around assignment
            name="decoder_%d"%i
                ^ (bad-whitespace)
desc/original/SAE-non.py:176:0: C0301: Line too long (103/100) (line-too-long)
desc/original/SAE-non.py:179:14: C0326: Exactly one space required around assignment
            lr=pow(10,-j-1)
              ^ (bad-whitespace)
desc/original/SAE-non.py:179:21: C0326: Exactly one space required after comma
            lr=pow(10,-j-1)
                     ^ (bad-whitespace)
desc/original/SAE-non.py:184:0: C0301: Line too long (106/100) (line-too-long)
desc/original/SAE-non.py:184:25: C0326: Exactly one space required around assignment
                callbacks=[EarlyStopping(monitor='loss',min_delta=1e-4,patience=10,verbose=1,mode='auto')]
                         ^ (bad-whitespace)
desc/original/SAE-non.py:184:55: C0326: Exactly one space required after comma
                callbacks=[EarlyStopping(monitor='loss',min_delta=1e-4,patience=10,verbose=1,mode='auto')]
                                                       ^ (bad-whitespace)
desc/original/SAE-non.py:184:70: C0326: Exactly one space required after comma
                callbacks=[EarlyStopping(monitor='loss',min_delta=1e-4,patience=10,verbose=1,mode='auto')]
                                                                      ^ (bad-whitespace)
desc/original/SAE-non.py:184:82: C0326: Exactly one space required after comma
                callbacks=[EarlyStopping(monitor='loss',min_delta=1e-4,patience=10,verbose=1,mode='auto')]
                                                                                  ^ (bad-whitespace)
desc/original/SAE-non.py:184:92: C0326: Exactly one space required after comma
                callbacks=[EarlyStopping(monitor='loss',min_delta=1e-4,patience=10,verbose=1,mode='auto')]
                                                                                            ^ (bad-whitespace)
desc/original/SAE-non.py:185:0: C0301: Line too long (106/100) (line-too-long)
desc/original/SAE-non.py:185:74: C0326: Exactly one space required after comma
                self.autoencoders.fit(x=x, y=x, batch_size=self.batch_size,callbacks=callbacks, epochs=50)
                                                                          ^ (bad-whitespace)
desc/original/SAE-non.py:189:16: C0326: Exactly one space required after comma
    def fit(self,x,epochs=200):
                ^ (bad-whitespace)
desc/original/SAE-non.py:189:18: C0326: Exactly one space required after comma
    def fit(self,x,epochs=200):
                  ^ (bad-whitespace)
desc/original/SAE-non.py:190:30: C0326: Exactly one space required after comma
        self.pretrain_stacks(x,epochs=epochs)
                              ^ (bad-whitespace)
desc/original/SAE-non.py:191:36: C0326: Exactly one space required after comma
        self.pretrain_autoencoders(x,epochs=epochs)
                                    ^ (bad-whitespace)
desc/original/SAE-non.py:192:0: C0303: Trailing whitespace (trailing-whitespace)
desc/original/SAE-non.py:194:11: C0326: Exactly one space required around comparison
if __name__=='__main__':
           ^^ (bad-whitespace)
desc/original/SAE-non.py:208:14: C0326: No space allowed before bracket
        print ('MNIST samples', x.shape)
              ^ (bad-whitespace)
desc/original/SAE-non.py:210:5: C0326: Exactly one space required after comma
    x,y=load_mnist()
     ^ (bad-whitespace)
desc/original/SAE-non.py:210:7: C0326: Exactly one space required around assignment
    x,y=load_mnist()
       ^ (bad-whitespace)
desc/original/SAE-non.py:211:31: C0326: Exactly one space required after comma
    print("Test on x shape is ",x.shape)
                               ^ (bad-whitespace)
desc/original/SAE-non.py:212:7: C0326: Exactly one space required around assignment
    sae=SAE(dims=[x.shape[-1],64,32])
       ^ (bad-whitespace)
desc/original/SAE-non.py:212:29: C0326: Exactly one space required after comma
    sae=SAE(dims=[x.shape[-1],64,32])
                             ^ (bad-whitespace)
desc/original/SAE-non.py:212:32: C0326: Exactly one space required after comma
    sae=SAE(dims=[x.shape[-1],64,32])
                                ^ (bad-whitespace)
desc/original/SAE-non.py:213:15: C0326: Exactly one space required after comma
    sae.fit(x=x,epochs=150)
               ^ (bad-whitespace)
desc/original/SAE-non.py:215:12: C0326: Exactly one space required around assignment
    features=sae.encoder.predict(x)
            ^ (bad-whitespace)
desc/original/SAE-non.py:216:0: C0303: Trailing whitespace (trailing-whitespace)
desc/original/SAE-non.py:220:0: C0303: Trailing whitespace (trailing-whitespace)
desc/original/SAE-non.py:222:0: C0303: Trailing whitespace (trailing-whitespace)
desc/original/SAE-non.py:224:0: C0303: Trailing whitespace (trailing-whitespace)
desc/original/SAE-non.py:225:0: C0303: Trailing whitespace (trailing-whitespace)
desc/original/SAE-non.py:229:0: C0305: Trailing newlines (trailing-newlines)
desc/original/SAE-non.py:1:0: C0103: Module name "SAE-non" doesn't conform to snake_case naming style (invalid-name)
desc/original/SAE-non.py:1:0: C0114: Missing module docstring (missing-module-docstring)
desc/original/SAE-non.py:1:0: E0401: Unable to import 'keras.layers' (import-error)
desc/original/SAE-non.py:2:0: E0401: Unable to import 'keras.models' (import-error)
desc/original/SAE-non.py:3:0: E0401: Unable to import 'keras.optimizers' (import-error)
desc/original/SAE-non.py:4:0: E0401: Unable to import 'keras.utils.vis_utils' (import-error)
desc/original/SAE-non.py:5:0: E0401: Unable to import 'keras.callbacks' (import-error)
desc/original/SAE-non.py:51:8: C0103: Attribute name "use_earlyStop" doesn't conform to snake_case naming style (invalid-name)
desc/original/SAE-non.py:9:0: R0902: Too many instance attributes (13/7) (too-many-instance-attributes)
desc/original/SAE-non.py:9:0: R0205: Class 'SAE' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
desc/original/SAE-non.py:30:4: R0913: Too many arguments (10/5) (too-many-arguments)
desc/original/SAE-non.py:32:16: W0613: Unused argument 'batchnorm' (unused-argument)
desc/original/SAE-non.py:33:16: W0613: Unused argument 'act' (unused-argument)
desc/original/SAE-non.py:39:16: W0613: Unused argument 'save_dir' (unused-argument)
desc/original/SAE-non.py:59:8: W0621: Redefining name 'x' from outer scope (line 210) (redefined-outer-name)
desc/original/SAE-non.py:59:8: C0103: Variable name "x" doesn't conform to snake_case naming style (invalid-name)
desc/original/SAE-non.py:60:8: C0103: Variable name "h" doesn't conform to snake_case naming style (invalid-name)
desc/original/SAE-non.py:63:12: C0103: Variable name "h" doesn't conform to snake_case naming style (invalid-name)
desc/original/SAE-non.py:65:16: C0103: Variable name "h" doesn't conform to snake_case naming style (invalid-name)
desc/original/SAE-non.py:67:16: C0103: Variable name "h" doesn't conform to snake_case naming style (invalid-name)
desc/original/SAE-non.py:67:18: E0602: Undefined variable 'keras' (undefined-variable)
desc/original/SAE-non.py:69:16: C0103: Variable name "h" doesn't conform to snake_case naming style (invalid-name)
desc/original/SAE-non.py:71:8: C0103: Variable name "h" doesn't conform to snake_case naming style (invalid-name)
desc/original/SAE-non.py:73:12: C0103: Variable name "h" doesn't conform to snake_case naming style (invalid-name)
desc/original/SAE-non.py:74:8: C0103: Variable name "h" doesn't conform to snake_case naming style (invalid-name)
desc/original/SAE-non.py:77:12: C0103: Variable name "h" doesn't conform to snake_case naming style (invalid-name)
desc/original/SAE-non.py:79:16: C0103: Variable name "h" doesn't conform to snake_case naming style (invalid-name)
desc/original/SAE-non.py:81:16: C0103: Variable name "h" doesn't conform to snake_case naming style (invalid-name)
desc/original/SAE-non.py:81:18: E0602: Undefined variable 'keras' (undefined-variable)
desc/original/SAE-non.py:83:16: C0103: Variable name "h" doesn't conform to snake_case naming style (invalid-name)
desc/original/SAE-non.py:85:8: C0103: Variable name "h" doesn't conform to snake_case naming style (invalid-name)
desc/original/SAE-non.py:91:4: C0116: Missing function or method docstring (missing-function-docstring)
desc/original/SAE-non.py:106:8: W0621: Redefining name 'x' from outer scope (line 210) (redefined-outer-name)
desc/original/SAE-non.py:106:8: C0103: Variable name "x" doesn't conform to snake_case naming style (invalid-name)
desc/original/SAE-non.py:107:8: C0103: Variable name "h" doesn't conform to snake_case naming style (invalid-name)
desc/original/SAE-non.py:110:12: C0103: Variable name "h" doesn't conform to snake_case naming style (invalid-name)
desc/original/SAE-non.py:112:8: C0103: Variable name "h" doesn't conform to snake_case naming style (invalid-name)
desc/original/SAE-non.py:114:12: C0103: Variable name "h" doesn't conform to snake_case naming style (invalid-name)
desc/original/SAE-non.py:114:14: E0602: Undefined variable 'keras' (undefined-variable)
desc/original/SAE-non.py:116:12: C0103: Variable name "h" doesn't conform to snake_case naming style (invalid-name)
desc/original/SAE-non.py:117:8: C0103: Variable name "h" doesn't conform to snake_case naming style (invalid-name)
desc/original/SAE-non.py:120:12: C0103: Variable name "h" doesn't conform to snake_case naming style (invalid-name)
desc/original/SAE-non.py:122:12: C0103: Variable name "h" doesn't conform to snake_case naming style (invalid-name)
desc/original/SAE-non.py:122:14: E0602: Undefined variable 'keras' (undefined-variable)
desc/original/SAE-non.py:124:12: C0103: Variable name "h" doesn't conform to snake_case naming style (invalid-name)
desc/original/SAE-non.py:129:29: W0621: Redefining name 'x' from outer scope (line 210) (redefined-outer-name)
desc/original/SAE-non.py:139:8: W0621: Redefining name 'features' from outer scope (line 215) (redefined-outer-name)
desc/original/SAE-non.py:129:4: C0103: Argument name "x" doesn't conform to snake_case naming style (invalid-name)
desc/original/SAE-non.py:162:35: W0621: Redefining name 'x' from outer scope (line 210) (redefined-outer-name)
desc/original/SAE-non.py:162:4: C0103: Argument name "x" doesn't conform to snake_case naming style (invalid-name)
desc/original/SAE-non.py:179:12: C0103: Variable name "lr" doesn't conform to snake_case naming style (invalid-name)
desc/original/SAE-non.py:189:17: W0621: Redefining name 'x' from outer scope (line 210) (redefined-outer-name)
desc/original/SAE-non.py:189:4: C0103: Argument name "x" doesn't conform to snake_case naming style (invalid-name)
desc/original/SAE-non.py:189:4: C0116: Missing function or method docstring (missing-function-docstring)
desc/original/SAE-non.py:198:-1: W0105: String statement has no effect (pointless-string-statement)
desc/original/SAE-non.py:204:8: W0621: Redefining name 'x' from outer scope (line 210) (redefined-outer-name)
desc/original/SAE-non.py:205:8: W0621: Redefining name 'y' from outer scope (line 210) (redefined-outer-name)
desc/original/SAE-non.py:200:4: C0116: Missing function or method docstring (missing-function-docstring)
desc/original/SAE-non.py:202:8: E0401: Unable to import 'keras.datasets' (import-error)
desc/original/SAE-non.py:202:8: C0415: Import outside toplevel (keras.datasets.mnist) (import-outside-toplevel)
desc/original/SAE-non.py:204:8: C0103: Variable name "x" doesn't conform to snake_case naming style (invalid-name)
desc/original/SAE-non.py:205:8: C0103: Variable name "y" doesn't conform to snake_case naming style (invalid-name)
desc/original/SAE-non.py:206:8: C0103: Variable name "x" doesn't conform to snake_case naming style (invalid-name)
desc/original/SAE-non.py:207:8: C0103: Variable name "x" doesn't conform to snake_case naming style (invalid-name)
************* Module desc.original.train
desc/original/train.py:21:9: C0326: Exactly one space required after comma
import os,math
         ^ (bad-whitespace)
desc/original/train.py:36:0: C0303: Trailing whitespace (trailing-whitespace)
desc/original/train.py:41:0: C0301: Line too long (103/100) (line-too-long)
desc/original/train.py:45:0: C0301: Line too long (101/100) (line-too-long)
desc/original/train.py:48:3: C0303: Trailing whitespace (trailing-whitespace)
desc/original/train.py:49:20: C0326: Exactly one space required after comma
def getdims(x=(10000,200)):
                    ^ (bad-whitespace)
desc/original/train.py:53:17: C0326: Exactly one space required around comparison
    assert len(x)==2
                 ^^ (bad-whitespace)
desc/original/train.py:54:12: C0326: Exactly one space required around assignment
    n_sample=x[0]
            ^ (bad-whitespace)
desc/original/train.py:55:15: C0326: Exactly one space required around comparison
    if n_sample>20000:# may be need complex network
               ^ (bad-whitespace)
desc/original/train.py:56:12: C0326: Exactly one space required around assignment
        dims=[x[-1],128,32]
            ^ (bad-whitespace)
desc/original/train.py:56:19: C0326: Exactly one space required after comma
        dims=[x[-1],128,32]
                   ^ (bad-whitespace)
desc/original/train.py:56:23: C0326: Exactly one space required after comma
        dims=[x[-1],128,32]
                       ^ (bad-whitespace)
desc/original/train.py:57:17: C0326: Exactly one space required around comparison
    elif n_sample>10000:#10000
                 ^ (bad-whitespace)
desc/original/train.py:58:12: C0326: Exactly one space required around assignment
        dims=[x[-1],64,32]
            ^ (bad-whitespace)
desc/original/train.py:58:19: C0326: Exactly one space required after comma
        dims=[x[-1],64,32]
                   ^ (bad-whitespace)
desc/original/train.py:58:22: C0326: Exactly one space required after comma
        dims=[x[-1],64,32]
                      ^ (bad-whitespace)
desc/original/train.py:59:17: C0326: Exactly one space required around comparison
    elif n_sample>5000: #5000
                 ^ (bad-whitespace)
desc/original/train.py:60:12: C0326: Exactly one space required around assignment
        dims=[x[-1],32,16] #16
            ^ (bad-whitespace)
desc/original/train.py:60:19: C0326: Exactly one space required after comma
        dims=[x[-1],32,16] #16
                   ^ (bad-whitespace)
desc/original/train.py:60:22: C0326: Exactly one space required after comma
        dims=[x[-1],32,16] #16
                      ^ (bad-whitespace)
desc/original/train.py:61:17: C0326: Exactly one space required around comparison
    elif n_sample>2000:
                 ^ (bad-whitespace)
desc/original/train.py:62:12: C0326: Exactly one space required around assignment
        dims=[x[-1],128]
            ^ (bad-whitespace)
desc/original/train.py:62:19: C0326: Exactly one space required after comma
        dims=[x[-1],128]
                   ^ (bad-whitespace)
desc/original/train.py:63:17: C0326: Exactly one space required around comparison
    elif n_sample>500:
                 ^ (bad-whitespace)
desc/original/train.py:64:12: C0326: Exactly one space required around assignment
        dims=[x[-1],64]
            ^ (bad-whitespace)
desc/original/train.py:64:19: C0326: Exactly one space required after comma
        dims=[x[-1],64]
                   ^ (bad-whitespace)
desc/original/train.py:66:12: C0326: Exactly one space required around assignment
        dims=[x[-1],16]
            ^ (bad-whitespace)
desc/original/train.py:66:19: C0326: Exactly one space required after comma
        dims=[x[-1],16]
                   ^ (bad-whitespace)
desc/original/train.py:72:0: C0303: Trailing whitespace (trailing-whitespace)
desc/original/train.py:73:21: C0326: Exactly one space required after comma
def train_single(data,dims=None,
                     ^ (bad-whitespace)
desc/original/train.py:74:0: C0330: Wrong continued indentation (add 9 spaces).
        alpha=1.0,
        ^        | (bad-continuation)
desc/original/train.py:75:0: C0330: Wrong continued indentation (add 9 spaces).
        tol=0.005,
        ^        | (bad-continuation)
desc/original/train.py:76:0: C0330: Wrong continued indentation (add 9 spaces).
        init='glorot_uniform',
        ^        | (bad-continuation)
desc/original/train.py:77:0: C0330: Wrong continued indentation (add 9 spaces).
        n_clusters=None,
        ^        | (bad-continuation)
desc/original/train.py:78:0: C0330: Wrong continued indentation (add 9 spaces).
        louvain_resolution=1.0,
        ^        | (bad-continuation)
desc/original/train.py:79:0: C0330: Wrong continued indentation (add 9 spaces).
        n_neighbors=15,
        ^        | (bad-continuation)
desc/original/train.py:80:0: C0330: Wrong continued indentation (add 9 spaces).
        pretrain_epochs=300,
        ^        | (bad-continuation)
desc/original/train.py:81:0: C0330: Wrong continued indentation (add 9 spaces).
        batch_size=256,
        ^        | (bad-continuation)
desc/original/train.py:82:0: C0330: Wrong continued indentation (add 9 spaces).
        activation='relu',
        ^        | (bad-continuation)
desc/original/train.py:83:0: C0330: Wrong continued indentation (add 9 spaces).
        actincenter='tanh',
        ^        | (bad-continuation)
desc/original/train.py:84:0: C0330: Wrong continued indentation (add 9 spaces).
        drop_rate_SAE=0.2,
        ^        | (bad-continuation)
desc/original/train.py:85:0: C0330: Wrong continued indentation (add 9 spaces).
        is_stacked=True,
        ^        | (bad-continuation)
desc/original/train.py:86:0: C0330: Wrong continued indentation (add 9 spaces).
        use_earlyStop=True,
        ^        | (bad-continuation)
desc/original/train.py:87:0: C0330: Wrong continued indentation (add 9 spaces).
        use_ae_weights=False,
        ^        | (bad-continuation)
desc/original/train.py:88:0: C0330: Wrong continued indentation (add 9 spaces).
	save_encoder_weights=False,
        ^        | (bad-continuation)
desc/original/train.py:89:0: C0330: Wrong continued indentation (add 9 spaces).
        save_dir='result_tmp',
        ^        | (bad-continuation)
desc/original/train.py:90:0: C0330: Wrong continued indentation (add 9 spaces).
        max_iter=1000,
        ^        | (bad-continuation)
desc/original/train.py:91:0: C0330: Wrong continued indentation (add 9 spaces).
        epochs_fit=4, 
        ^        | (bad-continuation)
desc/original/train.py:91:21: C0303: Trailing whitespace (trailing-whitespace)
desc/original/train.py:92:0: C0330: Wrong continued indentation (add 9 spaces).
        num_Cores=20,
        ^        | (bad-continuation)
desc/original/train.py:93:0: C0330: Wrong continued indentation (add 9 spaces).
        use_GPU=True,
        ^        | (bad-continuation)
desc/original/train.py:94:0: C0330: Wrong continued indentation (add 9 spaces).
        random_seed=201809,
        ^        | (bad-continuation)
desc/original/train.py:95:0: C0330: Wrong continued indentation (add 9 spaces).
        verbose=True,
        ^        | (bad-continuation)
desc/original/train.py:96:0: C0330: Wrong continued indentation (add 9 spaces).
	do_tsne=False,
        ^        | (bad-continuation)
desc/original/train.py:97:0: C0330: Wrong continued indentation.
):
^               || (bad-continuation)
desc/original/train.py:98:22: C0326: Exactly one space required after comma
    if isinstance(data,AnnData):
                      ^ (bad-whitespace)
desc/original/train.py:99:13: C0326: Exactly one space required around assignment
        adata=data
             ^ (bad-whitespace)
desc/original/train.py:101:13: C0326: Exactly one space required around assignment
        adata=sc.AnnData(data)
             ^ (bad-whitespace)
desc/original/train.py:102:19: C0303: Trailing whitespace (trailing-whitespace)
desc/original/train.py:104:12: C0326: Exactly one space required around assignment
        dims=getdims(adata.shape)
            ^ (bad-whitespace)
desc/original/train.py:105:0: C0301: Line too long (151/100) (line-too-long)
desc/original/train.py:105:18: C0326: Exactly one space required around comparison
    assert dims[0]==adata.shape[-1],'the number of columns of x doesnot equal to the first element of dims, we must make sure that dims[0]==x.shape[0]'
                  ^^ (bad-whitespace)
desc/original/train.py:105:35: C0326: Exactly one space required after comma
    assert dims[0]==adata.shape[-1],'the number of columns of x doesnot equal to the first element of dims, we must make sure that dims[0]==x.shape[0]'
                                   ^ (bad-whitespace)
desc/original/train.py:112:13: C0326: Exactly one space required around assignment
    total_cpu=multiprocessing.cpu_count()
             ^ (bad-whitespace)
desc/original/train.py:113:89: C0303: Trailing whitespace (trailing-whitespace)
desc/original/train.py:113:13: C0326: Exactly one space required around assignment
    num_Cores=int(num_Cores) if total_cpu>int(num_Cores) else int(math.ceil(total_cpu/2)) 
             ^ (bad-whitespace)
desc/original/train.py:113:41: C0326: Exactly one space required around comparison
    num_Cores=int(num_Cores) if total_cpu>int(num_Cores) else int(math.ceil(total_cpu/2)) 
                                         ^ (bad-whitespace)
desc/original/train.py:114:49: C0326: Exactly one space required after comma
    print('The number of cpu in your computer is',total_cpu)
                                                 ^ (bad-whitespace)
desc/original/train.py:117:0: C0301: Line too long (109/100) (line-too-long)
desc/original/train.py:121:0: C0301: Line too long (136/100) (line-too-long)
desc/original/train.py:122:66: C0326: Exactly one space required after comma
    if not use_ae_weights and os.path.isfile(os.path.join(save_dir,"ae_weights.h5")):
                                                                  ^ (bad-whitespace)
desc/original/train.py:123:39: C0326: Exactly one space required after comma
        os.remove(os.path.join(save_dir,"ae_weights.h5"))
                                       ^ (bad-whitespace)
desc/original/train.py:124:0: C0303: Trailing whitespace (trailing-whitespace)
desc/original/train.py:125:27: C0303: Trailing whitespace (trailing-whitespace)
desc/original/train.py:125:7: C0326: Exactly one space required around assignment
    tic=time()#recored time         
       ^ (bad-whitespace)
desc/original/train.py:126:8: C0326: Exactly one space required around assignment
    desc=DESC_MODEL(dims=dims,
        ^ (bad-whitespace)
desc/original/train.py:127:0: C0330: Wrong continued indentation (add 6 spaces).
              x=adata.X,
              ^     | (bad-continuation)
desc/original/train.py:128:0: C0330: Wrong continued indentation (add 6 spaces).
              alpha=alpha,
              ^     | (bad-continuation)
desc/original/train.py:129:0: C0330: Wrong continued indentation (add 6 spaces).
              tol=tol,
              ^     | (bad-continuation)
desc/original/train.py:130:0: C0330: Wrong continued indentation (add 6 spaces).
              init=init,
              ^     | (bad-continuation)
desc/original/train.py:131:0: C0330: Wrong continued indentation (add 6 spaces).
              n_clusters=n_clusters,
              ^     | (bad-continuation)
desc/original/train.py:132:0: C0330: Wrong continued indentation (add 6 spaces).
              louvain_resolution=louvain_resolution,
              ^     | (bad-continuation)
desc/original/train.py:133:0: C0330: Wrong continued indentation (add 6 spaces).
              n_neighbors=n_neighbors,
              ^     | (bad-continuation)
desc/original/train.py:134:0: C0330: Wrong continued indentation (add 6 spaces).
              pretrain_epochs=pretrain_epochs,
              ^     | (bad-continuation)
desc/original/train.py:135:0: C0330: Wrong continued indentation (add 6 spaces).
              batch_size=batch_size,
              ^     | (bad-continuation)
desc/original/train.py:136:0: C0330: Wrong continued indentation (add 6 spaces).
              random_seed=random_seed,
              ^     | (bad-continuation)
desc/original/train.py:137:0: C0330: Wrong continued indentation (add 6 spaces).
              activation=activation,
              ^     | (bad-continuation)
desc/original/train.py:138:0: C0330: Wrong continued indentation (add 6 spaces).
              actincenter=actincenter,
              ^     | (bad-continuation)
desc/original/train.py:139:0: C0330: Wrong continued indentation (add 6 spaces).
              drop_rate_SAE=drop_rate_SAE,
              ^     | (bad-continuation)
desc/original/train.py:140:0: C0330: Wrong continued indentation (add 6 spaces).
              is_stacked=is_stacked,
              ^     | (bad-continuation)
desc/original/train.py:141:0: C0330: Wrong continued indentation (add 6 spaces).
              use_earlyStop=use_earlyStop,
              ^     | (bad-continuation)
desc/original/train.py:142:0: C0330: Wrong continued indentation (add 6 spaces).
              use_ae_weights=use_ae_weights,
              ^     | (bad-continuation)
desc/original/train.py:143:0: C0330: Wrong continued indentation (add 6 spaces).
	      save_encoder_weights=save_encoder_weights,
              ^     | (bad-continuation)
desc/original/train.py:144:0: C0330: Wrong continued indentation (add 6 spaces).
              save_dir=save_dir
              ^     | (bad-continuation)
desc/original/train.py:145:0: C0330: Wrong continued indentation.
    )
    ^              || (bad-continuation)
desc/original/train.py:146:35: C0326: Exactly one space required after comma
    desc.compile(optimizer=SGD(0.01,0.9),loss='kld')
                                   ^ (bad-whitespace)
desc/original/train.py:146:40: C0326: Exactly one space required after comma
    desc.compile(optimizer=SGD(0.01,0.9),loss='kld')
                                        ^ (bad-whitespace)
desc/original/train.py:147:13: C0326: Exactly one space required after comma
    Embeded_z,q_pred=desc.fit(maxiter=max_iter,epochs_fit=epochs_fit)
             ^ (bad-whitespace)
desc/original/train.py:147:20: C0326: Exactly one space required around assignment
    Embeded_z,q_pred=desc.fit(maxiter=max_iter,epochs_fit=epochs_fit)
                    ^ (bad-whitespace)
desc/original/train.py:147:46: C0326: Exactly one space required after comma
    Embeded_z,q_pred=desc.fit(maxiter=max_iter,epochs_fit=epochs_fit)
                                              ^ (bad-whitespace)
desc/original/train.py:152:27: C0326: Exactly one space required after comma
    print("The runtime is ",time()-tic)
                           ^ (bad-whitespace)
desc/original/train.py:153:10: C0326: Exactly one space required around assignment
    y_pred=pd.Series(np.argmax(q_pred,axis=1),index=adata.obs.index,dtype='category')
          ^ (bad-whitespace)
desc/original/train.py:153:37: C0326: Exactly one space required after comma
    y_pred=pd.Series(np.argmax(q_pred,axis=1),index=adata.obs.index,dtype='category')
                                     ^ (bad-whitespace)
desc/original/train.py:153:45: C0326: Exactly one space required after comma
    y_pred=pd.Series(np.argmax(q_pred,axis=1),index=adata.obs.index,dtype='category')
                                             ^ (bad-whitespace)
desc/original/train.py:153:67: C0326: Exactly one space required after comma
    y_pred=pd.Series(np.argmax(q_pred,axis=1),index=adata.obs.index,dtype='category')
                                                                   ^ (bad-whitespace)
desc/original/train.py:154:25: C0326: Exactly one space required around assignment
    y_pred.cat.categories=list(range(len(y_pred.unique())))
                         ^ (bad-whitespace)
desc/original/train.py:155:46: C0326: Exactly one space required around assignment
    adata.obs['desc_'+str(louvain_resolution)]=y_pred
                                              ^ (bad-whitespace)
desc/original/train.py:156:53: C0326: Exactly one space required around assignment
    adata.obsm['X_Embeded_z'+str(louvain_resolution)]=Embeded_z
                                                     ^ (bad-whitespace)
desc/original/train.py:158:0: C0301: Line too long (106/100) (line-too-long)
desc/original/train.py:158:24: C0326: Exactly one space required after comma
        sc.tl.tsne(adata,use_rep="X_Embeded_z"+str(louvain_resolution),learning_rate=150,n_jobs=num_Cores)
                        ^ (bad-whitespace)
desc/original/train.py:158:70: C0326: Exactly one space required after comma
        sc.tl.tsne(adata,use_rep="X_Embeded_z"+str(louvain_resolution),learning_rate=150,n_jobs=num_Cores)
                                                                      ^ (bad-whitespace)
desc/original/train.py:158:88: C0326: Exactly one space required after comma
        sc.tl.tsne(adata,use_rep="X_Embeded_z"+str(louvain_resolution),learning_rate=150,n_jobs=num_Cores)
                                                                                        ^ (bad-whitespace)
desc/original/train.py:159:52: C0326: Exactly one space required around assignment
        adata.obsm["X_tsne"+str(louvain_resolution)]=adata.obsm["X_tsne"]
                                                    ^ (bad-whitespace)
desc/original/train.py:162:0: C0330: Wrong continued indentation (add 6 spaces).
                 '    \'X_tsne\''+str(louvain_resolution),'the tsne coordinates (adata.ob)\n', v=4)
                 ^     | (bad-continuation)
desc/original/train.py:162:57: C0326: Exactly one space required after comma
                 '    \'X_tsne\''+str(louvain_resolution),'the tsne coordinates (adata.ob)\n', v=4)
                                                         ^ (bad-whitespace)
desc/original/train.py:164:52: C0326: Exactly one space required around assignment
    adata.uns['prob_matrix'+str(louvain_resolution)]=q_pred
                                                    ^ (bad-whitespace)
desc/original/train.py:168:14: C0326: Exactly one space required after comma
def train(data,dims=None,
              ^ (bad-whitespace)
desc/original/train.py:169:0: C0330: Wrong continued indentation (add 2 spaces).
        alpha=1.0,
        ^ | (bad-continuation)
desc/original/train.py:170:0: C0330: Wrong continued indentation (add 2 spaces).
        tol=0.005,
        ^ | (bad-continuation)
desc/original/train.py:171:0: C0330: Wrong continued indentation (add 2 spaces).
        init='glorot_uniform',
        ^ | (bad-continuation)
desc/original/train.py:172:0: C0330: Wrong continued indentation (add 2 spaces).
        n_clusters=None,
        ^ | (bad-continuation)
desc/original/train.py:173:0: C0330: Wrong continued indentation (add 2 spaces).
        louvain_resolution=[0.8,1.0,1.2],
        ^ | (bad-continuation)
desc/original/train.py:173:31: C0326: Exactly one space required after comma
        louvain_resolution=[0.8,1.0,1.2],
                               ^ (bad-whitespace)
desc/original/train.py:173:35: C0326: Exactly one space required after comma
        louvain_resolution=[0.8,1.0,1.2],
                                   ^ (bad-whitespace)
desc/original/train.py:174:0: C0330: Wrong continued indentation (add 2 spaces).
        n_neighbors=15,
        ^ | (bad-continuation)
desc/original/train.py:175:0: C0330: Wrong continued indentation (add 2 spaces).
        pretrain_epochs=300,
        ^ | (bad-continuation)
desc/original/train.py:176:0: C0330: Wrong continued indentation (add 2 spaces).
        batch_size=256,
        ^ | (bad-continuation)
desc/original/train.py:177:0: C0330: Wrong continued indentation (add 2 spaces).
        activation='relu',
        ^ | (bad-continuation)
desc/original/train.py:178:0: C0330: Wrong continued indentation (add 2 spaces).
        actincenter='tanh',
        ^ | (bad-continuation)
desc/original/train.py:179:0: C0330: Wrong continued indentation (add 2 spaces).
        drop_rate_SAE=0.2,
        ^ | (bad-continuation)
desc/original/train.py:180:0: C0330: Wrong continued indentation (add 2 spaces).
        is_stacked=True,
        ^ | (bad-continuation)
desc/original/train.py:181:0: C0330: Wrong continued indentation (add 2 spaces).
        use_earlyStop=True,
        ^ | (bad-continuation)
desc/original/train.py:182:0: C0330: Wrong continued indentation (add 2 spaces).
        use_ae_weights=True,
        ^ | (bad-continuation)
desc/original/train.py:183:0: C0330: Wrong continued indentation (add 2 spaces).
	save_encoder_weights=False,
        ^ | (bad-continuation)
desc/original/train.py:184:0: C0330: Wrong continued indentation (add 2 spaces).
        save_dir='result_tmp',
        ^ | (bad-continuation)
desc/original/train.py:185:0: C0330: Wrong continued indentation (add 2 spaces).
        max_iter=1000,
        ^ | (bad-continuation)
desc/original/train.py:186:0: C0330: Wrong continued indentation (add 2 spaces).
        epochs_fit=4, 
        ^ | (bad-continuation)
desc/original/train.py:186:21: C0303: Trailing whitespace (trailing-whitespace)
desc/original/train.py:187:0: C0330: Wrong continued indentation (add 2 spaces).
        num_Cores=20,
        ^ | (bad-continuation)
desc/original/train.py:188:0: C0330: Wrong continued indentation (add 2 spaces).
        use_GPU=True,
        ^ | (bad-continuation)
desc/original/train.py:189:0: C0330: Wrong continued indentation (add 2 spaces).
        random_seed=201809,
        ^ | (bad-continuation)
desc/original/train.py:190:0: C0330: Wrong continued indentation (add 2 spaces).
        verbose=True,
        ^ | (bad-continuation)
desc/original/train.py:191:0: C0330: Wrong continued indentation (add 2 spaces).
	do_tsne=False
        ^ | (bad-continuation)
desc/original/train.py:192:0: C0330: Wrong continued indentation.
): 
^        || (bad-continuation)
desc/original/train.py:192:2: C0303: Trailing whitespace (trailing-whitespace)
desc/original/train.py:194:0: C0301: Line too long (119/100) (line-too-long)
desc/original/train.py:195:0: C0303: Trailing whitespace (trailing-whitespace)
desc/original/train.py:196:0: C0303: Trailing whitespace (trailing-whitespace)
desc/original/train.py:203:0: C0301: Line too long (240/100) (line-too-long)
desc/original/train.py:204:0: C0303: Trailing whitespace (trailing-whitespace)
desc/original/train.py:206:0: C0301: Line too long (188/100) (line-too-long)
desc/original/train.py:210:0: C0301: Line too long (161/100) (line-too-long)
desc/original/train.py:211:0: C0301: Line too long (161/100) (line-too-long)
desc/original/train.py:212:0: C0301: Line too long (303/100) (line-too-long)
desc/original/train.py:212:303: C0303: Trailing whitespace (trailing-whitespace)
desc/original/train.py:214:93: C0303: Trailing whitespace (trailing-whitespace)
desc/original/train.py:216:0: C0301: Line too long (106/100) (line-too-long)
desc/original/train.py:216:106: C0303: Trailing whitespace (trailing-whitespace)
desc/original/train.py:218:0: C0301: Line too long (207/100) (line-too-long)
desc/original/train.py:220:0: C0301: Line too long (122/100) (line-too-long)
desc/original/train.py:222:0: C0301: Line too long (121/100) (line-too-long)
desc/original/train.py:222:121: C0303: Trailing whitespace (trailing-whitespace)
desc/original/train.py:224:0: C0301: Line too long (119/100) (line-too-long)
desc/original/train.py:226:0: C0301: Line too long (128/100) (line-too-long)
desc/original/train.py:228:0: C0301: Line too long (148/100) (line-too-long)
desc/original/train.py:230:0: C0301: Line too long (118/100) (line-too-long)
desc/original/train.py:238:0: C0301: Line too long (179/100) (line-too-long)
desc/original/train.py:238:179: C0303: Trailing whitespace (trailing-whitespace)
desc/original/train.py:240:0: C0301: Line too long (103/100) (line-too-long)
desc/original/train.py:240:103: C0303: Trailing whitespace (trailing-whitespace)
desc/original/train.py:242:0: C0301: Line too long (129/100) (line-too-long)
desc/original/train.py:245:0: C0301: Line too long (102/100) (line-too-long)
desc/original/train.py:249:22: C0326: Exactly one space required after comma
    if isinstance(data,AnnData):
                      ^ (bad-whitespace)
desc/original/train.py:250:13: C0326: Exactly one space required around assignment
        adata=data
             ^ (bad-whitespace)
desc/original/train.py:251:24: C0326: Exactly one space required after comma
    elif isinstance(data,pd.DataFrame):
                        ^ (bad-whitespace)
desc/original/train.py:252:13: C0326: Exactly one space required around assignment
        adata=sc.AnnData(data,obs=data.index,var=data.columns)
             ^ (bad-whitespace)
desc/original/train.py:252:29: C0326: Exactly one space required after comma
        adata=sc.AnnData(data,obs=data.index,var=data.columns)
                             ^ (bad-whitespace)
desc/original/train.py:252:44: C0326: Exactly one space required after comma
        adata=sc.AnnData(data,obs=data.index,var=data.columns)
                                            ^ (bad-whitespace)
desc/original/train.py:254:9: C0326: Exactly one space required around assignment
        x=data.toarray() if issparse(data) else data
         ^ (bad-whitespace)
desc/original/train.py:255:13: C0326: Exactly one space required around assignment
        adata=sc.AnnData(x)
             ^ (bad-whitespace)
desc/original/train.py:258:12: C0326: Exactly one space required around assignment
        dims=getdims(adata.shape)
            ^ (bad-whitespace)
desc/original/train.py:260:36: C0326: Exactly one space required after comma
    if isinstance(louvain_resolution,float) or isinstance(louvain_resolution,int):
                                    ^ (bad-whitespace)
desc/original/train.py:260:76: C0326: Exactly one space required after comma
    if isinstance(louvain_resolution,float) or isinstance(louvain_resolution,int):
                                                                            ^ (bad-whitespace)
desc/original/train.py:261:26: C0326: Exactly one space required around assignment
        louvain_resolution=[float(louvain_resolution)]
                          ^ (bad-whitespace)
desc/original/train.py:262:39: C0326: Exactly one space required after comma
    elif  isinstance(louvain_resolution,str):
                                       ^ (bad-whitespace)
desc/original/train.py:263:26: C0326: Exactly one space required around assignment
        louvain_resolution=list(map(float,louvain_resolution.split(",")))
                          ^ (bad-whitespace)
desc/original/train.py:263:41: C0326: Exactly one space required after comma
        louvain_resolution=list(map(float,louvain_resolution.split(",")))
                                         ^ (bad-whitespace)
desc/original/train.py:265:0: C0301: Line too long (144/100) (line-too-long)
desc/original/train.py:265:44: C0326: Exactly one space required after comma
        assert isinstance(louvain_resolution,list),'louvain_resolution must be either a string with spearator "," or a list like [1.0,2.0,3.0] '
                                            ^ (bad-whitespace)
desc/original/train.py:265:50: C0326: Exactly one space required after comma
        assert isinstance(louvain_resolution,list),'louvain_resolution must be either a string with spearator "," or a list like [1.0,2.0,3.0] '
                                                  ^ (bad-whitespace)
desc/original/train.py:266:26: C0326: Exactly one space required around assignment
        louvain_resolution=list(map(float,louvain_resolution))
                          ^ (bad-whitespace)
desc/original/train.py:266:41: C0326: Exactly one space required after comma
        louvain_resolution=list(map(float,louvain_resolution))
                                         ^ (bad-whitespace)
desc/original/train.py:268:14: C0326: Exactly one space required around assignment
    time_start=time()
              ^ (bad-whitespace)
desc/original/train.py:269:11: C0326: Exactly one space required after comma
    for ith,resolution in enumerate(louvain_resolution):
           ^ (bad-whitespace)
desc/original/train.py:270:44: C0326: Exactly one space required after comma
        print("Start to process resolution=",str(resolution))
                                            ^ (bad-whitespace)
desc/original/train.py:271:22: C0326: Exactly one space required around assignment
        use_ae_weights=use_ae_weights if ith==0 else True
                      ^ (bad-whitespace)
desc/original/train.py:271:44: C0326: Exactly one space required around comparison
        use_ae_weights=use_ae_weights if ith==0 else True
                                            ^^ (bad-whitespace)
desc/original/train.py:272:11: C0326: Exactly one space required around assignment
        res=train_single(data=data,
           ^ (bad-whitespace)
desc/original/train.py:273:0: C0330: Wrong continued indentation (add 13 spaces).
            dims=dims,
            ^            | (bad-continuation)
desc/original/train.py:274:0: C0330: Wrong continued indentation (add 13 spaces).
            alpha=alpha,
            ^            | (bad-continuation)
desc/original/train.py:275:0: C0330: Wrong continued indentation (add 13 spaces).
            tol=tol,
            ^            | (bad-continuation)
desc/original/train.py:276:0: C0330: Wrong continued indentation (add 13 spaces).
            init=init,
            ^            | (bad-continuation)
desc/original/train.py:277:0: C0330: Wrong continued indentation (add 13 spaces).
            n_clusters=n_clusters,
            ^            | (bad-continuation)
desc/original/train.py:278:0: C0330: Wrong continued indentation (add 13 spaces).
            louvain_resolution=resolution,
            ^            | (bad-continuation)
desc/original/train.py:279:0: C0330: Wrong continued indentation (add 13 spaces).
            n_neighbors=n_neighbors,
            ^            | (bad-continuation)
desc/original/train.py:280:0: C0330: Wrong continued indentation (add 13 spaces).
            pretrain_epochs=pretrain_epochs,
            ^            | (bad-continuation)
desc/original/train.py:281:0: C0330: Wrong continued indentation (add 13 spaces).
            batch_size=batch_size,
            ^            | (bad-continuation)
desc/original/train.py:282:0: C0330: Wrong continued indentation (add 13 spaces).
            activation=activation,
            ^            | (bad-continuation)
desc/original/train.py:283:0: C0330: Wrong continued indentation (add 13 spaces).
            actincenter=actincenter,
            ^            | (bad-continuation)
desc/original/train.py:284:0: C0330: Wrong continued indentation (add 13 spaces).
            drop_rate_SAE=drop_rate_SAE,
            ^            | (bad-continuation)
desc/original/train.py:285:0: C0330: Wrong continued indentation (add 13 spaces).
            is_stacked=is_stacked,
            ^            | (bad-continuation)
desc/original/train.py:286:0: C0330: Wrong continued indentation (add 13 spaces).
            use_earlyStop=use_earlyStop,
            ^            | (bad-continuation)
desc/original/train.py:287:0: C0330: Wrong continued indentation (add 13 spaces).
            use_ae_weights=use_ae_weights,
            ^            | (bad-continuation)
desc/original/train.py:288:0: C0330: Wrong continued indentation (add 13 spaces).
	    save_encoder_weights=save_encoder_weights,
            ^            | (bad-continuation)
desc/original/train.py:289:0: C0330: Wrong continued indentation (add 13 spaces).
            save_dir=save_dir,
            ^            | (bad-continuation)
desc/original/train.py:290:0: C0330: Wrong continued indentation (add 13 spaces).
            max_iter=max_iter,
            ^            | (bad-continuation)
desc/original/train.py:291:0: C0330: Wrong continued indentation (add 13 spaces).
            epochs_fit=epochs_fit, 
            ^            | (bad-continuation)
desc/original/train.py:291:34: C0303: Trailing whitespace (trailing-whitespace)
desc/original/train.py:292:0: C0330: Wrong continued indentation (add 13 spaces).
            num_Cores=num_Cores,
            ^            | (bad-continuation)
desc/original/train.py:293:0: C0330: Wrong continued indentation (add 13 spaces).
            use_GPU=use_GPU,
            ^            | (bad-continuation)
desc/original/train.py:294:0: C0330: Wrong continued indentation (add 13 spaces).
            random_seed=random_seed,
            ^            | (bad-continuation)
desc/original/train.py:295:0: C0330: Wrong continued indentation (add 13 spaces).
            verbose=verbose,
            ^            | (bad-continuation)
desc/original/train.py:296:0: C0330: Wrong continued indentation (add 13 spaces).
	    do_tsne=do_tsne)
            ^            | (bad-continuation)
desc/original/train.py:298:12: C0326: Exactly one space required around assignment
        data=res
            ^ (bad-whitespace)
desc/original/train.py:299:47: C0326: Exactly one space required after comma
    print("The run time for all resolution is ",time()-time_start)
                                               ^ (bad-whitespace)
desc/original/train.py:303:11: C0326: Exactly one space required around comparison
if __name__=='__main__':
           ^^ (bad-whitespace)
desc/original/train.py:305:0: C0301: Line too long (136/100) (line-too-long)
desc/original/train.py:305:80: C0326: Exactly one space required after comma
    parser = argparse.ArgumentParser(description='just for simple test train.py',formatter_class=argparse.ArgumentDefaultsHelpFormatter)
                                                                                ^ (bad-whitespace)
desc/original/train.py:310:5: C0326: Exactly one space required after comma
    x,y=load_mnist(sample_size=10000,seed=0)
     ^ (bad-whitespace)
desc/original/train.py:310:7: C0326: Exactly one space required around assignment
    x,y=load_mnist(sample_size=10000,seed=0)
       ^ (bad-whitespace)
desc/original/train.py:310:36: C0326: Exactly one space required after comma
    x,y=load_mnist(sample_size=10000,seed=0)
                                    ^ (bad-whitespace)
desc/original/train.py:311:10: C0326: No space allowed before bracket
    print ('MNIST use ', x.shape)
          ^ (bad-whitespace)
desc/original/train.py:312:8: C0326: Exactly one space required around assignment
    dims=[x.shape[-1],64,32]
        ^ (bad-whitespace)
desc/original/train.py:312:21: C0326: Exactly one space required after comma
    dims=[x.shape[-1],64,32]
                     ^ (bad-whitespace)
desc/original/train.py:312:24: C0326: Exactly one space required after comma
    dims=[x.shape[-1],64,32]
                        ^ (bad-whitespace)
desc/original/train.py:313:9: C0326: Exactly one space required around assignment
    adata=train_single(x,dims,louvain_resolution=0.4,use_GPU=True)
         ^ (bad-whitespace)
desc/original/train.py:313:24: C0326: Exactly one space required after comma
    adata=train_single(x,dims,louvain_resolution=0.4,use_GPU=True)
                        ^ (bad-whitespace)
desc/original/train.py:313:29: C0326: Exactly one space required after comma
    adata=train_single(x,dims,louvain_resolution=0.4,use_GPU=True)
                             ^ (bad-whitespace)
desc/original/train.py:313:52: C0326: Exactly one space required after comma
    adata=train_single(x,dims,louvain_resolution=0.4,use_GPU=True)
                                                    ^ (bad-whitespace)
desc/original/train.py:317:9: C0326: Exactly one space required around assignment
    adata=sc.read("data/paul15/paul15.h5ad")
         ^ (bad-whitespace)
desc/original/train.py:318:28: C0326: Exactly one space required after comma
    sc.pp.filter_cells(adata,min_genes=10)
                            ^ (bad-whitespace)
desc/original/train.py:319:34: C0326: Exactly one space required after comma
    sc.pp.normalize_per_cell(adata,counts_per_cell_after=1e4)
                                  ^ (bad-whitespace)
desc/original/train.py:321:28: C0326: Exactly one space required after comma
    sc.pp.filter_genes(adata,min_cells=20)
                            ^ (bad-whitespace)
desc/original/train.py:323:0: C0301: Line too long (115/100) (line-too-long)
desc/original/train.py:324:0: C0301: Line too long (116/100) (line-too-long)
desc/original/train.py:326:0: C0303: Trailing whitespace (trailing-whitespace)
desc/original/train.py:327:0: C0303: Trailing whitespace (trailing-whitespace)
desc/original/train.py:328:0: C0303: Trailing whitespace (trailing-whitespace)
desc/original/train.py:1:0: C0114: Missing module docstring (missing-module-docstring)
desc/original/train.py:21:0: C0410: Multiple imports on one line (os, math) (multiple-imports)
desc/original/train.py:21:0: C0413: Import "import os, math" should be placed at the top of the module (wrong-import-position)
desc/original/train.py:21:0: C0413: Import "import os, math" should be placed at the top of the module (wrong-import-position)
desc/original/train.py:22:0: C0413: Import "from time import time" should be placed at the top of the module (wrong-import-position)
desc/original/train.py:23:0: C0413: Import "import random" should be placed at the top of the module (wrong-import-position)
desc/original/train.py:24:0: C0413: Import "import numpy as np" should be placed at the top of the module (wrong-import-position)
desc/original/train.py:25:0: E0401: Unable to import 'pandas' (import-error)
desc/original/train.py:25:0: C0413: Import "import pandas as pd" should be placed at the top of the module (wrong-import-position)
desc/original/train.py:26:0: E0401: Unable to import 'tensorflow' (import-error)
desc/original/train.py:26:0: C0413: Import "import tensorflow as tf" should be placed at the top of the module (wrong-import-position)
desc/original/train.py:27:0: E0401: Unable to import 'anndata' (import-error)
desc/original/train.py:27:0: C0413: Import "from anndata import AnnData" should be placed at the top of the module (wrong-import-position)
desc/original/train.py:28:0: E0401: Unable to import 'scanpy.api' (import-error)
desc/original/train.py:28:0: C0413: Import "import scanpy.api as sc" should be placed at the top of the module (wrong-import-position)
desc/original/train.py:29:0: E0401: Unable to import 'keras' (import-error)
desc/original/train.py:29:0: C0413: Import "from keras import backend as K" should be placed at the top of the module (wrong-import-position)
desc/original/train.py:30:0: E0401: Unable to import 'scipy.sparse' (import-error)
desc/original/train.py:30:0: C0413: Import "from scipy.sparse import issparse" should be placed at the top of the module (wrong-import-position)
desc/original/train.py:31:0: E0401: Unable to import 'keras' (import-error)
desc/original/train.py:31:0: C0413: Import "import keras" should be placed at the top of the module (wrong-import-position)
desc/original/train.py:34:0: W0702: No exception type(s) specified (bare-except)
desc/original/train.py:33:4: W0401: Wildcard import network (wildcard-import)
desc/original/train.py:35:4: W0401: Wildcard import network (wildcard-import)
desc/original/train.py:49:12: W0621: Redefining name 'x' from outer scope (line 33) (redefined-outer-name)
desc/original/train.py:56:8: W0621: Redefining name 'dims' from outer scope (line 33) (redefined-outer-name)
desc/original/train.py:49:0: C0103: Argument name "x" doesn't conform to snake_case naming style (invalid-name)
desc/original/train.py:73:22: W0621: Redefining name 'dims' from outer scope (line 33) (redefined-outer-name)
desc/original/train.py:76:8: W0621: Redefining name 'init' from outer scope (line 33) (redefined-outer-name)
desc/original/train.py:99:8: W0621: Redefining name 'adata' from outer scope (line 33) (redefined-outer-name)
desc/original/train.py:126:4: W0621: Redefining name 'desc' from outer scope (line 33) (redefined-outer-name)
desc/original/train.py:147:4: W0621: Redefining name 'Embeded_z' from outer scope (line 33) (redefined-outer-name)
desc/original/train.py:147:14: W0621: Redefining name 'q_pred' from outer scope (line 33) (redefined-outer-name)
desc/original/train.py:153:4: W0621: Redefining name 'y_pred' from outer scope (line 33) (redefined-outer-name)
desc/original/train.py:73:0: C0103: Argument name "drop_rate_SAE" doesn't conform to snake_case naming style (invalid-name)
desc/original/train.py:73:0: C0103: Argument name "use_earlyStop" doesn't conform to snake_case naming style (invalid-name)
desc/original/train.py:73:0: C0103: Argument name "num_Cores" doesn't conform to snake_case naming style (invalid-name)
desc/original/train.py:73:0: C0103: Argument name "use_GPU" doesn't conform to snake_case naming style (invalid-name)
desc/original/train.py:73:0: C0116: Missing function or method docstring (missing-function-docstring)
desc/original/train.py:73:0: R0913: Too many arguments (25/5) (too-many-arguments)
desc/original/train.py:73:0: R0914: Too many local variables (33/15) (too-many-locals)
desc/original/train.py:111:4: C0415: Import outside toplevel (multiprocessing) (import-outside-toplevel)
desc/original/train.py:147:4: C0103: Variable name "Embeded_z" doesn't conform to snake_case naming style (invalid-name)
desc/original/train.py:168:15: W0621: Redefining name 'dims' from outer scope (line 33) (redefined-outer-name)
desc/original/train.py:171:8: W0621: Redefining name 'init' from outer scope (line 33) (redefined-outer-name)
desc/original/train.py:250:8: W0621: Redefining name 'adata' from outer scope (line 33) (redefined-outer-name)
desc/original/train.py:254:8: W0621: Redefining name 'x' from outer scope (line 33) (redefined-outer-name)
desc/original/train.py:168:0: W0102: Dangerous default value [] as argument (dangerous-default-value)
desc/original/train.py:168:0: C0103: Argument name "drop_rate_SAE" doesn't conform to snake_case naming style (invalid-name)
desc/original/train.py:168:0: C0103: Argument name "use_earlyStop" doesn't conform to snake_case naming style (invalid-name)
desc/original/train.py:168:0: C0103: Argument name "num_Cores" doesn't conform to snake_case naming style (invalid-name)
desc/original/train.py:168:0: C0103: Argument name "use_GPU" doesn't conform to snake_case naming style (invalid-name)
desc/original/train.py:168:0: R0913: Too many arguments (25/5) (too-many-arguments)
desc/original/train.py:168:0: R0914: Too many local variables (31/15) (too-many-locals)
desc/original/train.py:254:8: C0103: Variable name "x" doesn't conform to snake_case naming style (invalid-name)
desc/original/train.py:260:7: R1701: Consider merging these isinstance calls to isinstance(louvain_resolution, (float, int)) (consider-merging-isinstance)
desc/original/train.py:309:4: E0401: Unable to import 'load_mnist' (import-error)
desc/original/train.py:33:4: W0614: Unused import y from wildcard import (unused-wildcard-import)
desc/original/train.py:33:4: W0614: Unused import nx from wildcard import (unused-wildcard-import)
desc/original/train.py:33:4: W0614: Unused import plt from wildcard import (unused-wildcard-import)
desc/original/train.py:33:4: W0614: Unused import ClusteringLayer from wildcard import (unused-wildcard-import)
desc/original/train.py:33:4: W0614: Unused import init from wildcard import (unused-wildcard-import)
desc/original/train.py:33:4: W0614: Unused import desc from wildcard import (unused-wildcard-import)
desc/original/train.py:33:4: W0614: Unused import t0 from wildcard import (unused-wildcard-import)
desc/original/train.py:33:4: W0614: Unused import Embeded_z from wildcard import (unused-wildcard-import)
desc/original/train.py:33:4: W0614: Unused import q_pred from wildcard import (unused-wildcard-import)
desc/original/train.py:33:4: W0614: Unused import y_pred from wildcard import (unused-wildcard-import)
desc/original/train.py:33:4: W0614: Unused import obs_info from wildcard import (unused-wildcard-import)
desc/original/train.py:33:4: W0614: Unused import Layer from wildcard import (unused-wildcard-import)
desc/original/train.py:33:4: W0614: Unused import InputSpec from wildcard import (unused-wildcard-import)
desc/original/train.py:33:4: W0614: Unused import TensorBoard from wildcard import (unused-wildcard-import)
desc/original/train.py:33:4: W0614: Unused import ModelCheckpoint from wildcard import (unused-wildcard-import)
desc/original/train.py:33:4: W0614: Unused import EarlyStopping from wildcard import (unused-wildcard-import)
desc/original/train.py:33:4: W0614: Unused import ReduceLROnPlateau from wildcard import (unused-wildcard-import)
desc/original/train.py:33:4: W0614: Unused import History from wildcard import (unused-wildcard-import)
desc/original/train.py:33:4: W0614: Unused import Dense from wildcard import (unused-wildcard-import)
desc/original/train.py:33:4: W0614: Unused import Input from wildcard import (unused-wildcard-import)
desc/original/train.py:33:4: W0614: Unused import Model from wildcard import (unused-wildcard-import)
desc/original/train.py:33:4: W0614: Unused import load_model from wildcard import (unused-wildcard-import)
desc/original/train.py:33:4: W0614: Unused import callbacks from wildcard import (unused-wildcard-import)
desc/original/train.py:33:4: W0614: Unused import VarianceScaling from wildcard import (unused-wildcard-import)
desc/original/train.py:33:4: W0614: Unused import KMeans from wildcard import (unused-wildcard-import)
desc/original/train.py:33:4: W0614: Unused import natsorted from wildcard import (unused-wildcard-import)
desc/original/train.py:33:4: W0614: Unused import SAE from wildcard import (unused-wildcard-import)
************* Module desc.original.test
desc/original/test.py:15:9: C0326: Exactly one space required around assignment
    adata=sc.read("data/paul15/paul15.h5ad")
         ^ (bad-whitespace)
desc/original/test.py:16:28: C0326: Exactly one space required after comma
    sc.pp.filter_cells(adata,min_genes=10)
                            ^ (bad-whitespace)
desc/original/test.py:17:34: C0326: Exactly one space required after comma
    sc.pp.normalize_per_cell(adata,counts_per_cell_after=1e4)
                                  ^ (bad-whitespace)
desc/original/test.py:18:28: C0326: Exactly one space required after comma
    sc.pp.filter_genes(adata,min_cells=20)
                            ^ (bad-whitespace)
desc/original/test.py:19:39: C0326: Exactly one space required after comma
    sc.pp.filter_genes_dispersion(adata,n_top_genes=1000)
                                       ^ (bad-whitespace)
desc/original/test.py:21:21: C0326: Exactly one space required after comma
    sc.pp.scale(adata,zero_center=True,max_value=False)
                     ^ (bad-whitespace)
desc/original/test.py:21:38: C0326: Exactly one space required after comma
    sc.pp.scale(adata,zero_center=True,max_value=False)
                                      ^ (bad-whitespace)
desc/original/test.py:27:9: C0326: Exactly one space required around assignment
    adata=paul_test()
         ^ (bad-whitespace)
desc/original/test.py:29:0: C0303: Trailing whitespace (trailing-whitespace)
desc/original/test.py:30:9: C0326: Exactly one space required around assignment
    adata=train(adata,louvain_resolution=0.4,use_GPU=True)
         ^ (bad-whitespace)
desc/original/test.py:30:21: C0326: Exactly one space required after comma
    adata=train(adata,louvain_resolution=0.4,use_GPU=True)
                     ^ (bad-whitespace)
desc/original/test.py:30:44: C0326: Exactly one space required after comma
    adata=train(adata,louvain_resolution=0.4,use_GPU=True)
                                            ^ (bad-whitespace)
desc/original/test.py:31:0: C0303: Trailing whitespace (trailing-whitespace)
desc/original/test.py:33:0: C0303: Trailing whitespace (trailing-whitespace)
desc/original/test.py:1:0: C0114: Missing module docstring (missing-module-docstring)
desc/original/test.py:4:0: C0413: Import "import numpy as np" should be placed at the top of the module (wrong-import-position)
desc/original/test.py:5:0: E0401: Unable to import 'pandas' (import-error)
desc/original/test.py:5:0: C0413: Import "import pandas as pd" should be placed at the top of the module (wrong-import-position)
desc/original/test.py:6:0: E0401: Unable to import 'scanpy.api' (import-error)
desc/original/test.py:6:0: C0413: Import "import scanpy.api as sc" should be placed at the top of the module (wrong-import-position)
desc/original/test.py:14:0: C0116: Missing function or method docstring (missing-function-docstring)
desc/original/test.py:14:14: W0613: Unused argument 'n_top_gene' (unused-argument)
desc/original/test.py:25:0: C0116: Missing function or method docstring (missing-function-docstring)
desc/original/test.py:28:4: E0401: Unable to import 'train' (import-error)
desc/original/test.py:28:4: C0415: Import outside toplevel (train.train) (import-outside-toplevel)
************* Module desc.datasets.__init__
desc/datasets/__init__.py:23:0: C0303: Trailing whitespace (trailing-whitespace)
desc/datasets/__init__.py:25:0: C0305: Trailing newlines (trailing-newlines)
************* Module desc.datasets
desc/datasets/__init__.py:1:0: C0114: Missing module docstring (missing-module-docstring)
desc/datasets/__init__.py:2:0: E0401: Unable to import 'anndata' (import-error)
desc/datasets/__init__.py:5:0: C0116: Missing function or method docstring (missing-function-docstring)
desc/datasets/__init__.py:10:0: C0116: Missing function or method docstring (missing-function-docstring)
desc/datasets/__init__.py:15:0: C0116: Missing function or method docstring (missing-function-docstring)
desc/datasets/__init__.py:15:0: R1711: Useless return at end of function or method (useless-return)
************* Module desc.utilities.__init__
desc/utilities/__init__.py:12:0: C0305: Trailing newlines (trailing-newlines)
************* Module desc.utilities
desc/utilities/__init__.py:1:0: C0114: Missing module docstring (missing-module-docstring)
desc/utilities/__init__.py:2:0: E0401: Unable to import 'anndata' (import-error)
desc/utilities/__init__.py:3:0: E0401: Unable to import 'anndata.utils' (import-error)
************* Module desc.models.network
desc/models/network.py:2:0: C0301: Line too long (114/100) (line-too-long)
desc/models/network.py:22:90: C0326: Exactly one space required after comma
from keras.callbacks import TensorBoard, ModelCheckpoint, EarlyStopping, ReduceLROnPlateau,History
                                                                                          ^ (bad-whitespace)
desc/models/network.py:24:30: C0326: Exactly one space required after comma
from keras.models import Model,load_model
                              ^ (bad-whitespace)
desc/models/network.py:36:77: C0303: Trailing whitespace (trailing-whitespace)
desc/models/network.py:39:44: C0326: Exactly one space required around comparison
tf.set_random_seed(201809) if tf.__version__<="2.0" else tf.random.set_seed(201809)
                                            ^^ (bad-whitespace)
desc/models/network.py:45:0: C0301: Line too long (120/100) (line-too-long)
desc/models/network.py:54:0: C0301: Line too long (120/100) (line-too-long)
desc/models/network.py:75:0: C0301: Line too long (116/100) (line-too-long)
desc/models/network.py:87:0: C0301: Line too long (120/100) (line-too-long)
desc/models/network.py:89:0: C0301: Line too long (111/100) (line-too-long)
desc/models/network.py:92:16: C0303: Trailing whitespace (trailing-whitespace)
desc/models/network.py:105:35: C0326: Exactly one space required after comma
        super().__init__(n_clusters,weights,alpha,**kwargs)
                                   ^ (bad-whitespace)
desc/models/network.py:105:43: C0326: Exactly one space required after comma
        super().__init__(n_clusters,weights,alpha,**kwargs)
                                           ^ (bad-whitespace)
desc/models/network.py:105:49: C0326: Exactly one space required after comma
        super().__init__(n_clusters,weights,alpha,**kwargs)
                                                 ^ (bad-whitespace)
desc/models/network.py:106:0: C0303: Trailing whitespace (trailing-whitespace)
desc/models/network.py:107:17: C0326: Exactly one space required after comma
    def call(self,inputs,**kwargs):
                 ^ (bad-whitespace)
desc/models/network.py:107:24: C0326: Exactly one space required after comma
    def call(self,inputs,**kwargs):
                        ^ (bad-whitespace)
desc/models/network.py:108:13: C0326: Exactly one space required around assignment
        sigma=1.0
             ^ (bad-whitespace)
desc/models/network.py:109:0: C0301: Line too long (102/100) (line-too-long)
desc/models/network.py:109:9: C0326: Exactly one space required around assignment
        q=K.sum(K.exp(-K.square(K.expand_dims(inputs,axis=1)-self.clusters)/(2.0*sigma*sigma)),axis=2)
         ^ (bad-whitespace)
desc/models/network.py:109:52: C0326: Exactly one space required after comma
        q=K.sum(K.exp(-K.square(K.expand_dims(inputs,axis=1)-self.clusters)/(2.0*sigma*sigma)),axis=2)
                                                    ^ (bad-whitespace)
desc/models/network.py:109:94: C0326: Exactly one space required after comma
        q=K.sum(K.exp(-K.square(K.expand_dims(inputs,axis=1)-self.clusters)/(2.0*sigma*sigma)),axis=2)
                                                                                              ^ (bad-whitespace)
desc/models/network.py:110:9: C0326: Exactly one space required around assignment
        q=K.transpose(K.transpose(q)/K.sum(q,axis=1))
         ^ (bad-whitespace)
desc/models/network.py:110:44: C0326: Exactly one space required after comma
        q=K.transpose(K.transpose(q)/K.sum(q,axis=1))
                                            ^ (bad-whitespace)
desc/models/network.py:117:62: C0303: Trailing whitespace (trailing-whitespace)
desc/models/network.py:119:0: C0330: Wrong continued indentation (remove 0 space).
		 tol=0.005,
                 | (bad-continuation)
desc/models/network.py:121:65: C0303: Trailing whitespace (trailing-whitespace)
desc/models/network.py:122:41: C0303: Trailing whitespace (trailing-whitespace)
desc/models/network.py:124:67: C0303: Trailing whitespace (trailing-whitespace)
desc/models/network.py:127:0: C0330: Wrong continued indentation (remove 0 space).
		 activation='relu',
                 | (bad-continuation)
desc/models/network.py:128:0: C0301: Line too long (110/100) (line-too-long)
desc/models/network.py:128:110: C0303: Trailing whitespace (trailing-whitespace)
desc/models/network.py:133:0: C0330: Wrong continued indentation (remove 0 space).
		 save_encoder_weights=False,
                 | (bad-continuation)
desc/models/network.py:137:0: C0301: Line too long (248/100) (line-too-long)
desc/models/network.py:144:14: C0326: Exactly one space required around assignment
        self.x=x #feature n*p, n:number of cells, p: number of genes
              ^ (bad-whitespace)
desc/models/network.py:146:16: C0326: Exactly one space required around assignment
        self.tol=tol
                ^ (bad-whitespace)
desc/models/network.py:147:17: C0326: Exactly one space required around assignment
        self.init=init
                 ^ (bad-whitespace)
desc/models/network.py:148:56: C0303: Trailing whitespace (trailing-whitespace)
desc/models/network.py:150:23: C0326: Exactly one space required around assignment
        self.is_stacked=is_stacked
                       ^ (bad-whitespace)
desc/models/network.py:151:23: C0326: Exactly one space required around assignment
        self.resolution=louvain_resolution
                       ^ (bad-whitespace)
desc/models/network.py:152:24: C0326: Exactly one space required around assignment
        self.n_neighbors=n_neighbors
                        ^ (bad-whitespace)
desc/models/network.py:153:28: C0326: Exactly one space required around assignment
        self.pretrain_epochs=pretrain_epochs
                            ^ (bad-whitespace)
desc/models/network.py:154:23: C0326: Exactly one space required around assignment
        self.epochs_fit=epochs_fit
                       ^ (bad-whitespace)
desc/models/network.py:155:23: C0326: Exactly one space required around assignment
        self.batch_size=batch_size
                       ^ (bad-whitespace)
desc/models/network.py:156:24: C0326: Exactly one space required around assignment
        self.random_seed=random_seed
                        ^ (bad-whitespace)
desc/models/network.py:157:23: C0326: Exactly one space required around assignment
        self.activation=activation
                       ^ (bad-whitespace)
desc/models/network.py:158:24: C0326: Exactly one space required around assignment
        self.actincenter=actincenter
                        ^ (bad-whitespace)
desc/models/network.py:159:26: C0326: Exactly one space required around assignment
        self.drop_rate_SAE=drop_rate_SAE
                          ^ (bad-whitespace)
desc/models/network.py:160:23: C0326: Exactly one space required around assignment
        self.is_stacked=is_stacked
                       ^ (bad-whitespace)
desc/models/network.py:161:26: C0326: Exactly one space required around assignment
        self.use_earlyStop=use_earlyStop
                          ^ (bad-whitespace)
desc/models/network.py:162:27: C0326: Exactly one space required around assignment
        self.use_ae_weights=use_ae_weights
                           ^ (bad-whitespace)
desc/models/network.py:163:33: C0326: Exactly one space required around assignment
        self.save_encoder_weights=save_encoder_weights
                                 ^ (bad-whitespace)
desc/models/network.py:164:30: C0326: Exactly one space required around assignment
        self.save_encoder_step=save_encoder_step
                              ^ (bad-whitespace)
desc/models/network.py:165:21: C0326: Exactly one space required around assignment
        self.save_dir=save_dir
                     ^ (bad-whitespace)
desc/models/network.py:166:30: C0326: Exactly one space required around assignment
        self.kernel_clustering=kernel_clustering
                              ^ (bad-whitespace)
desc/models/network.py:173:0: C0303: Trailing whitespace (trailing-whitespace)
desc/models/network.py:176:11: C0326: Exactly one space required around assignment
        sae=SAE(dims=self.dims,
           ^ (bad-whitespace)
desc/models/network.py:177:0: C0330: Wrong continued indentation (remove 0 space).
		act=self.activation,
                | (bad-continuation)
desc/models/network.py:185:0: C0330: Wrong continued indentation.
           )
           ^   || (bad-continuation)
desc/models/network.py:188:31: C0303: Trailing whitespace (trailing-whitespace)
desc/models/network.py:189:0: C0301: Line too long (114/100) (line-too-long)
desc/models/network.py:189:95: C0326: Exactly one space required after comma
            print("Checking whether %s  exists in the directory"%str(os.path.join(self.save_dir,'ae_weights.h5')))
                                                                                               ^ (bad-whitespace)
desc/models/network.py:193:34: C0326: Exactly one space required after comma
                    sae.fit(self.x,epochs=self.pretrain_epochs)
                                  ^ (bad-whitespace)
desc/models/network.py:195:35: C0326: Exactly one space required after comma
                    sae.fit2(self.x,epochs=self.pretrain_epochs)
                                   ^ (bad-whitespace)
desc/models/network.py:196:32: C0326: Exactly one space required around assignment
                self.autoencoder=sae.autoencoders
                                ^ (bad-whitespace)
desc/models/network.py:197:28: C0326: Exactly one space required around assignment
                self.encoder=sae.encoder
                            ^ (bad-whitespace)
desc/models/network.py:199:72: C0326: Exactly one space required after comma
                sae.autoencoders.load_weights(os.path.join(self.save_dir,"ae_weights.h5"))
                                                                        ^ (bad-whitespace)
desc/models/network.py:200:32: C0326: Exactly one space required around assignment
                self.autoencoder=sae.autoencoders
                                ^ (bad-whitespace)
desc/models/network.py:201:28: C0326: Exactly one space required around assignment
                self.encoder=sae.encoder
                            ^ (bad-whitespace)
desc/models/network.py:205:30: C0326: Exactly one space required after comma
                sae.fit(self.x,epochs=self.pretrain_epochs)
                              ^ (bad-whitespace)
desc/models/network.py:207:31: C0326: Exactly one space required after comma
                sae.fit2(self.x,epochs=self.pretrain_epochs)
                               ^ (bad-whitespace)
desc/models/network.py:208:28: C0326: Exactly one space required around assignment
            self.autoencoder=sae.autoencoders
                            ^ (bad-whitespace)
desc/models/network.py:209:24: C0326: Exactly one space required around assignment
            self.encoder=sae.encoder
                        ^ (bad-whitespace)
desc/models/network.py:210:0: C0303: Trailing whitespace (trailing-whitespace)
desc/models/network.py:213:56: C0326: Exactly one space required after comma
        if not os.path.isfile(os.path.join(self.save_dir,"ae_weights.h5")):
                                                        ^ (bad-whitespace)
desc/models/network.py:214:68: C0326: Exactly one space required after comma
            self.autoencoder.save_weights(os.path.join(self.save_dir,'ae_weights.h5'))
                                                                    ^ (bad-whitespace)
desc/models/network.py:215:64: C0326: Exactly one space required after comma
            self.encoder.save_weights(os.path.join(self.save_dir,'encoder_weights.h5'))
                                                                ^ (bad-whitespace)
desc/models/network.py:218:56: C0326: Exactly one space required after comma
        self.autoencoder.save(os.path.join(self.save_dir,"autoencoder_model.h5"))
                                                        ^ (bad-whitespace)
desc/models/network.py:220:16: C0326: Exactly one space required around assignment
        features=self.extract_features(self.x)
                ^ (bad-whitespace)
desc/models/network.py:221:16: C0326: Exactly one space required around assignment
        features=np.asarray(features)
                ^ (bad-whitespace)
desc/models/network.py:225:0: C0301: Line too long (109/100) (line-too-long)
desc/models/network.py:235:0: C0301: Line too long (103/100) (line-too-long)
desc/models/network.py:238:18: C0326: Exactly one space required around assignment
            adata0=sc.AnnData(features)
                  ^ (bad-whitespace)
desc/models/network.py:239:30: C0326: Exactly one space required around comparison
            if adata0.shape[0]>200000:
                              ^ (bad-whitespace)
desc/models/network.py:240:57: C0303: Trailing whitespace (trailing-whitespace)
desc/models/network.py:241:85: C0303: Trailing whitespace (trailing-whitespace)
desc/models/network.py:241:22: C0326: Exactly one space required around assignment
                adata0=adata0[np.random.choice(adata0.shape[0],200000,replace=False)] 
                      ^ (bad-whitespace)
desc/models/network.py:241:62: C0326: Exactly one space required after comma
                adata0=adata0[np.random.choice(adata0.shape[0],200000,replace=False)] 
                                                              ^ (bad-whitespace)
desc/models/network.py:241:69: C0326: Exactly one space required after comma
                adata0=adata0[np.random.choice(adata0.shape[0],200000,replace=False)] 
                                                                     ^ (bad-whitespace)
desc/models/network.py:242:64: C0326: Exactly one space required after comma
            sc.pp.neighbors(adata0, n_neighbors=self.n_neighbors,use_rep="X")
                                                                ^ (bad-whitespace)
desc/models/network.py:243:32: C0326: Exactly one space required after comma
            sc.tl.louvain(adata0,resolution=self.resolution)
                                ^ (bad-whitespace)
desc/models/network.py:244:23: C0326: Exactly one space required around assignment
            Y_pred_init=adata0.obs['louvain']
                       ^ (bad-whitespace)
desc/models/network.py:245:26: C0326: Exactly one space required around assignment
            self.init_pred=np.asarray(Y_pred_init,dtype=int)
                          ^ (bad-whitespace)
desc/models/network.py:245:49: C0326: Exactly one space required after comma
            self.init_pred=np.asarray(Y_pred_init,dtype=int)
                                                 ^ (bad-whitespace)
desc/models/network.py:246:49: C0326: Exactly one space required around comparison
            if np.unique(self.init_pred).shape[0]<=1:
                                                 ^^ (bad-whitespace)
desc/models/network.py:249:0: C0301: Line too long (153/100) (line-too-long)
desc/models/network.py:250:20: C0326: Exactly one space required around assignment
            features=pd.DataFrame(adata0.X,index=np.arange(0,adata0.shape[0]))
                    ^ (bad-whitespace)
desc/models/network.py:250:42: C0326: Exactly one space required after comma
            features=pd.DataFrame(adata0.X,index=np.arange(0,adata0.shape[0]))
                                          ^ (bad-whitespace)
desc/models/network.py:250:60: C0326: Exactly one space required after comma
            features=pd.DataFrame(adata0.X,index=np.arange(0,adata0.shape[0]))
                                                            ^ (bad-whitespace)
desc/models/network.py:251:17: C0326: Exactly one space required around assignment
            Group=pd.Series(self.init_pred,index=np.arange(0,adata0.shape[0]),name="Group")
                 ^ (bad-whitespace)
desc/models/network.py:251:42: C0326: Exactly one space required after comma
            Group=pd.Series(self.init_pred,index=np.arange(0,adata0.shape[0]),name="Group")
                                          ^ (bad-whitespace)
desc/models/network.py:251:60: C0326: Exactly one space required after comma
            Group=pd.Series(self.init_pred,index=np.arange(0,adata0.shape[0]),name="Group")
                                                            ^ (bad-whitespace)
desc/models/network.py:251:77: C0326: Exactly one space required after comma
            Group=pd.Series(self.init_pred,index=np.arange(0,adata0.shape[0]),name="Group")
                                                                             ^ (bad-whitespace)
desc/models/network.py:252:24: C0326: Exactly one space required around assignment
            Mergefeature=pd.concat([features,Group],axis=1)
                        ^ (bad-whitespace)
desc/models/network.py:252:44: C0326: Exactly one space required after comma
            Mergefeature=pd.concat([features,Group],axis=1)
                                            ^ (bad-whitespace)
desc/models/network.py:252:51: C0326: Exactly one space required after comma
            Mergefeature=pd.concat([features,Group],axis=1)
                                                   ^ (bad-whitespace)
desc/models/network.py:253:27: C0326: Exactly one space required around assignment
            cluster_centers=np.asarray(Mergefeature.groupby("Group").mean())
                           ^ (bad-whitespace)
desc/models/network.py:254:27: C0326: Exactly one space required around assignment
            self.n_clusters=cluster_centers.shape[0]
                           ^ (bad-whitespace)
desc/models/network.py:255:30: C0326: Exactly one space required around assignment
            self.init_centroid=[cluster_centers]
                              ^ (bad-whitespace)
desc/models/network.py:257:33: C0326: Exactly one space required around comparison
        if self.kernel_clustering=="gaussian":
                                 ^^ (bad-whitespace)
desc/models/network.py:258:0: C0301: Line too long (137/100) (line-too-long)
desc/models/network.py:258:70: C0326: Exactly one space required after comma
            clustering_layer = ClusteringLayerGaussian(self.n_clusters,weights=self.init_centroid,name='clustering')(self.encoder.output)
                                                                      ^ (bad-whitespace)
desc/models/network.py:258:97: C0326: Exactly one space required after comma
            clustering_layer = ClusteringLayerGaussian(self.n_clusters,weights=self.init_centroid,name='clustering')(self.encoder.output)
                                                                                                 ^ (bad-whitespace)
desc/models/network.py:260:0: C0301: Line too long (129/100) (line-too-long)
desc/models/network.py:260:62: C0326: Exactly one space required after comma
            clustering_layer = ClusteringLayer(self.n_clusters,weights=self.init_centroid,name='clustering')(self.encoder.output)
                                                              ^ (bad-whitespace)
desc/models/network.py:260:89: C0326: Exactly one space required after comma
            clustering_layer = ClusteringLayer(self.n_clusters,weights=self.init_centroid,name='clustering')(self.encoder.output)
                                                                                         ^ (bad-whitespace)
desc/models/network.py:262:0: C0303: Trailing whitespace (trailing-whitespace)
desc/models/network.py:264:0: C0303: Trailing whitespace (trailing-whitespace)
desc/models/network.py:283:25: C0326: Exactly one space required after comma
    def fit_on_batch(self,maxiter=1e4,update_interval=200,save_encoder_step=4):
                         ^ (bad-whitespace)
desc/models/network.py:283:37: C0326: Exactly one space required after comma
    def fit_on_batch(self,maxiter=1e4,update_interval=200,save_encoder_step=4):
                                     ^ (bad-whitespace)
desc/models/network.py:283:57: C0326: Exactly one space required after comma
    def fit_on_batch(self,maxiter=1e4,update_interval=200,save_encoder_step=4):
                                                         ^ (bad-whitespace)
desc/models/network.py:284:16: C0326: Exactly one space required around assignment
        save_dir=self.save_dir
                ^ (bad-whitespace)
desc/models/network.py:290:13: C0326: Exactly one space required around assignment
        index=0
             ^ (bad-whitespace)
desc/models/network.py:292:84: C0326: Exactly one space required around comparison
            if self.save_encoder_weights and ite%(save_encoder_step*update_interval)==0:
                                                                                    ^^ (bad-whitespace)
desc/models/network.py:293:0: C0301: Line too long (140/100) (line-too-long)
desc/models/network.py:293:68: C0326: Exactly one space required after comma
                self.encoder.save_weights(os.path.join(self.save_dir,'encoder_weights_resolution_'+str(self.resolution)+"_"+str(ite)+'.h5'))
                                                                    ^ (bad-whitespace)
desc/models/network.py:294:0: C0301: Line too long (103/100) (line-too-long)
desc/models/network.py:294:103: C0303: Trailing whitespace (trailing-whitespace)
desc/models/network.py:295:37: C0326: Exactly one space required after comparison
            if ite % update_interval ==0:
                                     ^^ (bad-whitespace)
desc/models/network.py:296:17: C0326: Exactly one space required around assignment
                q=self.model.predict(self.x,verbose=0)
                 ^ (bad-whitespace)
desc/models/network.py:296:43: C0326: Exactly one space required after comma
                q=self.model.predict(self.x,verbose=0)
                                           ^ (bad-whitespace)
desc/models/network.py:297:17: C0326: Exactly one space required around assignment
                p=self.target_distribution(q)
                 ^ (bad-whitespace)
desc/models/network.py:298:22: C0326: Exactly one space required around assignment
                y_pred=q.argmax(1)
                      ^ (bad-whitespace)
desc/models/network.py:301:0: C0301: Line too long (119/100) (line-too-long)
desc/models/network.py:301:59: C0326: Exactly one space required after comma
                print("The value of delta_label of current",str(ite+1),"th iteration is",delta_label,">= tol",self.tol)
                                                           ^ (bad-whitespace)
desc/models/network.py:301:70: C0326: Exactly one space required after comma
                print("The value of delta_label of current",str(ite+1),"th iteration is",delta_label,">= tol",self.tol)
                                                                      ^ (bad-whitespace)
desc/models/network.py:301:88: C0326: Exactly one space required after comma
                print("The value of delta_label of current",str(ite+1),"th iteration is",delta_label,">= tol",self.tol)
                                                                                        ^ (bad-whitespace)
desc/models/network.py:301:100: C0326: Exactly one space required after comma
                print("The value of delta_label of current",str(ite+1),"th iteration is",delta_label,">= tol",self.tol)
                                                                                                    ^ (bad-whitespace)
desc/models/network.py:301:109: C0326: Exactly one space required after comma
                print("The value of delta_label of current",str(ite+1),"th iteration is",delta_label,">= tol",self.tol)
                                                                                                             ^ (bad-whitespace)
desc/models/network.py:306:0: C0301: Line too long (103/100) (line-too-long)
desc/models/network.py:306:15: C0326: Exactly one space required around assignment
            idx=index_array[index * self.batch_size: min((index+1) * self.batch_size, self.x.shape[0])]
               ^ (bad-whitespace)
desc/models/network.py:310:52: C0326: Exactly one space required after comma
        self.encoder.save(os.path.join(self.save_dir,"encoder_model.h5"))
                                                    ^ (bad-whitespace)
desc/models/network.py:314:10: C0326: Exactly one space required around assignment
        y0=pd.Series(y_pred,dtype='category')
          ^ (bad-whitespace)
desc/models/network.py:314:27: C0326: Exactly one space required after comma
        y0=pd.Series(y_pred,dtype='category')
                           ^ (bad-whitespace)
desc/models/network.py:315:25: C0326: Exactly one space required around assignment
        y0.cat.categories=range(0,len(y0.cat.categories))
                         ^ (bad-whitespace)
desc/models/network.py:315:33: C0326: Exactly one space required after comma
        y0.cat.categories=range(0,len(y0.cat.categories))
                                 ^ (bad-whitespace)
desc/models/network.py:317:9: C0326: Exactly one space required around assignment
        x=y0.value_counts()
         ^ (bad-whitespace)
desc/models/network.py:319:18: C0326: Exactly one space required around assignment
        Embedded_z=self.extract_features(self.x)
                  ^ (bad-whitespace)
desc/models/network.py:320:9: C0326: Exactly one space required around assignment
        q=self.model.predict(self.x,verbose=0)
         ^ (bad-whitespace)
desc/models/network.py:320:35: C0326: Exactly one space required after comma
        q=self.model.predict(self.x,verbose=0)
                                   ^ (bad-whitespace)
desc/models/network.py:321:25: C0326: Exactly one space required after comma
        return Embedded_z,q
                         ^ (bad-whitespace)
desc/models/network.py:323:0: C0303: Trailing whitespace (trailing-whitespace)
desc/models/network.py:324:0: C0303: Trailing whitespace (trailing-whitespace)
desc/models/network.py:325:50: C0326: Exactly one space required after comma
    def fit_on_all(self, maxiter=1e3, epochs_fit=5,save_encoder_step=5): # unsupervised
                                                  ^ (bad-whitespace)
desc/models/network.py:326:16: C0326: Exactly one space required around assignment
        save_dir=self.save_dir
                ^ (bad-whitespace)
desc/models/network.py:332:0: C0301: Line too long (110/100) (line-too-long)
desc/models/network.py:332:66: C0326: Exactly one space required around comparison
            if self.save_encoder_weights and ite%save_encoder_step==0: #save ae_weights for every 5 iterations
                                                                  ^^ (bad-whitespace)
desc/models/network.py:333:0: C0301: Line too long (140/100) (line-too-long)
desc/models/network.py:333:68: C0326: Exactly one space required after comma
                self.encoder.save_weights(os.path.join(self.save_dir,'encoder_weights_resolution_'+str(self.resolution)+"_"+str(ite)+'.h5'))
                                                                    ^ (bad-whitespace)
desc/models/network.py:334:0: C0301: Line too long (103/100) (line-too-long)
desc/models/network.py:346:0: C0301: Line too long (115/100) (line-too-long)
desc/models/network.py:346:55: C0326: Exactly one space required after comma
            print("The value of delta_label of current",str(ite+1),"th iteration is",delta_label,">= tol",self.tol)
                                                       ^ (bad-whitespace)
desc/models/network.py:346:66: C0326: Exactly one space required after comma
            print("The value of delta_label of current",str(ite+1),"th iteration is",delta_label,">= tol",self.tol)
                                                                  ^ (bad-whitespace)
desc/models/network.py:346:84: C0326: Exactly one space required after comma
            print("The value of delta_label of current",str(ite+1),"th iteration is",delta_label,">= tol",self.tol)
                                                                                    ^ (bad-whitespace)
desc/models/network.py:346:96: C0326: Exactly one space required after comma
            print("The value of delta_label of current",str(ite+1),"th iteration is",delta_label,">= tol",self.tol)
                                                                                                ^ (bad-whitespace)
desc/models/network.py:346:105: C0326: Exactly one space required after comma
            print("The value of delta_label of current",str(ite+1),"th iteration is",delta_label,">= tol",self.tol)
                                                                                                         ^ (bad-whitespace)
desc/models/network.py:349:0: C0301: Line too long (105/100) (line-too-long)
desc/models/network.py:349:25: C0326: Exactly one space required around assignment
                callbacks=[EarlyStopping(monitor='loss',min_delta=1e-4,patience=5,verbose=1,mode='auto')]
                         ^ (bad-whitespace)
desc/models/network.py:349:55: C0326: Exactly one space required after comma
                callbacks=[EarlyStopping(monitor='loss',min_delta=1e-4,patience=5,verbose=1,mode='auto')]
                                                       ^ (bad-whitespace)
desc/models/network.py:349:70: C0326: Exactly one space required after comma
                callbacks=[EarlyStopping(monitor='loss',min_delta=1e-4,patience=5,verbose=1,mode='auto')]
                                                                      ^ (bad-whitespace)
desc/models/network.py:349:81: C0326: Exactly one space required after comma
                callbacks=[EarlyStopping(monitor='loss',min_delta=1e-4,patience=5,verbose=1,mode='auto')]
                                                                                 ^ (bad-whitespace)
desc/models/network.py:349:91: C0326: Exactly one space required after comma
                callbacks=[EarlyStopping(monitor='loss',min_delta=1e-4,patience=5,verbose=1,mode='auto')]
                                                                                           ^ (bad-whitespace)
desc/models/network.py:350:0: C0301: Line too long (135/100) (line-too-long)
desc/models/network.py:350:39: C0326: Exactly one space required after comma
                self.model.fit(x=self.x,y=p,epochs=epochs_fit,batch_size=self.batch_size,callbacks=callbacks,shuffle=True,verbose=True)
                                       ^ (bad-whitespace)
desc/models/network.py:350:43: C0326: Exactly one space required after comma
                self.model.fit(x=self.x,y=p,epochs=epochs_fit,batch_size=self.batch_size,callbacks=callbacks,shuffle=True,verbose=True)
                                           ^ (bad-whitespace)
desc/models/network.py:350:61: C0326: Exactly one space required after comma
                self.model.fit(x=self.x,y=p,epochs=epochs_fit,batch_size=self.batch_size,callbacks=callbacks,shuffle=True,verbose=True)
                                                             ^ (bad-whitespace)
desc/models/network.py:350:88: C0326: Exactly one space required after comma
                self.model.fit(x=self.x,y=p,epochs=epochs_fit,batch_size=self.batch_size,callbacks=callbacks,shuffle=True,verbose=True)
                                                                                        ^ (bad-whitespace)
desc/models/network.py:350:108: C0326: Exactly one space required after comma
                self.model.fit(x=self.x,y=p,epochs=epochs_fit,batch_size=self.batch_size,callbacks=callbacks,shuffle=True,verbose=True)
                                                                                                            ^ (bad-whitespace)
desc/models/network.py:350:121: C0326: Exactly one space required after comma
                self.model.fit(x=self.x,y=p,epochs=epochs_fit,batch_size=self.batch_size,callbacks=callbacks,shuffle=True,verbose=True)
                                                                                                                         ^ (bad-whitespace)
desc/models/network.py:352:0: C0301: Line too long (115/100) (line-too-long)
desc/models/network.py:352:39: C0326: Exactly one space required after comma
                self.model.fit(x=self.x,y=p,epochs=epochs_fit,batch_size=self.batch_size,shuffle=True,verbose=True)
                                       ^ (bad-whitespace)
desc/models/network.py:352:43: C0326: Exactly one space required after comma
                self.model.fit(x=self.x,y=p,epochs=epochs_fit,batch_size=self.batch_size,shuffle=True,verbose=True)
                                           ^ (bad-whitespace)
desc/models/network.py:352:61: C0326: Exactly one space required after comma
                self.model.fit(x=self.x,y=p,epochs=epochs_fit,batch_size=self.batch_size,shuffle=True,verbose=True)
                                                             ^ (bad-whitespace)
desc/models/network.py:352:88: C0326: Exactly one space required after comma
                self.model.fit(x=self.x,y=p,epochs=epochs_fit,batch_size=self.batch_size,shuffle=True,verbose=True)
                                                                                        ^ (bad-whitespace)
desc/models/network.py:352:101: C0326: Exactly one space required after comma
                self.model.fit(x=self.x,y=p,epochs=epochs_fit,batch_size=self.batch_size,shuffle=True,verbose=True)
                                                                                                     ^ (bad-whitespace)
desc/models/network.py:354:52: C0326: Exactly one space required after comma
        self.encoder.save(os.path.join(self.save_dir,"encoder_model.h5"))
                                                    ^ (bad-whitespace)
desc/models/network.py:358:0: C0303: Trailing whitespace (trailing-whitespace)
desc/models/network.py:359:10: C0326: Exactly one space required around assignment
        y0=pd.Series(y_pred,dtype='category')
          ^ (bad-whitespace)
desc/models/network.py:359:27: C0326: Exactly one space required after comma
        y0=pd.Series(y_pred,dtype='category')
                           ^ (bad-whitespace)
desc/models/network.py:360:25: C0326: Exactly one space required around assignment
        y0.cat.categories=range(0,len(y0.cat.categories))
                         ^ (bad-whitespace)
desc/models/network.py:360:33: C0326: Exactly one space required after comma
        y0.cat.categories=range(0,len(y0.cat.categories))
                                 ^ (bad-whitespace)
desc/models/network.py:362:9: C0326: Exactly one space required around assignment
        x=y0.value_counts()
         ^ (bad-whitespace)
desc/models/network.py:364:18: C0326: Exactly one space required around assignment
        Embedded_z=self.extract_features(self.x)
                  ^ (bad-whitespace)
desc/models/network.py:365:25: C0326: Exactly one space required after comma
        return Embedded_z,q
                         ^ (bad-whitespace)
desc/models/network.py:367:16: C0326: Exactly one space required after comma
    def fit(self,maxiter=1e4):
                ^ (bad-whitespace)
desc/models/network.py:368:37: C0326: Exactly one space required after comma
        if isinstance(self.epochs_fit,int):
                                     ^ (bad-whitespace)
desc/models/network.py:369:0: C0301: Line too long (125/100) (line-too-long)
desc/models/network.py:369:22: C0326: Exactly one space required after comma
            embedded_z,q=self.fit_on_all(maxiter=maxiter,epochs_fit=self.epochs_fit,save_encoder_step=self.save_encoder_step)
                      ^ (bad-whitespace)
desc/models/network.py:369:24: C0326: Exactly one space required around assignment
            embedded_z,q=self.fit_on_all(maxiter=maxiter,epochs_fit=self.epochs_fit,save_encoder_step=self.save_encoder_step)
                        ^ (bad-whitespace)
desc/models/network.py:369:56: C0326: Exactly one space required after comma
            embedded_z,q=self.fit_on_all(maxiter=maxiter,epochs_fit=self.epochs_fit,save_encoder_step=self.save_encoder_step)
                                                        ^ (bad-whitespace)
desc/models/network.py:369:83: C0326: Exactly one space required after comma
            embedded_z,q=self.fit_on_all(maxiter=maxiter,epochs_fit=self.epochs_fit,save_encoder_step=self.save_encoder_step)
                                                                                   ^ (bad-whitespace)
desc/models/network.py:372:27: C0326: Exactly one space required around assignment
            update_interval=math.ceil(self.epochs_fit*self.x.shape[0]/self.batch_size)
                           ^ (bad-whitespace)
desc/models/network.py:373:0: C0301: Line too long (132/100) (line-too-long)
desc/models/network.py:373:22: C0326: Exactly one space required after comma
            embedded_z,q=self.fit_on_batch(maxiter=maxiter,save_encoder_step=self.save_encoder_step,update_interval=update_interval)
                      ^ (bad-whitespace)
desc/models/network.py:373:24: C0326: Exactly one space required around assignment
            embedded_z,q=self.fit_on_batch(maxiter=maxiter,save_encoder_step=self.save_encoder_step,update_interval=update_interval)
                        ^ (bad-whitespace)
desc/models/network.py:373:58: C0326: Exactly one space required after comma
            embedded_z,q=self.fit_on_batch(maxiter=maxiter,save_encoder_step=self.save_encoder_step,update_interval=update_interval)
                                                          ^ (bad-whitespace)
desc/models/network.py:373:99: C0326: Exactly one space required after comma
            embedded_z,q=self.fit_on_batch(maxiter=maxiter,save_encoder_step=self.save_encoder_step,update_interval=update_interval)
                                                                                                   ^ (bad-whitespace)
desc/models/network.py:374:25: C0326: Exactly one space required after comma
        return embedded_z,q
                         ^ (bad-whitespace)
desc/models/network.py:375:0: C0303: Trailing whitespace (trailing-whitespace)
desc/models/network.py:394:31: C0303: Trailing whitespace (trailing-whitespace)
desc/models/network.py:403:14: C0326: No space allowed before bracket
        print ('MNIST samples', x.shape)
              ^ (bad-whitespace)
desc/models/network.py:404:11: C0326: Exactly one space required around assignment
        id0=np.random.choice(x.shape[0],sample_size,replace=False)
           ^ (bad-whitespace)
desc/models/network.py:404:39: C0326: Exactly one space required after comma
        id0=np.random.choice(x.shape[0],sample_size,replace=False)
                                       ^ (bad-whitespace)
desc/models/network.py:404:51: C0326: Exactly one space required after comma
        id0=np.random.choice(x.shape[0],sample_size,replace=False)
                                                   ^ (bad-whitespace)
desc/models/network.py:407:5: C0326: Exactly one space required after comma
    x,y=load_mnist(sample_size=10000)
     ^ (bad-whitespace)
desc/models/network.py:407:7: C0326: Exactly one space required around assignment
    x,y=load_mnist(sample_size=10000)
       ^ (bad-whitespace)
desc/models/network.py:410:8: C0326: Exactly one space required around assignment
    dims=[x.shape[-1],64,32]
        ^ (bad-whitespace)
desc/models/network.py:410:21: C0326: Exactly one space required after comma
    dims=[x.shape[-1],64,32]
                     ^ (bad-whitespace)
desc/models/network.py:410:24: C0326: Exactly one space required after comma
    dims=[x.shape[-1],64,32]
                        ^ (bad-whitespace)
desc/models/network.py:413:38: C0326: Exactly one space required around assignment
    os.environ["CUDA_VISIBLE_DEVICES"]="-1"
                                      ^ (bad-whitespace)
desc/models/network.py:414:30: C0326: Exactly one space required after comma
    desc = DescModel(dims=dims,x=x,louvain_resolution=0.8,use_ae_weights=True,epochs_fit=0.4)
                              ^ (bad-whitespace)
desc/models/network.py:414:34: C0326: Exactly one space required after comma
    desc = DescModel(dims=dims,x=x,louvain_resolution=0.8,use_ae_weights=True,epochs_fit=0.4)
                                  ^ (bad-whitespace)
desc/models/network.py:414:57: C0326: Exactly one space required after comma
    desc = DescModel(dims=dims,x=x,louvain_resolution=0.8,use_ae_weights=True,epochs_fit=0.4)
                                                         ^ (bad-whitespace)
desc/models/network.py:414:77: C0326: Exactly one space required after comma
    desc = DescModel(dims=dims,x=x,louvain_resolution=0.8,use_ae_weights=True,epochs_fit=0.4)
                                                                             ^ (bad-whitespace)
desc/models/network.py:418:14: C0326: Exactly one space required after comma
    Embedded_z,q_pred= desc.fit(maxiter=30)
              ^ (bad-whitespace)
desc/models/network.py:418:21: C0326: Exactly one space required before assignment
    Embedded_z,q_pred= desc.fit(maxiter=30)
                     ^ (bad-whitespace)
desc/models/network.py:419:10: C0326: Exactly one space required around assignment
    y_pred=q_pred.max(axis=1)
          ^ (bad-whitespace)
desc/models/network.py:420:12: C0326: Exactly one space required around assignment
    obs_info=pd.DataFrame()
            ^ (bad-whitespace)
desc/models/network.py:421:22: C0326: Exactly one space required around assignment
    obs_info["y_true"]=pd.Series(y.astype("U"),dtype="category")
                      ^ (bad-whitespace)
desc/models/network.py:421:46: C0326: Exactly one space required after comma
    obs_info["y_true"]=pd.Series(y.astype("U"),dtype="category")
                                              ^ (bad-whitespace)
desc/models/network.py:422:22: C0326: Exactly one space required around assignment
    obs_info["y_pred"]=pd.Series(y_pred.astype("U"),dtype="category")
                      ^ (bad-whitespace)
desc/models/network.py:422:51: C0326: Exactly one space required after comma
    obs_info["y_pred"]=pd.Series(y_pred.astype("U"),dtype="category")
                                                   ^ (bad-whitespace)
desc/models/network.py:423:9: C0326: Exactly one space required around assignment
    adata=sc.AnnData(x,obs=obs_info)
         ^ (bad-whitespace)
desc/models/network.py:423:22: C0326: Exactly one space required after comma
    adata=sc.AnnData(x,obs=obs_info)
                      ^ (bad-whitespace)
desc/models/network.py:424:29: C0326: Exactly one space required around assignment
    adata.obsm["X_Embeded_z"]=Embedded_z
                             ^ (bad-whitespace)
desc/models/network.py:426:0: C0303: Trailing whitespace (trailing-whitespace)
desc/models/network.py:427:0: C0303: Trailing whitespace (trailing-whitespace)
desc/models/network.py:14:0: E0401: Unable to import 'networkx' (import-error)
desc/models/network.py:14:0: C0413: Import "import networkx as nx" should be placed at the top of the module (wrong-import-position)
desc/models/network.py:15:0: C0413: Import "import matplotlib.pyplot as plt" should be placed at the top of the module (wrong-import-position)
desc/models/network.py:16:0: C0413: Import "from time import time as get_time" should be placed at the top of the module (wrong-import-position)
desc/models/network.py:17:0: C0413: Import "import numpy as np" should be placed at the top of the module (wrong-import-position)
desc/models/network.py:18:0: C0413: Import "import random" should be placed at the top of the module (wrong-import-position)
desc/models/network.py:19:0: E0401: Unable to import 'tensorflow' (import-error)
desc/models/network.py:19:0: C0413: Import "import tensorflow as tf" should be placed at the top of the module (wrong-import-position)
desc/models/network.py:20:0: E0401: Unable to import 'keras.backend' (import-error)
desc/models/network.py:20:0: C0413: Import "import keras.backend as K" should be placed at the top of the module (wrong-import-position)
desc/models/network.py:21:0: E0401: Unable to import 'keras.engine.topology' (import-error)
desc/models/network.py:21:0: C0413: Import "from keras.engine.topology import Layer, InputSpec" should be placed at the top of the module (wrong-import-position)
desc/models/network.py:22:0: E0401: Unable to import 'keras.callbacks' (import-error)
desc/models/network.py:22:0: C0413: Import "from keras.callbacks import TensorBoard, ModelCheckpoint, EarlyStopping, ReduceLROnPlateau, History" should be placed at the top of the module (wrong-import-position)
desc/models/network.py:23:0: E0401: Unable to import 'keras.layers' (import-error)
desc/models/network.py:23:0: C0413: Import "from keras.layers import Dense, Input" should be placed at the top of the module (wrong-import-position)
desc/models/network.py:24:0: E0401: Unable to import 'keras.models' (import-error)
desc/models/network.py:24:0: C0413: Import "from keras.models import Model, load_model" should be placed at the top of the module (wrong-import-position)
desc/models/network.py:25:0: E0401: Unable to import 'keras.optimizers' (import-error)
desc/models/network.py:25:0: C0413: Import "from keras.optimizers import SGD" should be placed at the top of the module (wrong-import-position)
desc/models/network.py:26:0: E0401: Unable to import 'keras' (import-error)
desc/models/network.py:26:0: C0413: Import "from keras import callbacks" should be placed at the top of the module (wrong-import-position)
desc/models/network.py:27:0: E0401: Unable to import 'keras.initializers' (import-error)
desc/models/network.py:27:0: C0413: Import "from keras.initializers import VarianceScaling" should be placed at the top of the module (wrong-import-position)
desc/models/network.py:28:0: E0401: Unable to import 'sklearn.cluster' (import-error)
desc/models/network.py:28:0: C0413: Import "from sklearn.cluster import KMeans" should be placed at the top of the module (wrong-import-position)
desc/models/network.py:29:0: E0401: Unable to import 'scanpy.api' (import-error)
desc/models/network.py:29:0: C0413: Import "import scanpy.api as sc" should be placed at the top of the module (wrong-import-position)
desc/models/network.py:30:0: E0401: Unable to import 'pandas' (import-error)
desc/models/network.py:30:0: C0413: Import "import pandas as pd" should be placed at the top of the module (wrong-import-position)
desc/models/network.py:31:0: E0401: Unable to import 'natsort' (import-error)
desc/models/network.py:31:0: C0413: Import "from natsort import natsorted" should be placed at the top of the module (wrong-import-position)
desc/models/network.py:32:0: W0404: Reimport 'os' (imported line 5) (reimported)
desc/models/network.py:32:0: C0413: Import "import os" should be placed at the top of the module (wrong-import-position)
desc/models/network.py:35:0: W0702: No exception type(s) specified (bare-except)
desc/models/network.py:39:0: W0106: Expression "tf.set_random_seed(201809) if tf.__version__ <= '2.0' else tf.random.set_seed(201809)" is assigned to nothing (expression-not-assigned)
desc/models/network.py:71:4: C0116: Missing function or method docstring (missing-function-docstring)
desc/models/network.py:89:8: C0103: Variable name "q" doesn't conform to snake_case naming style (invalid-name)
desc/models/network.py:90:8: C0103: Variable name "q" doesn't conform to snake_case naming style (invalid-name)
desc/models/network.py:91:8: C0103: Variable name "q" doesn't conform to snake_case naming style (invalid-name)
desc/models/network.py:81:0: W0613: Unused argument 'kwargs' (unused-argument)
desc/models/network.py:94:4: C0116: Missing function or method docstring (missing-function-docstring)
desc/models/network.py:98:4: C0116: Missing function or method docstring (missing-function-docstring)
desc/models/network.py:75:8: W0201: Attribute 'clusters' defined outside __init__ (attribute-defined-outside-init)
desc/models/network.py:79:8: W0201: Attribute 'built' defined outside __init__ (attribute-defined-outside-init)
desc/models/network.py:103:0: C0115: Missing class docstring (missing-class-docstring)
desc/models/network.py:104:4: W0235: Useless super delegation in method '__init__' (useless-super-delegation)
desc/models/network.py:109:8: C0103: Variable name "q" doesn't conform to snake_case naming style (invalid-name)
desc/models/network.py:110:8: C0103: Variable name "q" doesn't conform to snake_case naming style (invalid-name)
desc/models/network.py:144:8: C0103: Attribute name "x" doesn't conform to snake_case naming style (invalid-name)
desc/models/network.py:159:8: C0103: Attribute name "drop_rate_SAE" doesn't conform to snake_case naming style (invalid-name)
desc/models/network.py:161:8: C0103: Attribute name "use_earlyStop" doesn't conform to snake_case naming style (invalid-name)
desc/models/network.py:114:0: C0115: Missing class docstring (missing-class-docstring)
desc/models/network.py:114:0: R0902: Too many instance attributes (29/7) (too-many-instance-attributes)
desc/models/network.py:114:0: R0205: Class 'DescModel' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
desc/models/network.py:116:17: W0621: Redefining name 'dims' from outer scope (line 410) (redefined-outer-name)
desc/models/network.py:117:17: W0621: Redefining name 'x' from outer scope (line 407) (redefined-outer-name)
desc/models/network.py:120:17: W0621: Redefining name 'init' from outer scope (line 408) (redefined-outer-name)
desc/models/network.py:115:4: R0913: Too many arguments (22/5) (too-many-arguments)
desc/models/network.py:115:4: R0914: Too many local variables (22/15) (too-many-locals)
desc/models/network.py:187:8: W0621: Redefining name 't0' from outer scope (line 416) (redefined-outer-name)
desc/models/network.py:175:4: C0116: Missing function or method docstring (missing-function-docstring)
desc/models/network.py:187:8: C0103: Variable name "t0" doesn't conform to snake_case naming style (invalid-name)
desc/models/network.py:223:8: W0125: Using a conditional statement with a constant value (using-constant-test)
desc/models/network.py:233:-1: W0105: String statement has no effect (pointless-string-statement)
desc/models/network.py:244:12: C0103: Variable name "Y_pred_init" doesn't conform to snake_case naming style (invalid-name)
desc/models/network.py:249:16: R1722: Consider using sys.exit() (consider-using-sys-exit)
desc/models/network.py:251:12: C0103: Variable name "Group" doesn't conform to snake_case naming style (invalid-name)
desc/models/network.py:252:12: C0103: Variable name "Mergefeature" doesn't conform to snake_case naming style (invalid-name)
desc/models/network.py:175:4: R0912: Too many branches (15/12) (too-many-branches)
desc/models/network.py:175:4: R0915: Too many statements (58/50) (too-many-statements)
desc/models/network.py:265:4: C0116: Missing function or method docstring (missing-function-docstring)
desc/models/network.py:268:31: W0621: Redefining name 'x' from outer scope (line 407) (redefined-outer-name)
desc/models/network.py:268:4: C0103: Argument name "x" doesn't conform to snake_case naming style (invalid-name)
desc/models/network.py:268:4: C0116: Missing function or method docstring (missing-function-docstring)
desc/models/network.py:271:22: W0621: Redefining name 'x' from outer scope (line 407) (redefined-outer-name)
desc/models/network.py:271:4: C0103: Argument name "x" doesn't conform to snake_case naming style (invalid-name)
desc/models/network.py:271:4: C0116: Missing function or method docstring (missing-function-docstring)
desc/models/network.py:272:8: C0103: Variable name "q" doesn't conform to snake_case naming style (invalid-name)
desc/models/network.py:276:4: C0103: Argument name "q" doesn't conform to snake_case naming style (invalid-name)
desc/models/network.py:276:4: C0116: Missing function or method docstring (missing-function-docstring)
desc/models/network.py:280:4: C0116: Missing function or method docstring (missing-function-docstring)
desc/models/network.py:298:16: W0621: Redefining name 'y_pred' from outer scope (line 419) (redefined-outer-name)
desc/models/network.py:317:8: W0621: Redefining name 'x' from outer scope (line 407) (redefined-outer-name)
desc/models/network.py:319:8: W0621: Redefining name 'Embedded_z' from outer scope (line 418) (redefined-outer-name)
desc/models/network.py:283:4: C0116: Missing function or method docstring (missing-function-docstring)
desc/models/network.py:283:4: R0914: Too many local variables (18/15) (too-many-locals)
desc/models/network.py:296:16: C0103: Variable name "q" doesn't conform to snake_case naming style (invalid-name)
desc/models/network.py:297:16: C0103: Variable name "p" doesn't conform to snake_case naming style (invalid-name)
desc/models/network.py:314:8: C0103: Variable name "y0" doesn't conform to snake_case naming style (invalid-name)
desc/models/network.py:317:8: C0103: Variable name "x" doesn't conform to snake_case naming style (invalid-name)
desc/models/network.py:319:8: C0103: Variable name "Embedded_z" doesn't conform to snake_case naming style (invalid-name)
desc/models/network.py:320:8: C0103: Variable name "q" doesn't conform to snake_case naming style (invalid-name)
desc/models/network.py:284:8: W0612: Unused variable 'save_dir' (unused-variable)
desc/models/network.py:307:12: W0612: Unused variable 'loss' (unused-variable)
desc/models/network.py:338:12: W0621: Redefining name 'y_pred' from outer scope (line 419) (redefined-outer-name)
desc/models/network.py:349:16: W0621: Redefining name 'callbacks' from outer scope (line 26) (redefined-outer-name)
desc/models/network.py:362:8: W0621: Redefining name 'x' from outer scope (line 407) (redefined-outer-name)
desc/models/network.py:364:8: W0621: Redefining name 'Embedded_z' from outer scope (line 418) (redefined-outer-name)
desc/models/network.py:325:4: C0116: Missing function or method docstring (missing-function-docstring)
desc/models/network.py:335:12: C0103: Variable name "q" doesn't conform to snake_case naming style (invalid-name)
desc/models/network.py:336:12: C0103: Variable name "p" doesn't conform to snake_case naming style (invalid-name)
desc/models/network.py:359:8: C0103: Variable name "y0" doesn't conform to snake_case naming style (invalid-name)
desc/models/network.py:362:8: C0103: Variable name "x" doesn't conform to snake_case naming style (invalid-name)
desc/models/network.py:364:8: C0103: Variable name "Embedded_z" doesn't conform to snake_case naming style (invalid-name)
desc/models/network.py:326:8: W0612: Unused variable 'save_dir' (unused-variable)
desc/models/network.py:367:4: C0116: Missing function or method docstring (missing-function-docstring)
desc/models/network.py:369:23: C0103: Variable name "q" doesn't conform to snake_case naming style (invalid-name)
desc/models/network.py:371:12: C0415: Import outside toplevel (math) (import-outside-toplevel)
desc/models/network.py:373:23: C0103: Variable name "q" doesn't conform to snake_case naming style (invalid-name)
desc/models/network.py:390:4: W0404: Reimport 'os' (imported line 5) (reimported)
desc/models/network.py:395:4: W0404: Reimport 'numpy' (imported line 17) (reimported)
desc/models/network.py:400:8: W0621: Redefining name 'x' from outer scope (line 407) (redefined-outer-name)
desc/models/network.py:401:8: W0621: Redefining name 'y' from outer scope (line 407) (redefined-outer-name)
desc/models/network.py:396:4: C0116: Missing function or method docstring (missing-function-docstring)
desc/models/network.py:398:8: E0401: Unable to import 'keras.datasets' (import-error)
desc/models/network.py:398:8: C0415: Import outside toplevel (keras.datasets.mnist) (import-outside-toplevel)
desc/models/network.py:400:8: C0103: Variable name "x" doesn't conform to snake_case naming style (invalid-name)
desc/models/network.py:401:8: C0103: Variable name "y" doesn't conform to snake_case naming style (invalid-name)
desc/models/network.py:402:8: C0103: Variable name "x" doesn't conform to snake_case naming style (invalid-name)
desc/models/network.py:408:4: C0103: Constant name "init" doesn't conform to UPPER_CASE naming style (invalid-name)
desc/models/network.py:412:4: W0404: Reimport 'os' (imported line 5) (reimported)
desc/models/network.py:32:0: C0412: Imports from package os are not grouped (ungrouped-imports)
desc/models/network.py:390:4: C0412: Imports from package os are not grouped (ungrouped-imports)
desc/models/network.py:15:0: C0412: Imports from package matplotlib are not grouped (ungrouped-imports)
desc/models/network.py:395:4: C0412: Imports from package numpy are not grouped (ungrouped-imports)
************* Module desc.models.SAE
desc/models/SAE.py:8:90: C0326: Exactly one space required after comma
from keras.callbacks import TensorBoard, ModelCheckpoint, EarlyStopping, ReduceLROnPlateau,History
                                                                                          ^ (bad-whitespace)
desc/models/SAE.py:18:7: C0303: Trailing whitespace (trailing-whitespace)
desc/models/SAE.py:24:0: C0303: Trailing whitespace (trailing-whitespace)
desc/models/SAE.py:30:0: C0303: Trailing whitespace (trailing-whitespace)
desc/models/SAE.py:32:0: C0301: Line too long (120/100) (line-too-long)
desc/models/SAE.py:33:0: C0301: Line too long (109/100) (line-too-long)
desc/models/SAE.py:35:0: C0301: Line too long (119/100) (line-too-long)
desc/models/SAE.py:36:0: C0301: Line too long (110/100) (line-too-long)
desc/models/SAE.py:37:0: C0301: Line too long (133/100) (line-too-long)
desc/models/SAE.py:38:0: C0301: Line too long (179/100) (line-too-long)
desc/models/SAE.py:39:0: C0301: Line too long (106/100) (line-too-long)
desc/models/SAE.py:40:0: C0301: Line too long (126/100) (line-too-long)
desc/models/SAE.py:43:0: C0301: Line too long (182/100) (line-too-long)
desc/models/SAE.py:43:69: C0326: Exactly one space required after comma
    def __init__(self, dims, act='relu', drop_rate=0.2, batch_size=32,random_seed=201809,actincenter="tanh",init="glorot_uniform",use_earlyStop=True,save_dir='result_tmp'): #act relu
                                                                     ^ (bad-whitespace)
desc/models/SAE.py:43:88: C0326: Exactly one space required after comma
    def __init__(self, dims, act='relu', drop_rate=0.2, batch_size=32,random_seed=201809,actincenter="tanh",init="glorot_uniform",use_earlyStop=True,save_dir='result_tmp'): #act relu
                                                                                        ^ (bad-whitespace)
desc/models/SAE.py:43:107: C0326: Exactly one space required after comma
    def __init__(self, dims, act='relu', drop_rate=0.2, batch_size=32,random_seed=201809,actincenter="tanh",init="glorot_uniform",use_earlyStop=True,save_dir='result_tmp'): #act relu
                                                                                                           ^ (bad-whitespace)
desc/models/SAE.py:43:129: C0326: Exactly one space required after comma
    def __init__(self, dims, act='relu', drop_rate=0.2, batch_size=32,random_seed=201809,actincenter="tanh",init="glorot_uniform",use_earlyStop=True,save_dir='result_tmp'): #act relu
                                                                                                                                 ^ (bad-whitespace)
desc/models/SAE.py:43:148: C0326: Exactly one space required after comma
    def __init__(self, dims, act='relu', drop_rate=0.2, batch_size=32,random_seed=201809,actincenter="tanh",init="glorot_uniform",use_earlyStop=True,save_dir='result_tmp'): #act relu
                                                                                                                                                    ^ (bad-whitespace)
desc/models/SAE.py:48:24: C0326: Exactly one space required around assignment
        self.actincenter=actincenter #linear
                        ^ (bad-whitespace)
desc/models/SAE.py:50:17: C0326: Exactly one space required around assignment
        self.init=init
                 ^ (bad-whitespace)
desc/models/SAE.py:56:0: C0301: Line too long (101/100) (line-too-long)
desc/models/SAE.py:56:57: C0326: Exactly one space required around comparison
        tf.set_random_seed(random_seed) if tf.__version__<="2.0" else tf.random.set_seed(random_seed)
                                                         ^^ (bad-whitespace)
desc/models/SAE.py:60:24: C0326: Exactly one space required around assignment
        self.random_seed=random_seed
                        ^ (bad-whitespace)
desc/models/SAE.py:61:26: C0326: Exactly one space required around assignment
        self.use_earlyStop=use_earlyStop
                          ^ (bad-whitespace)
desc/models/SAE.py:62:0: C0301: Line too long (105/100) (line-too-long)
desc/models/SAE.py:62:40: C0326: Exactly one space required after comma
        self.stacks = [self.make_stack(i,random_seed=self.random_seed+2*i) for i in range(self.n_stacks)]
                                        ^ (bad-whitespace)
desc/models/SAE.py:63:26: C0326: No space allowed before comma
        self.autoencoders ,self.encoder= self.make_autoencoders()
                          ^ (bad-whitespace)
desc/models/SAE.py:63:26: C0326: Exactly one space required after comma
        self.autoencoders ,self.encoder= self.make_autoencoders()
                          ^ (bad-whitespace)
desc/models/SAE.py:63:39: C0326: Exactly one space required before assignment
        self.autoencoders ,self.encoder= self.make_autoencoders()
                                       ^ (bad-whitespace)
desc/models/SAE.py:64:0: C0301: Line too long (106/100) (line-too-long)
desc/models/SAE.py:64:85: C0326: Exactly one space required after comma
        plot_model(self.autoencoders, show_shapes=True, to_file=os.path.join(save_dir,'autoencoders.png'))
                                                                                     ^ (bad-whitespace)
desc/models/SAE.py:65:24: C0326: Exactly one space required after comma
    def choose_init(self,init="glorot_uniform",seed=1):
                        ^ (bad-whitespace)
desc/models/SAE.py:65:46: C0326: Exactly one space required after comma
    def choose_init(self,init="glorot_uniform",seed=1):
                                              ^ (bad-whitespace)
desc/models/SAE.py:66:0: C0301: Line too long (163/100) (line-too-long)
desc/models/SAE.py:66:40: C0326: Exactly one space required after comma
        if init not in {'glorot_uniform','glorot_normal','he_normal','lecun_normal','he_uniform','lecun_uniform','RandomNormal','RandomUniform',"TruncatedNormal"}:
                                        ^ (bad-whitespace)
desc/models/SAE.py:66:56: C0326: Exactly one space required after comma
        if init not in {'glorot_uniform','glorot_normal','he_normal','lecun_normal','he_uniform','lecun_uniform','RandomNormal','RandomUniform',"TruncatedNormal"}:
                                                        ^ (bad-whitespace)
desc/models/SAE.py:66:68: C0326: Exactly one space required after comma
        if init not in {'glorot_uniform','glorot_normal','he_normal','lecun_normal','he_uniform','lecun_uniform','RandomNormal','RandomUniform',"TruncatedNormal"}:
                                                                    ^ (bad-whitespace)
desc/models/SAE.py:66:83: C0326: Exactly one space required after comma
        if init not in {'glorot_uniform','glorot_normal','he_normal','lecun_normal','he_uniform','lecun_uniform','RandomNormal','RandomUniform',"TruncatedNormal"}:
                                                                                   ^ (bad-whitespace)
desc/models/SAE.py:66:96: C0326: Exactly one space required after comma
        if init not in {'glorot_uniform','glorot_normal','he_normal','lecun_normal','he_uniform','lecun_uniform','RandomNormal','RandomUniform',"TruncatedNormal"}:
                                                                                                ^ (bad-whitespace)
desc/models/SAE.py:66:112: C0326: Exactly one space required after comma
        if init not in {'glorot_uniform','glorot_normal','he_normal','lecun_normal','he_uniform','lecun_uniform','RandomNormal','RandomUniform',"TruncatedNormal"}:
                                                                                                                ^ (bad-whitespace)
desc/models/SAE.py:66:127: C0326: Exactly one space required after comma
        if init not in {'glorot_uniform','glorot_normal','he_normal','lecun_normal','he_uniform','lecun_uniform','RandomNormal','RandomUniform',"TruncatedNormal"}:
                                                                                                                               ^ (bad-whitespace)
desc/models/SAE.py:66:143: C0326: Exactly one space required after comma
        if init not in {'glorot_uniform','glorot_normal','he_normal','lecun_normal','he_uniform','lecun_uniform','RandomNormal','RandomUniform',"TruncatedNormal"}:
                                                                                                                                               ^ (bad-whitespace)
desc/models/SAE.py:68:0: C0301: Line too long (188/100) (line-too-long)
desc/models/SAE.py:70:15: C0326: Exactly one space required around comparison
        if init=="glorot_uniform":
               ^^ (bad-whitespace)
desc/models/SAE.py:71:15: C0326: Exactly one space required around assignment
            res=keras.initializers.glorot_uniform(seed=seed)
               ^ (bad-whitespace)
desc/models/SAE.py:72:17: C0326: Exactly one space required around comparison
        elif init=="glorot_normal":
                 ^^ (bad-whitespace)
desc/models/SAE.py:73:15: C0326: Exactly one space required around assignment
            res=keras.initializers.glorot_normal(seed=seed)
               ^ (bad-whitespace)
desc/models/SAE.py:74:17: C0326: Exactly one space required around comparison
        elif init=="he_normal":
                 ^^ (bad-whitespace)
desc/models/SAE.py:75:15: C0326: Exactly one space required around assignment
            res=keras.initializers.he_normal(seed=seed)
               ^ (bad-whitespace)
desc/models/SAE.py:76:17: C0326: Exactly one space required around comparison
        elif init=='he_uniform':
                 ^^ (bad-whitespace)
desc/models/SAE.py:77:15: C0326: Exactly one space required around assignment
            res=keras.initializers.he_uniform(seed=seed)
               ^ (bad-whitespace)
desc/models/SAE.py:78:17: C0326: Exactly one space required around comparison
        elif init=="lecun_normal":
                 ^^ (bad-whitespace)
desc/models/SAE.py:79:15: C0326: Exactly one space required around assignment
            res=keras.initializer.lecun_normal(seed=seed)
               ^ (bad-whitespace)
desc/models/SAE.py:80:17: C0326: Exactly one space required around comparison
        elif init=="lecun_uniform":
                 ^^ (bad-whitespace)
desc/models/SAE.py:81:15: C0326: Exactly one space required around assignment
            res=keras.initializers.lecun_uniform(seed=seed)
               ^ (bad-whitespace)
desc/models/SAE.py:82:17: C0326: Exactly one space required around comparison
        elif init=="RandomNormal":
                 ^^ (bad-whitespace)
desc/models/SAE.py:83:15: C0326: Exactly one space required around assignment
            res=keras.initializers.RandomNormal(mean=0.0,stddev=0.04,seed=seed)
               ^ (bad-whitespace)
desc/models/SAE.py:83:56: C0326: Exactly one space required after comma
            res=keras.initializers.RandomNormal(mean=0.0,stddev=0.04,seed=seed)
                                                        ^ (bad-whitespace)
desc/models/SAE.py:83:68: C0326: Exactly one space required after comma
            res=keras.initializers.RandomNormal(mean=0.0,stddev=0.04,seed=seed)
                                                                    ^ (bad-whitespace)
desc/models/SAE.py:84:17: C0326: Exactly one space required around comparison
        elif init=="RandomUniform":
                 ^^ (bad-whitespace)
desc/models/SAE.py:85:15: C0326: Exactly one space required around assignment
            res=keras.initializers.RandomUniform(minval=-0.05,maxval=0.05,seed=seed)
               ^ (bad-whitespace)
desc/models/SAE.py:85:61: C0326: Exactly one space required after comma
            res=keras.initializers.RandomUniform(minval=-0.05,maxval=0.05,seed=seed)
                                                             ^ (bad-whitespace)
desc/models/SAE.py:85:73: C0326: Exactly one space required after comma
            res=keras.initializers.RandomUniform(minval=-0.05,maxval=0.05,seed=seed)
                                                                         ^ (bad-whitespace)
desc/models/SAE.py:87:15: C0326: Exactly one space required around assignment
            res=keras.initializers.TruncatedNormal(mean=0.0, stddev=0.05, seed=seed)
               ^ (bad-whitespace)
desc/models/SAE.py:89:0: C0303: Trailing whitespace (trailing-whitespace)
desc/models/SAE.py:90:0: C0303: Trailing whitespace (trailing-whitespace)
desc/models/SAE.py:101:0: C0301: Line too long (169/100) (line-too-long)
desc/models/SAE.py:101:90: C0326: Exactly one space required after comma
            h = Dense(self.dims[i + 1], kernel_initializer=self.choose_init(init=self.init,seed=self.random_seed+i),activation=self.activation, name='encoder_%d' % i)(h)
                                                                                          ^ (bad-whitespace)
desc/models/SAE.py:101:115: C0326: Exactly one space required after comma
            h = Dense(self.dims[i + 1], kernel_initializer=self.choose_init(init=self.init,seed=self.random_seed+i),activation=self.activation, name='encoder_%d' % i)(h)
                                                                                                                   ^ (bad-whitespace)
desc/models/SAE.py:104:0: C0301: Line too long (228/100) (line-too-long)
desc/models/SAE.py:104:31: C0326: Exactly one space required after comma
        h = Dense(self.dims[-1],kernel_initializer=self.choose_init(init=self.init,seed=self.random_seed+self.n_stacks), name='encoder_%d' % (self.n_stacks - 1),activation=self.actincenter)(h)  # features are extracted from here
                               ^ (bad-whitespace)
desc/models/SAE.py:104:82: C0326: Exactly one space required after comma
        h = Dense(self.dims[-1],kernel_initializer=self.choose_init(init=self.init,seed=self.random_seed+self.n_stacks), name='encoder_%d' % (self.n_stacks - 1),activation=self.actincenter)(h)  # features are extracted from here
                                                                                  ^ (bad-whitespace)
desc/models/SAE.py:104:160: C0326: Exactly one space required after comma
        h = Dense(self.dims[-1],kernel_initializer=self.choose_init(init=self.init,seed=self.random_seed+self.n_stacks), name='encoder_%d' % (self.n_stacks - 1),activation=self.actincenter)(h)  # features are extracted from here
                                                                                                                                                                ^ (bad-whitespace)
desc/models/SAE.py:106:9: C0326: Exactly one space required around assignment
        y=h
         ^ (bad-whitespace)
desc/models/SAE.py:107:36: C0303: Trailing whitespace (trailing-whitespace)
desc/models/SAE.py:109:0: C0301: Line too long (179/100) (line-too-long)
desc/models/SAE.py:109:86: C0326: Exactly one space required after comma
            y = Dense(self.dims[i], kernel_initializer=self.choose_init(init=self.init,seed=self.random_seed+self.n_stacks+i),activation=self.activation, name='decoder_%d' % i)(y)
                                                                                      ^ (bad-whitespace)
desc/models/SAE.py:109:125: C0326: Exactly one space required after comma
            y = Dense(self.dims[i], kernel_initializer=self.choose_init(init=self.init,seed=self.random_seed+self.n_stacks+i),activation=self.activation, name='decoder_%d' % i)(y)
                                                                                                                             ^ (bad-whitespace)
desc/models/SAE.py:112:0: C0301: Line too long (170/100) (line-too-long)
desc/models/SAE.py:112:82: C0326: Exactly one space required after comma
        y = Dense(self.dims[0], kernel_initializer=self.choose_init(init=self.init,seed=self.random_seed+2*self.n_stacks),name='decoder_0',activation=self.actincenter)(y)
                                                                                  ^ (bad-whitespace)
desc/models/SAE.py:112:121: C0326: Exactly one space required after comma
        y = Dense(self.dims[0], kernel_initializer=self.choose_init(init=self.init,seed=self.random_seed+2*self.n_stacks),name='decoder_0',activation=self.actincenter)(y)
                                                                                                                         ^ (bad-whitespace)
desc/models/SAE.py:112:138: C0326: Exactly one space required after comma
        y = Dense(self.dims[0], kernel_initializer=self.choose_init(init=self.init,seed=self.random_seed+2*self.n_stacks),name='decoder_0',activation=self.actincenter)(y)
                                                                                                                                          ^ (bad-whitespace)
desc/models/SAE.py:114:40: C0326: Exactly one space required after comma
        return Model(inputs=x, outputs=y,name="AE"),Model(inputs=x,outputs=h,name="encoder")
                                        ^ (bad-whitespace)
desc/models/SAE.py:114:51: C0326: Exactly one space required after comma
        return Model(inputs=x, outputs=y,name="AE"),Model(inputs=x,outputs=h,name="encoder")
                                                   ^ (bad-whitespace)
desc/models/SAE.py:114:66: C0326: Exactly one space required after comma
        return Model(inputs=x, outputs=y,name="AE"),Model(inputs=x,outputs=h,name="encoder")
                                                                  ^ (bad-whitespace)
desc/models/SAE.py:114:76: C0326: Exactly one space required after comma
        return Model(inputs=x, outputs=y,name="AE"),Model(inputs=x,outputs=h,name="encoder")
                                                                            ^ (bad-whitespace)
desc/models/SAE.py:116:28: C0326: Exactly one space required after comma
    def make_stack(self, ith,random_seed=0):
                            ^ (bad-whitespace)
desc/models/SAE.py:117:11: C0303: Trailing whitespace (trailing-whitespace)
desc/models/SAE.py:118:0: C0301: Line too long (116/100) (line-too-long)
desc/models/SAE.py:118:116: C0303: Trailing whitespace (trailing-whitespace)
desc/models/SAE.py:120:0: C0303: Trailing whitespace (trailing-whitespace)
desc/models/SAE.py:133:67: C0326: Exactly one space required after comma
        model.add(Dropout(self.drop_rate, input_shape=(in_out_dim,),seed=random_seed))
                                                                   ^ (bad-whitespace)
desc/models/SAE.py:134:0: C0301: Line too long (159/100) (line-too-long)
desc/models/SAE.py:134:115: C0326: Exactly one space required after comma
        model.add(Dense(units=hidden_dim, activation=hidden_act, kernel_initializer=self.choose_init(init=self.init,seed=random_seed),name='encoder_%d' % ith))
                                                                                                                   ^ (bad-whitespace)
desc/models/SAE.py:134:133: C0326: Exactly one space required after comma
        model.add(Dense(units=hidden_dim, activation=hidden_act, kernel_initializer=self.choose_init(init=self.init,seed=random_seed),name='encoder_%d' % ith))
                                                                                                                                     ^ (bad-whitespace)
desc/models/SAE.py:135:40: C0326: Exactly one space required after comma
        model.add(Dropout(self.drop_rate,seed=random_seed+1))
                                        ^ (bad-whitespace)
desc/models/SAE.py:136:0: C0301: Line too long (161/100) (line-too-long)
desc/models/SAE.py:136:63: C0326: Exactly one space required after comma
        model.add(Dense(units=in_out_dim, activation=output_act,kernel_initializer=self.choose_init(init=self.init,seed=random_seed+1), name='decoder_%d' % ith))
                                                               ^ (bad-whitespace)
desc/models/SAE.py:136:114: C0326: Exactly one space required after comma
        model.add(Dense(units=in_out_dim, activation=output_act,kernel_initializer=self.choose_init(init=self.init,seed=random_seed+1), name='decoder_%d' % ith))
                                                                                                                  ^ (bad-whitespace)
desc/models/SAE.py:139:43: C0326: Exactly one space required after comma
    def pretrain_stacks(self, x, epochs=200,decaying_step=3):
                                           ^ (bad-whitespace)
desc/models/SAE.py:140:11: C0303: Trailing whitespace (trailing-whitespace)
desc/models/SAE.py:141:0: C0301: Line too long (114/100) (line-too-long)
desc/models/SAE.py:143:0: C0303: Trailing whitespace (trailing-whitespace)
desc/models/SAE.py:147:92: C0303: Trailing whitespace (trailing-whitespace)
desc/models/SAE.py:151:17: C0326: No space allowed after bracket
            print( 'Pretraining the %dth layer...' % (i+1))
                 ^ (bad-whitespace)
desc/models/SAE.py:152:0: C0301: Line too long (115/100) (line-too-long)
desc/models/SAE.py:153:22: C0326: No space allowed before bracket
                print ('learning rate =', pow(10, -1-j))
                      ^ (bad-whitespace)
desc/models/SAE.py:156:0: C0301: Line too long (110/100) (line-too-long)
desc/models/SAE.py:156:29: C0326: Exactly one space required around assignment
                    callbacks=[EarlyStopping(monitor='loss',min_delta=1e-4,patience=10,verbose=1,mode='auto')]
                             ^ (bad-whitespace)
desc/models/SAE.py:156:59: C0326: Exactly one space required after comma
                    callbacks=[EarlyStopping(monitor='loss',min_delta=1e-4,patience=10,verbose=1,mode='auto')]
                                                           ^ (bad-whitespace)
desc/models/SAE.py:156:74: C0326: Exactly one space required after comma
                    callbacks=[EarlyStopping(monitor='loss',min_delta=1e-4,patience=10,verbose=1,mode='auto')]
                                                                          ^ (bad-whitespace)
desc/models/SAE.py:156:86: C0326: Exactly one space required after comma
                    callbacks=[EarlyStopping(monitor='loss',min_delta=1e-4,patience=10,verbose=1,mode='auto')]
                                                                                      ^ (bad-whitespace)
desc/models/SAE.py:156:96: C0326: Exactly one space required after comma
                    callbacks=[EarlyStopping(monitor='loss',min_delta=1e-4,patience=10,verbose=1,mode='auto')]
                                                                                                ^ (bad-whitespace)
desc/models/SAE.py:157:0: C0301: Line too long (143/100) (line-too-long)
desc/models/SAE.py:157:47: C0326: Exactly one space required after comma
                    self.stacks[i].fit(features,features,callbacks=callbacks,batch_size=self.batch_size,epochs=math.ceil(epochs/decaying_step))
                                               ^ (bad-whitespace)
desc/models/SAE.py:157:56: C0326: Exactly one space required after comma
                    self.stacks[i].fit(features,features,callbacks=callbacks,batch_size=self.batch_size,epochs=math.ceil(epochs/decaying_step))
                                                        ^ (bad-whitespace)
desc/models/SAE.py:157:76: C0326: Exactly one space required after comma
                    self.stacks[i].fit(features,features,callbacks=callbacks,batch_size=self.batch_size,epochs=math.ceil(epochs/decaying_step))
                                                                            ^ (bad-whitespace)
desc/models/SAE.py:157:103: C0326: Exactly one space required after comma
                    self.stacks[i].fit(features,features,callbacks=callbacks,batch_size=self.batch_size,epochs=math.ceil(epochs/decaying_step))
                                                                                                       ^ (bad-whitespace)
desc/models/SAE.py:159:0: C0301: Line too long (127/100) (line-too-long)
desc/models/SAE.py:159:49: C0326: Exactly one space required after comma
                    self.stacks[i].fit(x=features,y=features,batch_size=self.batch_size,epochs=math.ceil(epochs/decaying_step))
                                                 ^ (bad-whitespace)
desc/models/SAE.py:159:60: C0326: Exactly one space required after comma
                    self.stacks[i].fit(x=features,y=features,batch_size=self.batch_size,epochs=math.ceil(epochs/decaying_step))
                                                            ^ (bad-whitespace)
desc/models/SAE.py:159:87: C0326: Exactly one space required after comma
                    self.stacks[i].fit(x=features,y=features,batch_size=self.batch_size,epochs=math.ceil(epochs/decaying_step))
                                                                                       ^ (bad-whitespace)
desc/models/SAE.py:160:18: C0326: No space allowed before bracket
            print ('The %dth layer has been pretrained.' % (i+1))
                  ^ (bad-whitespace)
desc/models/SAE.py:163:0: C0301: Line too long (119/100) (line-too-long)
desc/models/SAE.py:170:0: C0303: Trailing whitespace (trailing-whitespace)
desc/models/SAE.py:175:14: C0326: No space allowed before bracket
        print ('Copying layer-wise pretrained weights to deep autoencoders')
              ^ (bad-whitespace)
desc/models/SAE.py:178:0: C0301: Line too long (103/100) (line-too-long)
desc/models/SAE.py:180:0: C0301: Line too long (103/100) (line-too-long)
desc/models/SAE.py:182:14: C0326: No space allowed before bracket
        print ('Fine-tuning autoencoder end-to-end')
              ^ (bad-whitespace)
desc/models/SAE.py:185:18: C0326: No space allowed before bracket
            print ('learning rate =', lr)
                  ^ (bad-whitespace)
desc/models/SAE.py:189:31: C0326: Exactly one space required after comma
    def fit(self, x, epochs=300,decaying_step=3): # use stacked autoencoder pretrain and fine tuning
                               ^ (bad-whitespace)
desc/models/SAE.py:190:52: C0326: Exactly one space required after comma
        self.pretrain_stacks(x, epochs=int(epochs/2),decaying_step=decaying_step)
                                                    ^ (bad-whitespace)
desc/models/SAE.py:193:56: C0303: Trailing whitespace (trailing-whitespace)
desc/models/SAE.py:193:17: C0326: Exactly one space required after comma
    def fit2(self,x,epochs=300): #no stack directly tran 
                 ^ (bad-whitespace)
desc/models/SAE.py:193:19: C0326: Exactly one space required after comma
    def fit2(self,x,epochs=300): #no stack directly tran 
                   ^ (bad-whitespace)
desc/models/SAE.py:196:18: C0326: No space allowed before bracket
            print ('learning rate =', lr)
                  ^ (bad-whitespace)
desc/models/SAE.py:199:0: C0301: Line too long (106/100) (line-too-long)
desc/models/SAE.py:199:25: C0326: Exactly one space required around assignment
                callbacks=[EarlyStopping(monitor='loss',min_delta=1e-4,patience=10,verbose=1,mode='auto')]
                         ^ (bad-whitespace)
desc/models/SAE.py:199:55: C0326: Exactly one space required after comma
                callbacks=[EarlyStopping(monitor='loss',min_delta=1e-4,patience=10,verbose=1,mode='auto')]
                                                       ^ (bad-whitespace)
desc/models/SAE.py:199:70: C0326: Exactly one space required after comma
                callbacks=[EarlyStopping(monitor='loss',min_delta=1e-4,patience=10,verbose=1,mode='auto')]
                                                                      ^ (bad-whitespace)
desc/models/SAE.py:199:82: C0326: Exactly one space required after comma
                callbacks=[EarlyStopping(monitor='loss',min_delta=1e-4,patience=10,verbose=1,mode='auto')]
                                                                                  ^ (bad-whitespace)
desc/models/SAE.py:199:92: C0326: Exactly one space required after comma
                callbacks=[EarlyStopping(monitor='loss',min_delta=1e-4,patience=10,verbose=1,mode='auto')]
                                                                                            ^ (bad-whitespace)
desc/models/SAE.py:200:0: C0301: Line too long (107/100) (line-too-long)
desc/models/SAE.py:200:41: C0326: Exactly one space required after comma
                self.autoencoders.fit(x=x,y=x,callbacks=callbacks,batch_size=self.batch_size,epochs=epochs)
                                         ^ (bad-whitespace)
desc/models/SAE.py:200:45: C0326: Exactly one space required after comma
                self.autoencoders.fit(x=x,y=x,callbacks=callbacks,batch_size=self.batch_size,epochs=epochs)
                                             ^ (bad-whitespace)
desc/models/SAE.py:200:65: C0326: Exactly one space required after comma
                self.autoencoders.fit(x=x,y=x,callbacks=callbacks,batch_size=self.batch_size,epochs=epochs)
                                                                 ^ (bad-whitespace)
desc/models/SAE.py:200:92: C0326: Exactly one space required after comma
                self.autoencoders.fit(x=x,y=x,callbacks=callbacks,batch_size=self.batch_size,epochs=epochs)
                                                                                            ^ (bad-whitespace)
desc/models/SAE.py:202:0: W0311: Bad indentation. Found 18 spaces, expected 16 (bad-indentation)
desc/models/SAE.py:207:0: C0303: Trailing whitespace (trailing-whitespace)
desc/models/SAE.py:216:0: C0301: Line too long (118/100) (line-too-long)
desc/models/SAE.py:226:14: C0326: No space allowed before bracket
        print ('MNIST samples', x.shape)
              ^ (bad-whitespace)
desc/models/SAE.py:227:11: C0326: Exactly one space required around assignment
        id0=np.random.choice(x.shape[0],sample_size,replace=False)
           ^ (bad-whitespace)
desc/models/SAE.py:227:39: C0326: Exactly one space required after comma
        id0=np.random.choice(x.shape[0],sample_size,replace=False)
                                       ^ (bad-whitespace)
desc/models/SAE.py:227:51: C0326: Exactly one space required after comma
        id0=np.random.choice(x.shape[0],sample_size,replace=False)
                                                   ^ (bad-whitespace)
desc/models/SAE.py:231:38: C0326: Exactly one space required around assignment
    os.environ["CUDA_VISIBLE_DEVICES"]="-1" # no use GPU
                                      ^ (bad-whitespace)
desc/models/SAE.py:232:5: C0326: Exactly one space required after comma
    x,y=load_mnist(10000)
     ^ (bad-whitespace)
desc/models/SAE.py:232:7: C0326: Exactly one space required around assignment
    x,y=load_mnist(10000)
       ^ (bad-whitespace)
desc/models/SAE.py:236:35: C0326: Exactly one space required after comma
    sae = SAE(dims=[x.shape[-1], 64,32])
                                   ^ (bad-whitespace)
desc/models/SAE.py:241:10: C0326: No space allowed before bracket
    print ('Finished training, extracting features using the trained SAE model')
          ^ (bad-whitespace)
desc/models/SAE.py:243:10: C0326: No space allowed before bracket
    print ('performing k-means clustering on the extracted features')
          ^ (bad-whitespace)
desc/models/SAE.py:248:10: C0326: No space allowed before bracket
    print ('K-means clustering result on extracted features: NMI =', nmi(y, y_pred))
          ^ (bad-whitespace)
desc/models/SAE.py:1:0: C0103: Module name "SAE" doesn't conform to snake_case naming style (invalid-name)
desc/models/SAE.py:1:0: C0114: Missing module docstring (missing-module-docstring)
desc/models/SAE.py:3:0: E0401: Unable to import 'keras' (import-error)
desc/models/SAE.py:3:0: C0413: Import "import keras" should be placed at the top of the module (wrong-import-position)
desc/models/SAE.py:4:0: E0401: Unable to import 'keras.layers' (import-error)
desc/models/SAE.py:4:0: C0413: Import "from keras.layers import Input, Dense, Dropout" should be placed at the top of the module (wrong-import-position)
desc/models/SAE.py:5:0: E0401: Unable to import 'keras.models' (import-error)
desc/models/SAE.py:5:0: C0413: Import "from keras.models import Model, Sequential" should be placed at the top of the module (wrong-import-position)
desc/models/SAE.py:6:0: E0401: Unable to import 'keras.optimizers' (import-error)
desc/models/SAE.py:6:0: C0413: Import "from keras.optimizers import SGD" should be placed at the top of the module (wrong-import-position)
desc/models/SAE.py:7:0: E0401: Unable to import 'keras.utils.vis_utils' (import-error)
desc/models/SAE.py:7:0: C0413: Import "from keras.utils.vis_utils import plot_model" should be placed at the top of the module (wrong-import-position)
desc/models/SAE.py:8:0: E0401: Unable to import 'keras.callbacks' (import-error)
desc/models/SAE.py:8:0: C0413: Import "from keras.callbacks import TensorBoard, ModelCheckpoint, EarlyStopping, ReduceLROnPlateau, History" should be placed at the top of the module (wrong-import-position)
desc/models/SAE.py:9:0: C0413: Import "import math" should be placed at the top of the module (wrong-import-position)
desc/models/SAE.py:10:0: C0413: Import "import numpy as np" should be placed at the top of the module (wrong-import-position)
desc/models/SAE.py:11:0: C0413: Import "import random" should be placed at the top of the module (wrong-import-position)
desc/models/SAE.py:12:0: E0401: Unable to import 'tensorflow' (import-error)
desc/models/SAE.py:12:0: C0413: Import "import tensorflow as tf" should be placed at the top of the module (wrong-import-position)
desc/models/SAE.py:61:8: C0103: Attribute name "use_earlyStop" doesn't conform to snake_case naming style (invalid-name)
desc/models/SAE.py:17:0: R0902: Too many instance attributes (13/7) (too-many-instance-attributes)
desc/models/SAE.py:17:0: R0205: Class 'SAE' inherits from object, can be safely removed from bases in python3 (useless-object-inheritance)
desc/models/SAE.py:43:4: R0913: Too many arguments (10/5) (too-many-arguments)
desc/models/SAE.py:56:8: W0106: Expression "tf.set_random_seed(random_seed) if tf.__version__ <= '2.0' else tf.random.set_seed(random_seed)" is assigned to nothing (expression-not-assigned)
desc/models/SAE.py:65:4: C0116: Missing function or method docstring (missing-function-docstring)
desc/models/SAE.py:67:12: W0715: Exception arguments suggest string formatting might be intended (raising-format-tuple)
desc/models/SAE.py:69:40: E0602: Undefined variable 'mode' (undefined-variable)
desc/models/SAE.py:65:4: R0201: Method could be a function (no-self-use)
desc/models/SAE.py:96:8: W0621: Redefining name 'x' from outer scope (line 232) (redefined-outer-name)
desc/models/SAE.py:106:8: W0621: Redefining name 'y' from outer scope (line 232) (redefined-outer-name)
desc/models/SAE.py:96:8: C0103: Variable name "x" doesn't conform to snake_case naming style (invalid-name)
desc/models/SAE.py:97:8: C0103: Variable name "h" doesn't conform to snake_case naming style (invalid-name)
desc/models/SAE.py:101:12: C0103: Variable name "h" doesn't conform to snake_case naming style (invalid-name)
desc/models/SAE.py:104:8: C0103: Variable name "h" doesn't conform to snake_case naming style (invalid-name)
desc/models/SAE.py:106:8: C0103: Variable name "y" doesn't conform to snake_case naming style (invalid-name)
desc/models/SAE.py:109:12: C0103: Variable name "y" doesn't conform to snake_case naming style (invalid-name)
desc/models/SAE.py:112:8: C0103: Variable name "y" doesn't conform to snake_case naming style (invalid-name)
desc/models/SAE.py:139:30: W0621: Redefining name 'x' from outer scope (line 232) (redefined-outer-name)
desc/models/SAE.py:149:8: W0621: Redefining name 'features' from outer scope (line 242) (redefined-outer-name)
desc/models/SAE.py:139:4: C0103: Argument name "x" doesn't conform to snake_case naming style (invalid-name)
desc/models/SAE.py:166:36: W0621: Redefining name 'x' from outer scope (line 232) (redefined-outer-name)
desc/models/SAE.py:166:4: C0103: Argument name "x" doesn't conform to snake_case naming style (invalid-name)
desc/models/SAE.py:184:12: C0103: Variable name "lr" doesn't conform to snake_case naming style (invalid-name)
desc/models/SAE.py:189:18: W0621: Redefining name 'x' from outer scope (line 232) (redefined-outer-name)
desc/models/SAE.py:189:4: C0103: Argument name "x" doesn't conform to snake_case naming style (invalid-name)
desc/models/SAE.py:189:4: C0116: Missing function or method docstring (missing-function-docstring)
desc/models/SAE.py:193:18: W0621: Redefining name 'x' from outer scope (line 232) (redefined-outer-name)
desc/models/SAE.py:193:4: C0103: Argument name "x" doesn't conform to snake_case naming style (invalid-name)
desc/models/SAE.py:193:4: C0116: Missing function or method docstring (missing-function-docstring)
desc/models/SAE.py:195:12: C0103: Variable name "lr" doesn't conform to snake_case naming style (invalid-name)
desc/models/SAE.py:204:30: W0621: Redefining name 'x' from outer scope (line 232) (redefined-outer-name)
desc/models/SAE.py:204:4: C0103: Argument name "x" doesn't conform to snake_case naming style (invalid-name)
desc/models/SAE.py:217:-1: W0105: String statement has no effect (pointless-string-statement)
desc/models/SAE.py:218:4: W0404: Reimport 'numpy' (imported line 10) (reimported)
desc/models/SAE.py:223:8: W0621: Redefining name 'x' from outer scope (line 232) (redefined-outer-name)
desc/models/SAE.py:224:8: W0621: Redefining name 'y' from outer scope (line 232) (redefined-outer-name)
desc/models/SAE.py:219:4: C0116: Missing function or method docstring (missing-function-docstring)
desc/models/SAE.py:221:8: E0401: Unable to import 'keras.datasets' (import-error)
desc/models/SAE.py:221:8: C0415: Import outside toplevel (keras.datasets.mnist) (import-outside-toplevel)
desc/models/SAE.py:223:8: C0103: Variable name "x" doesn't conform to snake_case naming style (invalid-name)
desc/models/SAE.py:224:8: C0103: Variable name "y" doesn't conform to snake_case naming style (invalid-name)
desc/models/SAE.py:225:8: C0103: Variable name "x" doesn't conform to snake_case naming style (invalid-name)
desc/models/SAE.py:230:4: W0404: Reimport 'os' (imported line 1) (reimported)
desc/models/SAE.py:233:4: C0103: Constant name "db" doesn't conform to UPPER_CASE naming style (invalid-name)
desc/models/SAE.py:234:4: C0103: Constant name "n_clusters" doesn't conform to UPPER_CASE naming style (invalid-name)
desc/models/SAE.py:244:4: E0401: Unable to import 'sklearn.cluster' (import-error)
desc/models/SAE.py:247:4: E0401: Unable to import 'sklearn.metrics' (import-error)
desc/models/SAE.py:230:4: C0412: Imports from package os are not grouped (ungrouped-imports)
desc/models/SAE.py:218:4: C0412: Imports from package numpy are not grouped (ungrouped-imports)
************* Module desc.models.__init__
desc/models/__init__.py:2:0: C0303: Trailing whitespace (trailing-whitespace)
************* Module desc.models
desc/models/__init__.py:1:0: C0114: Missing module docstring (missing-module-docstring)
************* Module desc.models.desc
desc/models/desc.py:18:9: C0326: Exactly one space required after comma
import os,math
         ^ (bad-whitespace)
desc/models/desc.py:42:3: C0303: Trailing whitespace (trailing-whitespace)
desc/models/desc.py:43:20: C0326: Exactly one space required after comma
def getdims(x=(10000,200)):
                    ^ (bad-whitespace)
desc/models/desc.py:48:17: C0326: Exactly one space required around comparison
    assert len(x)==2
                 ^^ (bad-whitespace)
desc/models/desc.py:49:12: C0326: Exactly one space required around assignment
    n_sample=x[0]
            ^ (bad-whitespace)
desc/models/desc.py:50:15: C0326: Exactly one space required around comparison
    if n_sample>20000:# may be need complex network
               ^ (bad-whitespace)
desc/models/desc.py:51:12: C0326: Exactly one space required around assignment
        dims=[x[-1],128,32]
            ^ (bad-whitespace)
desc/models/desc.py:51:19: C0326: Exactly one space required after comma
        dims=[x[-1],128,32]
                   ^ (bad-whitespace)
desc/models/desc.py:51:23: C0326: Exactly one space required after comma
        dims=[x[-1],128,32]
                       ^ (bad-whitespace)
desc/models/desc.py:52:17: C0326: Exactly one space required around comparison
    elif n_sample>10000:#10000
                 ^ (bad-whitespace)
desc/models/desc.py:53:12: C0326: Exactly one space required around assignment
        dims=[x[-1],64,32]
            ^ (bad-whitespace)
desc/models/desc.py:53:19: C0326: Exactly one space required after comma
        dims=[x[-1],64,32]
                   ^ (bad-whitespace)
desc/models/desc.py:53:22: C0326: Exactly one space required after comma
        dims=[x[-1],64,32]
                      ^ (bad-whitespace)
desc/models/desc.py:54:17: C0326: Exactly one space required around comparison
    elif n_sample>5000: #5000
                 ^ (bad-whitespace)
desc/models/desc.py:55:12: C0326: Exactly one space required around assignment
        dims=[x[-1],32,16] #16
            ^ (bad-whitespace)
desc/models/desc.py:55:19: C0326: Exactly one space required after comma
        dims=[x[-1],32,16] #16
                   ^ (bad-whitespace)
desc/models/desc.py:55:22: C0326: Exactly one space required after comma
        dims=[x[-1],32,16] #16
                      ^ (bad-whitespace)
desc/models/desc.py:56:17: C0326: Exactly one space required around comparison
    elif n_sample>2000:
                 ^ (bad-whitespace)
desc/models/desc.py:57:12: C0326: Exactly one space required around assignment
        dims=[x[-1],128]
            ^ (bad-whitespace)
desc/models/desc.py:57:19: C0326: Exactly one space required after comma
        dims=[x[-1],128]
                   ^ (bad-whitespace)
desc/models/desc.py:58:17: C0326: Exactly one space required around comparison
    elif n_sample>500:
                 ^ (bad-whitespace)
desc/models/desc.py:59:12: C0326: Exactly one space required around assignment
        dims=[x[-1],64]
            ^ (bad-whitespace)
desc/models/desc.py:59:19: C0326: Exactly one space required after comma
        dims=[x[-1],64]
                   ^ (bad-whitespace)
desc/models/desc.py:61:12: C0326: Exactly one space required around assignment
        dims=[x[-1],16]
            ^ (bad-whitespace)
desc/models/desc.py:61:19: C0326: Exactly one space required after comma
        dims=[x[-1],16]
                   ^ (bad-whitespace)
desc/models/desc.py:64:0: C0303: Trailing whitespace (trailing-whitespace)
desc/models/desc.py:65:21: C0326: Exactly one space required after comma
def train_single(data,dims=None,
                     ^ (bad-whitespace)
desc/models/desc.py:66:0: C0330: Wrong continued indentation (add 9 spaces).
        alpha=1.0,
        ^        | (bad-continuation)
desc/models/desc.py:67:0: C0330: Wrong continued indentation (add 9 spaces).
        tol=0.005,
        ^        | (bad-continuation)
desc/models/desc.py:68:0: C0330: Wrong continued indentation (add 9 spaces).
        init='glorot_uniform',
        ^        | (bad-continuation)
desc/models/desc.py:69:0: C0330: Wrong continued indentation (add 9 spaces).
        louvain_resolution=1.0,
        ^        | (bad-continuation)
desc/models/desc.py:70:0: C0330: Wrong continued indentation (add 9 spaces).
        n_neighbors=15,
        ^        | (bad-continuation)
desc/models/desc.py:71:0: C0330: Wrong continued indentation (add 9 spaces).
        pretrain_epochs=300,
        ^        | (bad-continuation)
desc/models/desc.py:72:0: C0330: Wrong continued indentation (add 9 spaces).
        batch_size=256,
        ^        | (bad-continuation)
desc/models/desc.py:73:0: C0330: Wrong continued indentation (add 9 spaces).
        activation='relu',
        ^        | (bad-continuation)
desc/models/desc.py:74:0: C0330: Wrong continued indentation (add 9 spaces).
        actincenter='tanh',
        ^        | (bad-continuation)
desc/models/desc.py:75:0: C0330: Wrong continued indentation (add 9 spaces).
        drop_rate_SAE=0.2,
        ^        | (bad-continuation)
desc/models/desc.py:76:0: C0330: Wrong continued indentation (add 9 spaces).
        is_stacked=True,
        ^        | (bad-continuation)
desc/models/desc.py:77:0: C0330: Wrong continued indentation (add 9 spaces).
        use_earlyStop=True,
        ^        | (bad-continuation)
desc/models/desc.py:78:0: C0330: Wrong continued indentation (add 9 spaces).
        use_ae_weights=False,
        ^        | (bad-continuation)
desc/models/desc.py:79:0: C0330: Wrong continued indentation (add 9 spaces).
	save_encoder_weights=False,
        ^        | (bad-continuation)
desc/models/desc.py:80:0: C0330: Wrong continued indentation (add 9 spaces).
        save_encoder_step=4,
        ^        | (bad-continuation)
desc/models/desc.py:81:0: C0330: Wrong continued indentation (add 9 spaces).
        save_dir='result_tmp',
        ^        | (bad-continuation)
desc/models/desc.py:82:0: C0330: Wrong continued indentation (add 9 spaces).
        max_iter=1000,
        ^        | (bad-continuation)
desc/models/desc.py:83:0: C0330: Wrong continued indentation (add 9 spaces).
        epochs_fit=5, 
        ^        | (bad-continuation)
desc/models/desc.py:83:21: C0303: Trailing whitespace (trailing-whitespace)
desc/models/desc.py:84:0: C0330: Wrong continued indentation (add 9 spaces).
        num_Cores=20,
        ^        | (bad-continuation)
desc/models/desc.py:85:0: C0330: Wrong continued indentation (add 9 spaces).
        num_Cores_tsne=10,
        ^        | (bad-continuation)
desc/models/desc.py:86:0: C0330: Wrong continued indentation (add 9 spaces).
        use_GPU=True,
        ^        | (bad-continuation)
desc/models/desc.py:87:0: C0330: Wrong continued indentation (add 9 spaces).
        random_seed=201809,
        ^        | (bad-continuation)
desc/models/desc.py:88:0: C0330: Wrong continued indentation (add 9 spaces).
        verbose=True,
        ^        | (bad-continuation)
desc/models/desc.py:89:0: C0330: Wrong continued indentation (add 9 spaces).
	do_tsne=False,
        ^        | (bad-continuation)
desc/models/desc.py:90:0: C0330: Wrong continued indentation (add 9 spaces).
	learning_rate=150,
        ^        | (bad-continuation)
desc/models/desc.py:91:0: C0330: Wrong continued indentation (add 9 spaces).
	perplexity=30,
        ^        | (bad-continuation)
desc/models/desc.py:92:0: C0330: Wrong continued indentation (add 9 spaces).
        do_umap=False,
        ^        | (bad-continuation)
desc/models/desc.py:93:0: C0330: Wrong continued indentation (add 9 spaces).
        kernel_clustering="t"
        ^        | (bad-continuation)
desc/models/desc.py:94:0: C0330: Wrong continued indentation.
):
^               || (bad-continuation)
desc/models/desc.py:95:22: C0326: Exactly one space required after comma
    if isinstance(data,AnnData):
                      ^ (bad-whitespace)
desc/models/desc.py:96:13: C0326: Exactly one space required around assignment
        adata=data
             ^ (bad-whitespace)
desc/models/desc.py:98:13: C0326: Exactly one space required around assignment
        adata=sc.AnnData(data)
             ^ (bad-whitespace)
desc/models/desc.py:99:19: C0303: Trailing whitespace (trailing-whitespace)
desc/models/desc.py:101:12: C0326: Exactly one space required around assignment
        dims=getdims(adata.shape)
            ^ (bad-whitespace)
desc/models/desc.py:102:0: C0301: Line too long (151/100) (line-too-long)
desc/models/desc.py:102:18: C0326: Exactly one space required around comparison
    assert dims[0]==adata.shape[-1],'the number of columns of x doesnot equal to the first element of dims, we must make sure that dims[0]==x.shape[0]'
                  ^^ (bad-whitespace)
desc/models/desc.py:102:35: C0326: Exactly one space required after comma
    assert dims[0]==adata.shape[-1],'the number of columns of x doesnot equal to the first element of dims, we must make sure that dims[0]==x.shape[0]'
                                   ^ (bad-whitespace)
desc/models/desc.py:108:53: C0326: Exactly one space required around comparison
    tf.set_random_seed(random_seed) if tf.__version__<="2.0" else tf.random.set_seed(random_seed)
                                                     ^^ (bad-whitespace)
desc/models/desc.py:109:13: C0326: Exactly one space required around assignment
    total_cpu=multiprocessing.cpu_count()
             ^ (bad-whitespace)
desc/models/desc.py:110:89: C0303: Trailing whitespace (trailing-whitespace)
desc/models/desc.py:110:13: C0326: Exactly one space required around assignment
    num_Cores=int(num_Cores) if total_cpu>int(num_Cores) else int(math.ceil(total_cpu/2)) 
             ^ (bad-whitespace)
desc/models/desc.py:110:41: C0326: Exactly one space required around comparison
    num_Cores=int(num_Cores) if total_cpu>int(num_Cores) else int(math.ceil(total_cpu/2)) 
                                         ^ (bad-whitespace)
desc/models/desc.py:111:49: C0326: Exactly one space required after comma
    print('The number of cpu in your computer is',total_cpu)
                                                 ^ (bad-whitespace)
desc/models/desc.py:114:0: C0301: Line too long (109/100) (line-too-long)
desc/models/desc.py:118:0: C0301: Line too long (165/100) (line-too-long)
desc/models/desc.py:118:61: C0326: Exactly one space required after comma
        K.set_session(tf.Session(graph=tf.get_default_graph(),config=tf.ConfigProto(intra_op_parallelism_threads=num_Cores, inter_op_parallelism_threads=num_Cores)))
                                                             ^ (bad-whitespace)
desc/models/desc.py:119:66: C0326: Exactly one space required after comma
    if not use_ae_weights and os.path.isfile(os.path.join(save_dir,"ae_weights.h5")):
                                                                  ^ (bad-whitespace)
desc/models/desc.py:120:39: C0326: Exactly one space required after comma
        os.remove(os.path.join(save_dir,"ae_weights.h5"))
                                       ^ (bad-whitespace)
desc/models/desc.py:121:0: C0303: Trailing whitespace (trailing-whitespace)
desc/models/desc.py:122:31: C0303: Trailing whitespace (trailing-whitespace)
desc/models/desc.py:122:7: C0326: Exactly one space required around assignment
    tic=get_time()#recored time         
       ^ (bad-whitespace)
desc/models/desc.py:123:8: C0326: Exactly one space required around assignment
    desc=DescModel(dims=dims,
        ^ (bad-whitespace)
desc/models/desc.py:124:0: C0330: Wrong continued indentation (add 5 spaces).
              x=adata.X,
              ^    | (bad-continuation)
desc/models/desc.py:125:0: C0330: Wrong continued indentation (add 5 spaces).
              alpha=alpha,
              ^    | (bad-continuation)
desc/models/desc.py:126:0: C0330: Wrong continued indentation (add 5 spaces).
              tol=tol,
              ^    | (bad-continuation)
desc/models/desc.py:127:0: C0330: Wrong continued indentation (add 5 spaces).
              init=init,
              ^    | (bad-continuation)
desc/models/desc.py:128:0: C0330: Wrong continued indentation (add 5 spaces).
              louvain_resolution=louvain_resolution,
              ^    | (bad-continuation)
desc/models/desc.py:129:0: C0330: Wrong continued indentation (add 5 spaces).
              n_neighbors=n_neighbors,
              ^    | (bad-continuation)
desc/models/desc.py:130:0: C0330: Wrong continued indentation (add 5 spaces).
              pretrain_epochs=pretrain_epochs,
              ^    | (bad-continuation)
desc/models/desc.py:131:0: C0330: Wrong continued indentation (add 5 spaces).
              epochs_fit=epochs_fit,
              ^    | (bad-continuation)
desc/models/desc.py:132:0: C0330: Wrong continued indentation (add 5 spaces).
              batch_size=batch_size,
              ^    | (bad-continuation)
desc/models/desc.py:133:0: C0330: Wrong continued indentation (add 5 spaces).
              random_seed=random_seed,
              ^    | (bad-continuation)
desc/models/desc.py:134:0: C0330: Wrong continued indentation (add 5 spaces).
              activation=activation,
              ^    | (bad-continuation)
desc/models/desc.py:135:0: C0330: Wrong continued indentation (add 5 spaces).
              actincenter=actincenter,
              ^    | (bad-continuation)
desc/models/desc.py:136:0: C0330: Wrong continued indentation (add 5 spaces).
              drop_rate_SAE=drop_rate_SAE,
              ^    | (bad-continuation)
desc/models/desc.py:137:0: C0330: Wrong continued indentation (add 5 spaces).
              is_stacked=is_stacked,
              ^    | (bad-continuation)
desc/models/desc.py:138:0: C0330: Wrong continued indentation (add 5 spaces).
              use_earlyStop=use_earlyStop,
              ^    | (bad-continuation)
desc/models/desc.py:139:0: C0330: Wrong continued indentation (add 5 spaces).
              use_ae_weights=use_ae_weights,
              ^    | (bad-continuation)
desc/models/desc.py:140:0: C0330: Wrong continued indentation (add 5 spaces).
	      save_encoder_weights=save_encoder_weights,
              ^    | (bad-continuation)
desc/models/desc.py:141:0: C0330: Wrong continued indentation (add 5 spaces).
              save_encoder_step=save_encoder_step,
              ^    | (bad-continuation)
desc/models/desc.py:142:0: C0330: Wrong continued indentation (add 5 spaces).
              save_dir=save_dir,
              ^    | (bad-continuation)
desc/models/desc.py:143:0: C0330: Wrong continued indentation (add 5 spaces).
              kernel_clustering=kernel_clustering
              ^    | (bad-continuation)
desc/models/desc.py:144:0: C0330: Wrong continued indentation.
    )
    ^             || (bad-continuation)
desc/models/desc.py:145:35: C0326: Exactly one space required after comma
    desc.compile(optimizer=SGD(0.01,0.9),loss='kld')
                                   ^ (bad-whitespace)
desc/models/desc.py:145:40: C0326: Exactly one space required after comma
    desc.compile(optimizer=SGD(0.01,0.9),loss='kld')
                                        ^ (bad-whitespace)
desc/models/desc.py:146:13: C0326: Exactly one space required after comma
    Embeded_z,q_pred=desc.fit(maxiter=max_iter)
             ^ (bad-whitespace)
desc/models/desc.py:146:20: C0326: Exactly one space required around assignment
    Embeded_z,q_pred=desc.fit(maxiter=max_iter)
                    ^ (bad-whitespace)
desc/models/desc.py:151:70: C0326: Exactly one space required after comma
    print("The runtime of (resolution="+str(louvain_resolution)+")is:",get_time()-tic)
                                                                      ^ (bad-whitespace)
desc/models/desc.py:152:10: C0326: Exactly one space required around assignment
    y_pred=pd.Series(np.argmax(q_pred,axis=1),index=adata.obs.index,dtype='category')
          ^ (bad-whitespace)
desc/models/desc.py:152:37: C0326: Exactly one space required after comma
    y_pred=pd.Series(np.argmax(q_pred,axis=1),index=adata.obs.index,dtype='category')
                                     ^ (bad-whitespace)
desc/models/desc.py:152:45: C0326: Exactly one space required after comma
    y_pred=pd.Series(np.argmax(q_pred,axis=1),index=adata.obs.index,dtype='category')
                                             ^ (bad-whitespace)
desc/models/desc.py:152:67: C0326: Exactly one space required after comma
    y_pred=pd.Series(np.argmax(q_pred,axis=1),index=adata.obs.index,dtype='category')
                                                                   ^ (bad-whitespace)
desc/models/desc.py:153:25: C0326: Exactly one space required around assignment
    y_pred.cat.categories=list(range(len(y_pred.unique())))
                         ^ (bad-whitespace)
desc/models/desc.py:154:46: C0326: Exactly one space required around assignment
    adata.obs['desc_'+str(louvain_resolution)]=y_pred
                                              ^ (bad-whitespace)
desc/models/desc.py:155:53: C0326: Exactly one space required around assignment
    adata.obsm['X_Embeded_z'+str(louvain_resolution)]=Embeded_z
                                                     ^ (bad-whitespace)
desc/models/desc.py:157:0: C0301: Line too long (108/100) (line-too-long)
desc/models/desc.py:157:22: C0326: Exactly one space required around assignment
        num_Cores_tsne=int(num_Cores_tsne) if total_cpu>int(num_Cores_tsne) else int(math.ceil(total_cpu/2))
                      ^ (bad-whitespace)
desc/models/desc.py:157:55: C0326: Exactly one space required around comparison
        num_Cores_tsne=int(num_Cores_tsne) if total_cpu>int(num_Cores_tsne) else int(math.ceil(total_cpu/2))
                                                       ^ (bad-whitespace)
desc/models/desc.py:158:0: C0301: Line too long (143/100) (line-too-long)
desc/models/desc.py:158:24: C0326: Exactly one space required after comma
        sc.tl.tsne(adata,use_rep="X_Embeded_z"+str(louvain_resolution),learning_rate=learning_rate,perplexity=perplexity,n_jobs=num_Cores_tsne)
                        ^ (bad-whitespace)
desc/models/desc.py:158:70: C0326: Exactly one space required after comma
        sc.tl.tsne(adata,use_rep="X_Embeded_z"+str(louvain_resolution),learning_rate=learning_rate,perplexity=perplexity,n_jobs=num_Cores_tsne)
                                                                      ^ (bad-whitespace)
desc/models/desc.py:158:98: C0326: Exactly one space required after comma
        sc.tl.tsne(adata,use_rep="X_Embeded_z"+str(louvain_resolution),learning_rate=learning_rate,perplexity=perplexity,n_jobs=num_Cores_tsne)
                                                                                                  ^ (bad-whitespace)
desc/models/desc.py:158:120: C0326: Exactly one space required after comma
        sc.tl.tsne(adata,use_rep="X_Embeded_z"+str(louvain_resolution),learning_rate=learning_rate,perplexity=perplexity,n_jobs=num_Cores_tsne)
                                                                                                                        ^ (bad-whitespace)
desc/models/desc.py:159:52: C0326: Exactly one space required around assignment
        adata.obsm["X_tsne"+str(louvain_resolution)]=adata.obsm["X_tsne"].copy()
                                                    ^ (bad-whitespace)
desc/models/desc.py:160:0: C0301: Line too long (115/100) (line-too-long)
desc/models/desc.py:160:70: C0326: Exactly one space required after comma
        print('tsne finished and added X_tsne'+str(louvain_resolution),' into the umap coordinates (adata.obsm)\n')
                                                                      ^ (bad-whitespace)
desc/models/desc.py:163:0: C0301: Line too long (101/100) (line-too-long)
desc/models/desc.py:165:100: C0303: Trailing whitespace (trailing-whitespace)
desc/models/desc.py:165:29: C0326: Exactly one space required after comma
        sc.pp.neighbors(adata,n_neighbors=n_neighbors,use_rep="X_Embeded_z"+str(louvain_resolution)) 
                             ^ (bad-whitespace)
desc/models/desc.py:165:53: C0326: Exactly one space required after comma
        sc.pp.neighbors(adata,n_neighbors=n_neighbors,use_rep="X_Embeded_z"+str(louvain_resolution)) 
                                                     ^ (bad-whitespace)
desc/models/desc.py:167:80: C0303: Trailing whitespace (trailing-whitespace)
desc/models/desc.py:167:52: C0326: Exactly one space required around assignment
        adata.obsm["X_umap"+str(louvain_resolution)]=adata.obsm["X_umap"].copy() 
                                                    ^ (bad-whitespace)
desc/models/desc.py:168:0: C0301: Line too long (115/100) (line-too-long)
desc/models/desc.py:168:70: C0326: Exactly one space required after comma
        print('umap finished and added X_umap'+str(louvain_resolution),' into the umap coordinates (adata.obsm)\n')
                                                                      ^ (bad-whitespace)
desc/models/desc.py:170:37: C0303: Trailing whitespace (trailing-whitespace)
desc/models/desc.py:171:0: C0301: Line too long (101/100) (line-too-long)
desc/models/desc.py:174:0: C0303: Trailing whitespace (trailing-whitespace)
desc/models/desc.py:176:52: C0326: Exactly one space required around assignment
    adata.uns['prob_matrix'+str(louvain_resolution)]=q_pred
                                                    ^ (bad-whitespace)
desc/models/desc.py:180:14: C0326: Exactly one space required after comma
def train(data,dims=None,
              ^ (bad-whitespace)
desc/models/desc.py:181:0: C0330: Wrong continued indentation (add 2 spaces).
        alpha=1.0,
        ^ | (bad-continuation)
desc/models/desc.py:182:0: C0330: Wrong continued indentation (add 2 spaces).
        tol=0.005,
        ^ | (bad-continuation)
desc/models/desc.py:183:0: C0330: Wrong continued indentation (add 2 spaces).
        init='glorot_uniform',
        ^ | (bad-continuation)
desc/models/desc.py:184:0: C0330: Wrong continued indentation (add 2 spaces).
        louvain_resolution=[0.6,0.8],
        ^ | (bad-continuation)
desc/models/desc.py:184:31: C0326: Exactly one space required after comma
        louvain_resolution=[0.6,0.8],
                               ^ (bad-whitespace)
desc/models/desc.py:185:0: C0330: Wrong continued indentation (add 2 spaces).
        n_neighbors=10,
        ^ | (bad-continuation)
desc/models/desc.py:186:0: C0330: Wrong continued indentation (add 2 spaces).
        pretrain_epochs=300,
        ^ | (bad-continuation)
desc/models/desc.py:187:0: C0330: Wrong continued indentation (add 2 spaces).
        batch_size=256,
        ^ | (bad-continuation)
desc/models/desc.py:188:0: C0330: Wrong continued indentation (add 2 spaces).
        activation='relu',
        ^ | (bad-continuation)
desc/models/desc.py:189:0: C0330: Wrong continued indentation (add 2 spaces).
        actincenter='tanh',
        ^ | (bad-continuation)
desc/models/desc.py:190:0: C0330: Wrong continued indentation (add 2 spaces).
        drop_rate_SAE=0.2,
        ^ | (bad-continuation)
desc/models/desc.py:191:0: C0330: Wrong continued indentation (add 2 spaces).
        is_stacked=True,
        ^ | (bad-continuation)
desc/models/desc.py:192:0: C0330: Wrong continued indentation (add 2 spaces).
        use_earlyStop=True,
        ^ | (bad-continuation)
desc/models/desc.py:193:0: C0330: Wrong continued indentation (add 2 spaces).
        use_ae_weights=True,
        ^ | (bad-continuation)
desc/models/desc.py:194:0: C0330: Wrong continued indentation (add 2 spaces).
	save_encoder_weights=False,
        ^ | (bad-continuation)
desc/models/desc.py:195:0: C0330: Wrong continued indentation (add 2 spaces).
        save_encoder_step=5,
        ^ | (bad-continuation)
desc/models/desc.py:196:0: C0330: Wrong continued indentation (add 2 spaces).
        save_dir='result_tmp',
        ^ | (bad-continuation)
desc/models/desc.py:197:0: C0330: Wrong continued indentation (add 2 spaces).
        max_iter=1000,
        ^ | (bad-continuation)
desc/models/desc.py:198:0: C0330: Wrong continued indentation (add 2 spaces).
        epochs_fit=5,
        ^ | (bad-continuation)
desc/models/desc.py:199:0: C0330: Wrong continued indentation (add 2 spaces).
        num_Cores=20,
        ^ | (bad-continuation)
desc/models/desc.py:200:0: C0330: Wrong continued indentation (add 2 spaces).
        num_Cores_tsne=10,
        ^ | (bad-continuation)
desc/models/desc.py:201:0: C0330: Wrong continued indentation (add 2 spaces).
        use_GPU=False,
        ^ | (bad-continuation)
desc/models/desc.py:202:0: C0330: Wrong continued indentation (add 2 spaces).
        random_seed=201809,
        ^ | (bad-continuation)
desc/models/desc.py:203:0: C0330: Wrong continued indentation (add 2 spaces).
        verbose=True,
        ^ | (bad-continuation)
desc/models/desc.py:204:0: C0330: Wrong continued indentation (add 2 spaces).
	do_tsne=False,
        ^ | (bad-continuation)
desc/models/desc.py:205:0: C0330: Wrong continued indentation (add 2 spaces).
	learning_rate=150,
        ^ | (bad-continuation)
desc/models/desc.py:206:0: C0330: Wrong continued indentation (add 2 spaces).
	perplexity=30,
        ^ | (bad-continuation)
desc/models/desc.py:207:0: C0330: Wrong continued indentation (add 2 spaces).
        do_umap=False,
        ^ | (bad-continuation)
desc/models/desc.py:208:0: C0330: Wrong continued indentation (add 2 spaces).
        kernel_clustering="t"
        ^ | (bad-continuation)
desc/models/desc.py:209:0: C0330: Wrong continued indentation.
): 
^        || (bad-continuation)
desc/models/desc.py:209:2: C0303: Trailing whitespace (trailing-whitespace)
desc/models/desc.py:211:0: C0301: Line too long (119/100) (line-too-long)
desc/models/desc.py:212:0: C0303: Trailing whitespace (trailing-whitespace)
desc/models/desc.py:213:0: C0303: Trailing whitespace (trailing-whitespace)
desc/models/desc.py:220:0: C0301: Line too long (240/100) (line-too-long)
desc/models/desc.py:221:0: C0303: Trailing whitespace (trailing-whitespace)
desc/models/desc.py:223:0: C0301: Line too long (188/100) (line-too-long)
desc/models/desc.py:227:0: C0301: Line too long (168/100) (line-too-long)
desc/models/desc.py:228:0: C0301: Line too long (332/100) (line-too-long)
desc/models/desc.py:228:332: C0303: Trailing whitespace (trailing-whitespace)
desc/models/desc.py:230:93: C0303: Trailing whitespace (trailing-whitespace)
desc/models/desc.py:232:0: C0301: Line too long (106/100) (line-too-long)
desc/models/desc.py:232:106: C0303: Trailing whitespace (trailing-whitespace)
desc/models/desc.py:234:0: C0301: Line too long (207/100) (line-too-long)
desc/models/desc.py:236:0: C0301: Line too long (122/100) (line-too-long)
desc/models/desc.py:238:0: C0301: Line too long (120/100) (line-too-long)
desc/models/desc.py:238:120: C0303: Trailing whitespace (trailing-whitespace)
desc/models/desc.py:240:0: C0301: Line too long (119/100) (line-too-long)
desc/models/desc.py:242:0: C0301: Line too long (128/100) (line-too-long)
desc/models/desc.py:244:0: C0301: Line too long (148/100) (line-too-long)
desc/models/desc.py:246:0: C0301: Line too long (118/100) (line-too-long)
desc/models/desc.py:252:0: C0301: Line too long (150/100) (line-too-long)
desc/models/desc.py:252:150: C0303: Trailing whitespace (trailing-whitespace)
desc/models/desc.py:254:0: C0301: Line too long (180/100) (line-too-long)
desc/models/desc.py:254:180: C0303: Trailing whitespace (trailing-whitespace)
desc/models/desc.py:256:0: C0301: Line too long (103/100) (line-too-long)
desc/models/desc.py:256:103: C0303: Trailing whitespace (trailing-whitespace)
desc/models/desc.py:258:0: C0301: Line too long (129/100) (line-too-long)
desc/models/desc.py:264:0: C0301: Line too long (416/100) (line-too-long)
desc/models/desc.py:266:0: C0301: Line too long (347/100) (line-too-long)
desc/models/desc.py:271:22: C0326: Exactly one space required after comma
    if isinstance(data,AnnData):
                      ^ (bad-whitespace)
desc/models/desc.py:272:13: C0326: Exactly one space required around assignment
        adata=data
             ^ (bad-whitespace)
desc/models/desc.py:273:24: C0326: Exactly one space required after comma
    elif isinstance(data,pd.DataFrame):
                        ^ (bad-whitespace)
desc/models/desc.py:274:13: C0326: Exactly one space required around assignment
        adata=sc.AnnData(data,obs=data.index,var=data.columns)
             ^ (bad-whitespace)
desc/models/desc.py:274:29: C0326: Exactly one space required after comma
        adata=sc.AnnData(data,obs=data.index,var=data.columns)
                             ^ (bad-whitespace)
desc/models/desc.py:274:44: C0326: Exactly one space required after comma
        adata=sc.AnnData(data,obs=data.index,var=data.columns)
                                            ^ (bad-whitespace)
desc/models/desc.py:276:9: C0326: Exactly one space required around assignment
        x=data.toarray() if issparse(data) else data
         ^ (bad-whitespace)
desc/models/desc.py:277:13: C0326: Exactly one space required around assignment
        adata=sc.AnnData(x)
             ^ (bad-whitespace)
desc/models/desc.py:280:12: C0326: Exactly one space required around assignment
        dims=getdims(adata.shape)
            ^ (bad-whitespace)
desc/models/desc.py:282:36: C0326: Exactly one space required after comma
    if isinstance(louvain_resolution,float) or isinstance(louvain_resolution,int):
                                    ^ (bad-whitespace)
desc/models/desc.py:282:76: C0326: Exactly one space required after comma
    if isinstance(louvain_resolution,float) or isinstance(louvain_resolution,int):
                                                                            ^ (bad-whitespace)
desc/models/desc.py:283:26: C0326: Exactly one space required around assignment
        louvain_resolution=[float(louvain_resolution)]
                          ^ (bad-whitespace)
desc/models/desc.py:284:39: C0326: Exactly one space required after comma
    elif  isinstance(louvain_resolution,str):
                                       ^ (bad-whitespace)
desc/models/desc.py:285:26: C0326: Exactly one space required around assignment
        louvain_resolution=list(map(float,louvain_resolution.split(",")))
                          ^ (bad-whitespace)
desc/models/desc.py:285:41: C0326: Exactly one space required after comma
        louvain_resolution=list(map(float,louvain_resolution.split(",")))
                                         ^ (bad-whitespace)
desc/models/desc.py:287:0: C0301: Line too long (144/100) (line-too-long)
desc/models/desc.py:287:44: C0326: Exactly one space required after comma
        assert isinstance(louvain_resolution,list),'louvain_resolution must be either a string with spearator "," or a list like [1.0,2.0,3.0] '
                                            ^ (bad-whitespace)
desc/models/desc.py:287:50: C0326: Exactly one space required after comma
        assert isinstance(louvain_resolution,list),'louvain_resolution must be either a string with spearator "," or a list like [1.0,2.0,3.0] '
                                                  ^ (bad-whitespace)
desc/models/desc.py:288:26: C0326: Exactly one space required around assignment
        louvain_resolution=list(map(float,louvain_resolution))
                          ^ (bad-whitespace)
desc/models/desc.py:288:41: C0326: Exactly one space required after comma
        louvain_resolution=list(map(float,louvain_resolution))
                                         ^ (bad-whitespace)
desc/models/desc.py:290:14: C0326: Exactly one space required around assignment
    time_start=get_time()
              ^ (bad-whitespace)
desc/models/desc.py:291:11: C0326: Exactly one space required after comma
    for ith,resolution in enumerate(louvain_resolution):
           ^ (bad-whitespace)
desc/models/desc.py:292:44: C0326: Exactly one space required after comma
        print("Start to process resolution=",str(resolution))
                                            ^ (bad-whitespace)
desc/models/desc.py:293:22: C0326: Exactly one space required around assignment
        use_ae_weights=use_ae_weights if ith==0 else True
                      ^ (bad-whitespace)
desc/models/desc.py:293:44: C0326: Exactly one space required around comparison
        use_ae_weights=use_ae_weights if ith==0 else True
                                            ^^ (bad-whitespace)
desc/models/desc.py:294:11: C0326: Exactly one space required around assignment
        res=train_single(data=data,
           ^ (bad-whitespace)
desc/models/desc.py:295:0: C0330: Wrong continued indentation (add 13 spaces).
            dims=dims,
            ^            | (bad-continuation)
desc/models/desc.py:296:0: C0330: Wrong continued indentation (add 13 spaces).
            alpha=alpha,
            ^            | (bad-continuation)
desc/models/desc.py:297:0: C0330: Wrong continued indentation (add 13 spaces).
            tol=tol,
            ^            | (bad-continuation)
desc/models/desc.py:298:0: C0330: Wrong continued indentation (add 13 spaces).
            init=init,
            ^            | (bad-continuation)
desc/models/desc.py:299:0: C0330: Wrong continued indentation (add 13 spaces).
            louvain_resolution=resolution,
            ^            | (bad-continuation)
desc/models/desc.py:300:0: C0330: Wrong continued indentation (add 13 spaces).
            n_neighbors=n_neighbors,
            ^            | (bad-continuation)
desc/models/desc.py:301:0: C0330: Wrong continued indentation (add 13 spaces).
            pretrain_epochs=pretrain_epochs,
            ^            | (bad-continuation)
desc/models/desc.py:302:0: C0330: Wrong continued indentation (add 13 spaces).
            epochs_fit=epochs_fit,
            ^            | (bad-continuation)
desc/models/desc.py:303:0: C0330: Wrong continued indentation (add 13 spaces).
            batch_size=batch_size,
            ^            | (bad-continuation)
desc/models/desc.py:304:0: C0330: Wrong continued indentation (add 13 spaces).
            activation=activation,
            ^            | (bad-continuation)
desc/models/desc.py:305:0: C0330: Wrong continued indentation (add 13 spaces).
            actincenter=actincenter,
            ^            | (bad-continuation)
desc/models/desc.py:306:0: C0330: Wrong continued indentation (add 13 spaces).
            drop_rate_SAE=drop_rate_SAE,
            ^            | (bad-continuation)
desc/models/desc.py:307:0: C0330: Wrong continued indentation (add 13 spaces).
            is_stacked=is_stacked,
            ^            | (bad-continuation)
desc/models/desc.py:308:0: C0330: Wrong continued indentation (add 13 spaces).
            use_earlyStop=use_earlyStop,
            ^            | (bad-continuation)
desc/models/desc.py:309:0: C0330: Wrong continued indentation (add 13 spaces).
            use_ae_weights=use_ae_weights,
            ^            | (bad-continuation)
desc/models/desc.py:310:0: C0330: Wrong continued indentation (add 13 spaces).
	    save_encoder_weights=save_encoder_weights,
            ^            | (bad-continuation)
desc/models/desc.py:311:0: C0330: Wrong continued indentation (add 13 spaces).
            save_encoder_step=save_encoder_step,
            ^            | (bad-continuation)
desc/models/desc.py:312:0: C0330: Wrong continued indentation (add 13 spaces).
            save_dir=save_dir,
            ^            | (bad-continuation)
desc/models/desc.py:313:0: C0330: Wrong continued indentation (add 13 spaces).
            max_iter=max_iter,
            ^            | (bad-continuation)
desc/models/desc.py:314:0: C0330: Wrong continued indentation (add 13 spaces).
            num_Cores=num_Cores,
            ^            | (bad-continuation)
desc/models/desc.py:315:0: C0330: Wrong continued indentation (add 13 spaces).
            num_Cores_tsne=num_Cores_tsne,
            ^            | (bad-continuation)
desc/models/desc.py:316:0: C0330: Wrong continued indentation (add 13 spaces).
            use_GPU=use_GPU,
            ^            | (bad-continuation)
desc/models/desc.py:317:0: C0330: Wrong continued indentation (add 13 spaces).
            random_seed=random_seed,
            ^            | (bad-continuation)
desc/models/desc.py:318:0: C0330: Wrong continued indentation (add 13 spaces).
            verbose=verbose,
            ^            | (bad-continuation)
desc/models/desc.py:319:0: C0330: Wrong continued indentation (add 13 spaces).
	    do_tsne=do_tsne,
            ^            | (bad-continuation)
desc/models/desc.py:320:0: C0330: Wrong continued indentation (add 13 spaces).
	    learning_rate=learning_rate,
            ^            | (bad-continuation)
desc/models/desc.py:321:0: C0330: Wrong continued indentation (add 13 spaces).
	    perplexity=perplexity,
            ^            | (bad-continuation)
desc/models/desc.py:322:0: C0330: Wrong continued indentation (add 13 spaces).
            do_umap=do_umap,
            ^            | (bad-continuation)
desc/models/desc.py:323:0: C0330: Wrong continued indentation (add 13 spaces).
            kernel_clustering=kernel_clustering)
            ^            | (bad-continuation)
desc/models/desc.py:325:12: C0326: Exactly one space required around assignment
        data=res
            ^ (bad-whitespace)
desc/models/desc.py:326:47: C0326: Exactly one space required after comma
    print("The run time for all resolution is:",get_time()-time_start)
                                               ^ (bad-whitespace)
desc/models/desc.py:327:58: C0326: Exactly one space required after comma
    print("After training, the information of adata is:\n",data)
                                                          ^ (bad-whitespace)
desc/models/desc.py:331:11: C0326: Exactly one space required around comparison
if __name__=='__main__':
           ^^ (bad-whitespace)
desc/models/desc.py:333:0: C0301: Line too long (136/100) (line-too-long)
desc/models/desc.py:333:80: C0326: Exactly one space required after comma
    parser = argparse.ArgumentParser(description='just for simple test train.py',formatter_class=argparse.ArgumentDefaultsHelpFormatter)
                                                                                ^ (bad-whitespace)
desc/models/desc.py:341:9: C0326: Exactly one space required around assignment
    adata=sc.read("../datasets/pbmc.h5ad")
         ^ (bad-whitespace)
desc/models/desc.py:346:0: C0330: Wrong hanging indentation (add 4 spaces).
    adata[:, mito_genes].X, axis=1).A1 / np.sum(adata.X, axis=1).A1
    ^   | (bad-continuation)
desc/models/desc.py:355:0: C0301: Line too long (121/100) (line-too-long)
desc/models/desc.py:355:9: C0326: Exactly one space required around assignment
    adata=train(adata,louvain_resolution=0.6,use_GPU=False,num_Cores=1,use_ae_weights=False,kernel_clustering="gaussian")
         ^ (bad-whitespace)
desc/models/desc.py:355:21: C0326: Exactly one space required after comma
    adata=train(adata,louvain_resolution=0.6,use_GPU=False,num_Cores=1,use_ae_weights=False,kernel_clustering="gaussian")
                     ^ (bad-whitespace)
desc/models/desc.py:355:44: C0326: Exactly one space required after comma
    adata=train(adata,louvain_resolution=0.6,use_GPU=False,num_Cores=1,use_ae_weights=False,kernel_clustering="gaussian")
                                            ^ (bad-whitespace)
desc/models/desc.py:355:58: C0326: Exactly one space required after comma
    adata=train(adata,louvain_resolution=0.6,use_GPU=False,num_Cores=1,use_ae_weights=False,kernel_clustering="gaussian")
                                                          ^ (bad-whitespace)
desc/models/desc.py:355:70: C0326: Exactly one space required after comma
    adata=train(adata,louvain_resolution=0.6,use_GPU=False,num_Cores=1,use_ae_weights=False,kernel_clustering="gaussian")
                                                                      ^ (bad-whitespace)
desc/models/desc.py:355:91: C0326: Exactly one space required after comma
    adata=train(adata,louvain_resolution=0.6,use_GPU=False,num_Cores=1,use_ae_weights=False,kernel_clustering="gaussian")
                                                                                           ^ (bad-whitespace)
desc/models/desc.py:357:0: C0301: Line too long (137/100) (line-too-long)
desc/models/desc.py:357:9: C0326: Exactly one space required around assignment
    adata=train(adata,louvain_resolution=0.6,use_GPU=False,num_Cores=1,use_ae_weights=False,kernel_clustering="t",save_dir="result_tmp2")
         ^ (bad-whitespace)
desc/models/desc.py:357:21: C0326: Exactly one space required after comma
    adata=train(adata,louvain_resolution=0.6,use_GPU=False,num_Cores=1,use_ae_weights=False,kernel_clustering="t",save_dir="result_tmp2")
                     ^ (bad-whitespace)
desc/models/desc.py:357:44: C0326: Exactly one space required after comma
    adata=train(adata,louvain_resolution=0.6,use_GPU=False,num_Cores=1,use_ae_weights=False,kernel_clustering="t",save_dir="result_tmp2")
                                            ^ (bad-whitespace)
desc/models/desc.py:357:58: C0326: Exactly one space required after comma
    adata=train(adata,louvain_resolution=0.6,use_GPU=False,num_Cores=1,use_ae_weights=False,kernel_clustering="t",save_dir="result_tmp2")
                                                          ^ (bad-whitespace)
desc/models/desc.py:357:70: C0326: Exactly one space required after comma
    adata=train(adata,louvain_resolution=0.6,use_GPU=False,num_Cores=1,use_ae_weights=False,kernel_clustering="t",save_dir="result_tmp2")
                                                                      ^ (bad-whitespace)
desc/models/desc.py:357:91: C0326: Exactly one space required after comma
    adata=train(adata,louvain_resolution=0.6,use_GPU=False,num_Cores=1,use_ae_weights=False,kernel_clustering="t",save_dir="result_tmp2")
                                                                                           ^ (bad-whitespace)
desc/models/desc.py:357:113: C0326: Exactly one space required after comma
    adata=train(adata,louvain_resolution=0.6,use_GPU=False,num_Cores=1,use_ae_weights=False,kernel_clustering="t",save_dir="result_tmp2")
                                                                                                                 ^ (bad-whitespace)
desc/models/desc.py:359:0: C0301: Line too long (115/100) (line-too-long)
desc/models/desc.py:360:0: C0301: Line too long (116/100) (line-too-long)
desc/models/desc.py:362:0: C0303: Trailing whitespace (trailing-whitespace)
desc/models/desc.py:363:0: C0303: Trailing whitespace (trailing-whitespace)
desc/models/desc.py:364:0: C0303: Trailing whitespace (trailing-whitespace)
desc/models/desc.py:1:0: C0114: Missing module docstring (missing-module-docstring)
desc/models/desc.py:18:0: C0410: Multiple imports on one line (os, math) (multiple-imports)
desc/models/desc.py:20:0: C0413: Import "import matplotlib" should be placed at the top of the module (wrong-import-position)
desc/models/desc.py:27:0: C0413: Import "from time import time as get_time" should be placed at the top of the module (wrong-import-position)
desc/models/desc.py:28:0: C0413: Import "import random" should be placed at the top of the module (wrong-import-position)
desc/models/desc.py:29:0: C0413: Import "import numpy as np" should be placed at the top of the module (wrong-import-position)
desc/models/desc.py:30:0: E0401: Unable to import 'pandas' (import-error)
desc/models/desc.py:30:0: C0413: Import "import pandas as pd" should be placed at the top of the module (wrong-import-position)
desc/models/desc.py:31:0: E0401: Unable to import 'tensorflow' (import-error)
desc/models/desc.py:31:0: C0413: Import "import tensorflow as tf" should be placed at the top of the module (wrong-import-position)
desc/models/desc.py:32:0: C0413: Import "import multiprocessing" should be placed at the top of the module (wrong-import-position)
desc/models/desc.py:33:0: E0401: Unable to import 'anndata' (import-error)
desc/models/desc.py:33:0: C0413: Import "from anndata import AnnData" should be placed at the top of the module (wrong-import-position)
desc/models/desc.py:34:0: E0401: Unable to import 'scanpy.api' (import-error)
desc/models/desc.py:34:0: C0413: Import "import scanpy.api as sc" should be placed at the top of the module (wrong-import-position)
desc/models/desc.py:35:0: E0401: Unable to import 'keras' (import-error)
desc/models/desc.py:35:0: C0413: Import "from keras import backend as K" should be placed at the top of the module (wrong-import-position)
desc/models/desc.py:36:0: E0401: Unable to import 'scipy.sparse' (import-error)
desc/models/desc.py:36:0: C0413: Import "from scipy.sparse import issparse" should be placed at the top of the module (wrong-import-position)
desc/models/desc.py:37:0: E0401: Unable to import 'keras' (import-error)
desc/models/desc.py:37:0: C0413: Import "import keras" should be placed at the top of the module (wrong-import-position)
desc/models/desc.py:40:0: W0702: No exception type(s) specified (bare-except)
desc/models/desc.py:39:4: W0401: Wildcard import network (wildcard-import)
desc/models/desc.py:41:4: W0401: Wildcard import network (wildcard-import)
desc/models/desc.py:43:12: W0621: Redefining name 'x' from outer scope (line 39) (redefined-outer-name)
desc/models/desc.py:51:8: W0621: Redefining name 'dims' from outer scope (line 39) (redefined-outer-name)
desc/models/desc.py:43:0: C0103: Argument name "x" doesn't conform to snake_case naming style (invalid-name)
desc/models/desc.py:65:22: W0621: Redefining name 'dims' from outer scope (line 39) (redefined-outer-name)
desc/models/desc.py:68:8: W0621: Redefining name 'init' from outer scope (line 39) (redefined-outer-name)
desc/models/desc.py:96:8: W0621: Redefining name 'adata' from outer scope (line 39) (redefined-outer-name)
desc/models/desc.py:123:4: W0621: Redefining name 'desc' from outer scope (line 39) (redefined-outer-name)
desc/models/desc.py:146:14: W0621: Redefining name 'q_pred' from outer scope (line 39) (redefined-outer-name)
desc/models/desc.py:152:4: W0621: Redefining name 'y_pred' from outer scope (line 39) (redefined-outer-name)
desc/models/desc.py:65:0: C0103: Argument name "drop_rate_SAE" doesn't conform to snake_case naming style (invalid-name)
desc/models/desc.py:65:0: C0103: Argument name "use_earlyStop" doesn't conform to snake_case naming style (invalid-name)
desc/models/desc.py:65:0: C0103: Argument name "num_Cores" doesn't conform to snake_case naming style (invalid-name)
desc/models/desc.py:65:0: C0103: Argument name "num_Cores_tsne" doesn't conform to snake_case naming style (invalid-name)
desc/models/desc.py:65:0: C0103: Argument name "use_GPU" doesn't conform to snake_case naming style (invalid-name)
desc/models/desc.py:65:0: C0116: Missing function or method docstring (missing-function-docstring)
desc/models/desc.py:65:0: R0913: Too many arguments (30/5) (too-many-arguments)
desc/models/desc.py:65:0: R0914: Too many local variables (37/15) (too-many-locals)
desc/models/desc.py:108:4: W0106: Expression "tf.set_random_seed(random_seed) if tf.__version__ <= '2.0' else tf.random.set_seed(random_seed)" is assigned to nothing (expression-not-assigned)
desc/models/desc.py:146:4: C0103: Variable name "Embeded_z" doesn't conform to snake_case naming style (invalid-name)
desc/models/desc.py:180:15: W0621: Redefining name 'dims' from outer scope (line 39) (redefined-outer-name)
desc/models/desc.py:183:8: W0621: Redefining name 'init' from outer scope (line 39) (redefined-outer-name)
desc/models/desc.py:272:8: W0621: Redefining name 'adata' from outer scope (line 39) (redefined-outer-name)
desc/models/desc.py:276:8: W0621: Redefining name 'x' from outer scope (line 39) (redefined-outer-name)
desc/models/desc.py:180:0: W0102: Dangerous default value [] as argument (dangerous-default-value)
desc/models/desc.py:180:0: C0103: Argument name "drop_rate_SAE" doesn't conform to snake_case naming style (invalid-name)
desc/models/desc.py:180:0: C0103: Argument name "use_earlyStop" doesn't conform to snake_case naming style (invalid-name)
desc/models/desc.py:180:0: C0103: Argument name "num_Cores" doesn't conform to snake_case naming style (invalid-name)
desc/models/desc.py:180:0: C0103: Argument name "num_Cores_tsne" doesn't conform to snake_case naming style (invalid-name)
desc/models/desc.py:180:0: C0103: Argument name "use_GPU" doesn't conform to snake_case naming style (invalid-name)
desc/models/desc.py:180:0: R0913: Too many arguments (30/5) (too-many-arguments)
desc/models/desc.py:180:0: R0914: Too many local variables (36/15) (too-many-locals)
desc/models/desc.py:276:8: C0103: Variable name "x" doesn't conform to snake_case naming style (invalid-name)
desc/models/desc.py:282:7: R1701: Consider merging these isinstance calls to isinstance(louvain_resolution, (float, int)) (consider-merging-isinstance)
desc/models/desc.py:337:4: W0404: Reimport 'os' (imported line 18) (reimported)
desc/models/desc.py:345:32: E1101: Instance of 'ndarray' has no 'A1' member (no-member)
desc/models/desc.py:346:41: E1101: Instance of 'ndarray' has no 'A1' member (no-member)
desc/models/desc.py:39:4: W0614: Unused import nx from wildcard import (unused-wildcard-import)
desc/models/desc.py:39:4: W0614: Unused import plt from wildcard import (unused-wildcard-import)
desc/models/desc.py:39:4: W0614: Unused import ClusteringLayer from wildcard import (unused-wildcard-import)
desc/models/desc.py:39:4: W0614: Unused import ClusteringLayerGaussian from wildcard import (unused-wildcard-import)
desc/models/desc.py:39:4: W0614: Unused import load_mnist from wildcard import (unused-wildcard-import)
desc/models/desc.py:39:4: W0614: Unused import x from wildcard import (unused-wildcard-import)
desc/models/desc.py:39:4: W0614: Unused import y from wildcard import (unused-wildcard-import)
desc/models/desc.py:39:4: W0614: Unused import init from wildcard import (unused-wildcard-import)
desc/models/desc.py:39:4: W0614: Unused import dims from wildcard import (unused-wildcard-import)
desc/models/desc.py:39:4: W0614: Unused import desc from wildcard import (unused-wildcard-import)
desc/models/desc.py:39:4: W0614: Unused import t0 from wildcard import (unused-wildcard-import)
desc/models/desc.py:39:4: W0614: Unused import Embedded_z from wildcard import (unused-wildcard-import)
desc/models/desc.py:39:4: W0614: Unused import q_pred from wildcard import (unused-wildcard-import)
desc/models/desc.py:39:4: W0614: Unused import y_pred from wildcard import (unused-wildcard-import)
desc/models/desc.py:39:4: W0614: Unused import obs_info from wildcard import (unused-wildcard-import)
desc/models/desc.py:39:4: W0614: Unused import Layer from wildcard import (unused-wildcard-import)
desc/models/desc.py:39:4: W0614: Unused import InputSpec from wildcard import (unused-wildcard-import)
desc/models/desc.py:39:4: W0614: Unused import TensorBoard from wildcard import (unused-wildcard-import)
desc/models/desc.py:39:4: W0614: Unused import ModelCheckpoint from wildcard import (unused-wildcard-import)
desc/models/desc.py:39:4: W0614: Unused import EarlyStopping from wildcard import (unused-wildcard-import)
desc/models/desc.py:39:4: W0614: Unused import ReduceLROnPlateau from wildcard import (unused-wildcard-import)
desc/models/desc.py:39:4: W0614: Unused import History from wildcard import (unused-wildcard-import)
desc/models/desc.py:39:4: W0614: Unused import Dense from wildcard import (unused-wildcard-import)
desc/models/desc.py:39:4: W0614: Unused import Input from wildcard import (unused-wildcard-import)
desc/models/desc.py:39:4: W0614: Unused import Model from wildcard import (unused-wildcard-import)
desc/models/desc.py:39:4: W0614: Unused import load_model from wildcard import (unused-wildcard-import)
desc/models/desc.py:39:4: W0614: Unused import callbacks from wildcard import (unused-wildcard-import)
desc/models/desc.py:39:4: W0614: Unused import VarianceScaling from wildcard import (unused-wildcard-import)
desc/models/desc.py:39:4: W0614: Unused import KMeans from wildcard import (unused-wildcard-import)
desc/models/desc.py:39:4: W0614: Unused import natsorted from wildcard import (unused-wildcard-import)
desc/models/desc.py:39:4: W0614: Unused import SAE from wildcard import (unused-wildcard-import)
desc/models/desc.py:337:4: C0412: Imports from package os are not grouped (ungrouped-imports)
************* Module desc.tools.preprocessing
desc/tools/preprocessing.py:47:23: C0326: Exactly one space required after comma
def scale_bygroup(adata,groupby,max_value=6):
                       ^ (bad-whitespace)
desc/tools/preprocessing.py:47:31: C0326: Exactly one space required after comma
def scale_bygroup(adata,groupby,max_value=6):
                               ^ (bad-whitespace)
desc/tools/preprocessing.py:48:7: C0326: Exactly one space required around assignment
    res=None
       ^ (bad-whitespace)
desc/tools/preprocessing.py:49:27: C0326: Exactly one space required after comma
    assert isinstance(adata,AnnData),'adata must be AnnData class'
                           ^ (bad-whitespace)
desc/tools/preprocessing.py:49:36: C0326: Exactly one space required after comma
    assert isinstance(adata,AnnData),'adata must be AnnData class'
                                    ^ (bad-whitespace)
desc/tools/preprocessing.py:50:11: C0326: Exactly one space required around assignment
    adata.X=adata.X.toarray() if issparse(adata.X) else adata.X
           ^ (bad-whitespace)
desc/tools/preprocessing.py:52:10: C0326: Exactly one space required around assignment
        df=pd.Series(adata.obs[groupby],dtype="category")
          ^ (bad-whitespace)
desc/tools/preprocessing.py:52:39: C0326: Exactly one space required after comma
        df=pd.Series(adata.obs[groupby],dtype="category")
                                       ^ (bad-whitespace)
desc/tools/preprocessing.py:54:15: C0326: Exactly one space required around assignment
            tmp=adata[df==category]
               ^ (bad-whitespace)
desc/tools/preprocessing.py:54:24: C0326: Exactly one space required around comparison
            tmp=adata[df==category]
                        ^^ (bad-whitespace)
desc/tools/preprocessing.py:55:15: C0326: Exactly one space required around assignment
            tmp=tmp.X
               ^ (bad-whitespace)
desc/tools/preprocessing.py:56:15: C0326: Exactly one space required around assignment
            tmp=np.asarray(tmp)
               ^ (bad-whitespace)
desc/tools/preprocessing.py:57:17: C0326: Exactly one space required after comma
            mean0,var0=get_mean_var(tmp)
                 ^ (bad-whitespace)
desc/tools/preprocessing.py:57:22: C0326: Exactly one space required around assignment
            mean0,var0=get_mean_var(tmp)
                      ^ (bad-whitespace)
desc/tools/preprocessing.py:58:15: C0326: Exactly one space required around assignment
            sd0=np.sqrt(var0)
               ^ (bad-whitespace)
desc/tools/preprocessing.py:59:19: C0326: Exactly one space required around comparison
            sd0[sd0<=1e-5]=1e-5
                   ^^ (bad-whitespace)
desc/tools/preprocessing.py:59:26: C0326: Exactly one space required around assignment
            sd0[sd0<=1e-5]=1e-5
                          ^ (bad-whitespace)
desc/tools/preprocessing.py:60:15: C0326: Exactly one space required around assignment
            tmp-=mean0
               ^^ (bad-whitespace)
desc/tools/preprocessing.py:61:15: C0326: Exactly one space required around assignment
            tmp/=sd0
               ^^ (bad-whitespace)
desc/tools/preprocessing.py:63:23: C0326: Exactly one space required around comparison
                tmp[tmp>max_value]=max_value
                       ^ (bad-whitespace)
desc/tools/preprocessing.py:63:34: C0326: Exactly one space required around assignment
                tmp[tmp>max_value]=max_value
                                  ^ (bad-whitespace)
desc/tools/preprocessing.py:64:22: C0326: Exactly one space required around comparison
            adata.X[df==category]=tmp.copy()
                      ^^ (bad-whitespace)
desc/tools/preprocessing.py:64:33: C0326: Exactly one space required around assignment
            adata.X[df==category]=tmp.copy()
                                 ^ (bad-whitespace)
desc/tools/preprocessing.py:66:0: C0301: Line too long (108/100) (line-too-long)
desc/tools/preprocessing.py:67:11: C0326: Exactly one space required around assignment
        res=adata.X
           ^ (bad-whitespace)
desc/tools/preprocessing.py:69:13: C0326: Exactly one space required after comma
        mean0,var0=get_mean_var(res)
             ^ (bad-whitespace)
desc/tools/preprocessing.py:69:18: C0326: Exactly one space required around assignment
        mean0,var0=get_mean_var(res)
                  ^ (bad-whitespace)
desc/tools/preprocessing.py:70:11: C0326: Exactly one space required around assignment
        sd0=np.sqrt(var0)
           ^ (bad-whitespace)
desc/tools/preprocessing.py:71:15: C0326: Exactly one space required around comparison
        sd0[sd0<=1e-5]=1e-5
               ^^ (bad-whitespace)
desc/tools/preprocessing.py:71:22: C0326: Exactly one space required around assignment
        sd0[sd0<=1e-5]=1e-5
                      ^ (bad-whitespace)
desc/tools/preprocessing.py:73:15: C0326: Exactly one space required around assignment
            res=res.toarray()
               ^ (bad-whitespace)
desc/tools/preprocessing.py:74:11: C0326: Exactly one space required around assignment
        res-=mean0
           ^^ (bad-whitespace)
desc/tools/preprocessing.py:75:11: C0326: Exactly one space required around assignment
        res/=sd0
           ^^ (bad-whitespace)
desc/tools/preprocessing.py:76:15: C0326: Exactly one space required around comparison
        res[res>max_value]=max_value
               ^ (bad-whitespace)
desc/tools/preprocessing.py:76:26: C0326: Exactly one space required around assignment
        res[res>max_value]=max_value
                          ^ (bad-whitespace)
desc/tools/preprocessing.py:77:15: C0326: Exactly one space required around assignment
        adata.X=res
               ^ (bad-whitespace)
desc/tools/preprocessing.py:79:0: C0305: Trailing newlines (trailing-newlines)
desc/tools/preprocessing.py:1:0: C0114: Missing module docstring (missing-module-docstring)
desc/tools/preprocessing.py:2:0: E0401: Unable to import 'pandas' (import-error)
desc/tools/preprocessing.py:3:0: E0401: Unable to import 'scipy.sparse' (import-error)
desc/tools/preprocessing.py:4:0: E0401: Unable to import 'anndata' (import-error)
desc/tools/preprocessing.py:7:0: C0103: Argument name "x" doesn't conform to snake_case naming style (invalid-name)
desc/tools/preprocessing.py:15:0: C0116: Missing function or method docstring (missing-function-docstring)
desc/tools/preprocessing.py:24:0: C0103: Argument name "X" doesn't conform to snake_case naming style (invalid-name)
desc/tools/preprocessing.py:24:0: C0116: Missing function or method docstring (missing-function-docstring)
desc/tools/preprocessing.py:28:4: W0125: Using a conditional statement with a constant value (using-constant-test)
desc/tools/preprocessing.py:39:8: E0401: Unable to import 'sklearn.preprocessing' (import-error)
desc/tools/preprocessing.py:39:8: C0415: Import outside toplevel (sklearn.preprocessing.StandardScaler) (import-outside-toplevel)
desc/tools/preprocessing.py:47:0: C0116: Missing function or method docstring (missing-function-docstring)
desc/tools/preprocessing.py:52:8: C0103: Variable name "df" doesn't conform to snake_case naming style (invalid-name)
************* Module desc.tools.write
desc/tools/write.py:1:0: C0114: Missing module docstring (missing-module-docstring)
desc/tools/write.py:5:0: C0116: Missing function or method docstring (missing-function-docstring)
desc/tools/write.py:5:0: R1711: Useless return at end of function or method (useless-return)
************* Module desc.tools.__init__
desc/tools/__init__.py:16:0: C0305: Trailing newlines (trailing-newlines)
************* Module desc.tools
desc/tools/__init__.py:1:0: C0114: Missing module docstring (missing-module-docstring)
desc/tools/__init__.py:1:0: E0401: Unable to import 'anndata' (import-error)
desc/tools/__init__.py:2:0: E0401: Unable to import 'scanpy.api.pp' (import-error)
************* Module desc.tools.downstream
desc/tools/downstream.py:17:0: C0301: Line too long (113/100) (line-too-long)
************* Module desc.tools.read
desc/tools/read.py:1:0: C0114: Missing module docstring (missing-module-docstring)
desc/tools/read.py:1:0: E0401: Unable to import 'anndata' (import-error)
desc/tools/read.py:2:0: E0401: Unable to import 'anndata.utils' (import-error)
desc/tools/read.py:3:0: E0401: Unable to import 'pandas' (import-error)
desc/tools/read.py:6:0: C0103: Function name "read_10X" doesn't conform to snake_case naming style (invalid-name)
desc/tools/read.py:6:0: C0116: Missing function or method docstring (missing-function-docstring)
desc/tools/read.py:14:11: R1714: Consider merging these comparisons with "in" to "var_names in ('gene_symbols', 'gene_ids')" (consider-using-in)
************* Module desc.tools.test
desc/tools/test.py:1:0: C0114: Missing module docstring (missing-module-docstring)
desc/tools/test.py:6:0: C0116: Missing function or method docstring (missing-function-docstring)
desc/tools/test.py:6:0: R1711: Useless return at end of function or method (useless-return)
desc/tools/test.py:1:0: R0801: Similar lines in 2 files
==desc.original.__main__:25
==desc.original.main:21
def parse_args():
    parser = argparse.ArgumentParser(description='Deep Embeded Single Cell Clustering!!')
    parser.add_argument('-i','--input',type=str,help=textwrap.dedent(''' Input is raw count data in TSV(tsv,tab,data)/CSV or .h5ad(anndata) format'
                         'Row/col names are mandatory. Note that TSV/CSV files must be in gene×cell layout where rows are genes and
                          cols are cells(scRNA-seq convention). Use the -t/--transpose option if your count matrix in cell×gene layou                          t.H5AD files must be in cell*gene format(stats and scanpy convention), or '
                          'if directory, "matrix.mtx","barcodes.tsv","genes.tsv" must be included and separate by "tab separator".
                           matrix.mtx example:
                            %%MatrixMarket matrix coordinate integer general
                            35635 29065 17570845
                            63 1 1
                            82 1 1
                            114 1 1
                            152 1 1
                            167 1 3
                            .....

                            barcodes.tsv example:
                            cellname    batchID nUMI ...
                            AAACATACAACCAC  tenx    20000   ....
                            AAACATTGAGCTAC  tenx    10000   ....
                            AAACATTGATCAGC  tenx    12000
                            AAACATTGATCAGC  smartseq    300000  ....
                            or when no columns name the first columns will be regarded as  cellname
                            .....

                            genes.tsv example:
                            genename    geneID
                            MIR1302-10  ensembl1
                            FAM138A ensembl1
                            OR4F5   ensembl1
                            RP11-34P13.7    ensembl1
                            RP11-34P13.8    ensembl1
                            or when no columns name the first columns will be regarded as  genename, if only have two columns,
                            the second column will be regarded as gene name" '''))
    parser.add_argument('-o','--output',type=str,default='adata.h5ad',help="The file name of the output`anndata`")
    #transpose if layout is gene*cell
    parser.add_argument('-t','--transpose',type=bool,default=False,help="Transpose input matrix(default:False) only True when input is cell*gene")
    #parameter to pre filter cells
    parser.add_argument('--prefilter_cells',type=bool,default=True,help='Prefilter cells')
    parser.add_argument('--c_min_genes',type=int,default=1,help='')
    parser.add_argument('--c_max_genes',type=int,default=None,help='')
    parser.add_argument('--c_min_counts',type=int,default=None,help='')
    parser.add_argument('--c_max_counts',type=int,default=None,help='')
    #parameter to filter cells according to mito_percent
    parser.add_argument('--filter_cells_mito',type=bool,default=True,help='Whether filter cells according to mito_percent')
    parser.add_argument('--mito_percent_cutoff',type=float, default=0.10,help='The cell with mito_percent>0.20 will be filtered.')
    parser.add_argument('-nUMIbefore_filter_MT_gene',type=bool,default=True,help='Compute n_counts and n_gene before filtering MT-ge                        ne if nUMIbefore_filter_MT_gene==True')
    #parameter to normalization cell

    parser.add_argument('--normalize_per_cell',type=bool,default=False,help='Normalize cells. if normalize_cell=False')
    parser.add_argument('--counts_per_cell_after',default=1e4,action='store_true',help=textwrap.dedent(''' `float` or `None`, optional (default:
            `1e4`)If `None`, after normalization, each cell has a total count equal  to the median of the
             *counts_per_cell* before normalization.'''))
    parser.add_argument('--counts_per_cell',default=None,action='store_true',help='`float` or `None`, optional(default:`None`) Precomputed counts per cell.')
    #parameter to pre filter genes
    parser.add_argument('--prefilter_genes',type=bool,default=True,help='Prefilter cells')
    parser.add_argument('--g_min_cells',type=int,default=1,help='')
    parser.add_argument('--g_max_cells',type=int,default=None,help='')
    parser.add_argument('--g_min_counts',type=int,default=None,help='')
    parser.add_argument('--g_max_counts',type=int,default=None,help='')
    #parameter to find variable genes
    parser.add_argument('--find_variable_genes',type=bool,default=True,help='find variable genes, the parameter is same as scanpy.api.pp.filter_gene_dispersion')
    parser.add_argument('--flavor',type=str,default='seurat',help=textwrap.dedent(''' "{'seurat', 'cell_ranger'}, optional (default: 'seurat')
        Choose the flavor for computing normalized dispersion. If choosing
        'seurat', this expects non-logarithmized data - the logarithm of mean
        and dispersion is taken internally when `log` is at its default value
        `True`. For 'cell_ranger', this is usually called for logarithmized data
        - in this case you should set `log` to `False`. In their default
        workflows, Seurat passes the cutoffs whereas Cell Ranger passes
        `n_top_genes`.min_mean=0.0125, max_mean=3, min_disp=0.5, max_disp=`None` : `float`, optional
        If `n_top_genes` unequals `None`, these cutoffs for the means and the
        normalized dispersions are ignored." '''))
    parser.add_argument('--min_mean',type=float,default=0.0125)
    parser.add_argument('--max_mean',type=float,default=None)
    parser.add_argument('--min_disp',type=float,default=None)
    parser.add_argument('--max_disp',type=float,default=None)
    parser.add_argument('--n_top_genes',type=int,default=1000,help="Number of highly-variable genes to keep.")
    #parameter take lop1p
    parser.add_argument('--log1p',type=bool,default=True,help='Take log1p transformation after find variable genes')
    #parameter scale_by_group
    parser.add_argument('--scale_data',type=int,default=1,help='one of [0,1,2],0:no scale, 1:scale overall cells 2:scale by group')
    parser.add_argument('--group',type=str,default=None,help='Scale gene by group, group must be the columns of adata.')
    parser.add_argument('--max_value',type=str,default=None,help='The maxmum value after scale')

    #parameter desc model (duplicate-code)
desc/tools/test.py:1:0: R0801: Similar lines in 2 files
==desc.original.DESC:37
==desc.original.network:37
class ClusteringLayer(Layer):
    """
    Clustering layer converts input sample (feature) to soft label, i.e. a vector that represents the probability of the
    sample belonging to each cluster. The probability is calculated with student's t-distribution.

    # Example
    ```
        model.add(ClusteringLayer(n_clusters=10))
    ```
    # Arguments
        n_clusters: number of clusters.
        weights: list of Numpy array with shape `(n_clusters, n_features)` witch represents the initial cluster centers.
        alpha: parameter in Student's t-distribution. Default to 1.0.
    # Input shape
        2D tensor with shape: `(n_samples, n_features)`.
    # Output shape
        2D tensor with shape: `(n_samples, n_clusters)`.
    """

    def __init__(self, n_clusters, weights=None, alpha=1.0, **kwargs):
        if 'input_shape' not in kwargs and 'input_dim' in kwargs:
            kwargs['input_shape'] = (kwargs.pop('input_dim'),)
        super(ClusteringLayer, self).__init__(**kwargs)
        self.n_clusters = n_clusters
        self.alpha = alpha
        self.initial_weights = weights
        self.input_spec = InputSpec(ndim=2)

    def build(self, input_shape):
        assert len(input_shape) == 2
        input_dim = input_shape[1]
        self.input_spec = InputSpec(dtype=K.floatx(), shape=(None, input_dim))
        self.clusters = self.add_weight((self.n_clusters, input_dim), initializer='glorot_uniform', name='clusters')
        if self.initial_weights is not None:
            self.set_weights(self.initial_weights)
            del self.initial_weights
        self.built = True

    def call(self, inputs, **kwargs):
        """ student t-distribution, as same as used in t-SNE algorithm.
                 q_ij = 1/(1+dist(x_i, u_j)^2), then normalize it.
        Arguments:
            inputs: the variable containing data, shape=(n_samples, n_features)
        Return:
            q: student's t-distribution, or soft labels for each sample. shape=(n_samples, n_clusters)
        """
        q = 1.0 / (1.0 + (K.sum(K.square(K.expand_dims(inputs, axis=1) - self.clusters), axis=2) / self.alpha))
        q **= (self.alpha + 1.0) / 2.0
        q = K.transpose(K.transpose(q) / K.sum(q, axis=1))
        return q

    def compute_output_shape(self, input_shape):
        assert input_shape and len(input_shape) == 2
        return input_shape[0], self.n_clusters

    def get_config(self):
        config = {'n_clusters': self.n_clusters}
        base_config = super(ClusteringLayer, self).get_config()
        return dict(list(base_config.items()) + list(config.items()))

 (duplicate-code)
desc/tools/test.py:1:0: R0801: Similar lines in 3 files
==desc.models.network:42
==desc.original.DESC:37
==desc.original.network:37
class ClusteringLayer(Layer):
    """
    Clustering layer converts input sample (feature) to soft label, i.e. a vector that represents the probability of the
    sample belonging to each cluster. The probability is calculated with student's t-distribution.

    # Example
    ```
        model.add(ClusteringLayer(n_clusters=10))
    ```
    # Arguments
        n_clusters: number of clusters.
        weights: list of Numpy array with shape `(n_clusters, n_features)` witch represents the initial cluster centers.
        alpha: parameter in Student's t-distribution. Default to 1.0.
    # Input shape
        2D tensor with shape: `(n_samples, n_features)`.
    # Output shape
        2D tensor with shape: `(n_samples, n_clusters)`.
    """

    def __init__(self, n_clusters, weights=None, alpha=1.0, **kwargs):
        if 'input_shape' not in kwargs and 'input_dim' in kwargs:
            kwargs['input_shape'] = (kwargs.pop('input_dim'),)
        super(ClusteringLayer, self).__init__(**kwargs)
        self.n_clusters = n_clusters
        self.alpha = alpha
        self.initial_weights = weights
        self.input_spec = InputSpec(ndim=2)

    def build(self, input_shape):
        assert len(input_shape) == 2
        input_dim = input_shape[1]
        self.input_spec = InputSpec(dtype=K.floatx(), shape=(None, input_dim))
        self.clusters = self.add_weight((self.n_clusters, input_dim), initializer='glorot_uniform', name='clusters')
        if self.initial_weights is not None:
            self.set_weights(self.initial_weights)
            del self.initial_weights
        self.built = True

    def call(self, inputs, **kwargs):
        """ student t-distribution, as same as used in t-SNE algorithm.
                 q_ij = 1/(1+dist(x_i, u_j)^2), then normalize it.
        Arguments:
            inputs: the variable containing data, shape=(n_samples, n_features)
        Return:
            q: student's t-distribution, or soft labels for each sample. shape=(n_samples, n_clusters)
        """
        q = 1.0 / (1.0 + (K.sum(K.square(K.expand_dims(inputs, axis=1) - self.clusters), axis=2) / self.alpha))
        q **= (self.alpha + 1.0) / 2.0
        q = K.transpose(K.transpose(q) / K.sum(q, axis=1))
        return q

    def compute_output_shape(self, input_shape):
        assert input_shape and len(input_shape) == 2
        return input_shape[0], self.n_clusters

    def get_config(self):
        config = {'n_clusters': self.n_clusters}
        base_config = super(ClusteringLayer, self).get_config()
        return dict(list(base_config.items()) + list(config.items()))
 (duplicate-code)
desc/tools/test.py:1:0: R0801: Similar lines in 2 files
==desc.models.SAE:174
==desc.original.SAE:132
        print ('Copying layer-wise pretrained weights to deep autoencoders')
        for i in range(self.n_stacks):
            name = 'encoder_%d' % i
            self.autoencoders.get_layer(name).set_weights(self.stacks[i].get_layer(name).get_weights())
            name = 'decoder_%d' % i
            self.autoencoders.get_layer(name).set_weights(self.stacks[i].get_layer(name).get_weights())

        print ('Fine-tuning autoencoder end-to-end')
        for j in range(math.ceil(epochs/50)):
            lr = pow(10, -j)
            print ('learning rate =', lr)
            self.autoencoders.compile(optimizer=SGD(lr, momentum=0.9), loss='mse')
            self.autoencoders.fit(x=x, y=x, batch_size=self.batch_size, epochs=50)

    def fit(self, x, epochs=300,decaying_step=3):
        self.pretrain_stacks(x, epochs=int(epochs/2),decaying_step=decaying_step)
        self.pretrain_autoencoders(x, epochs=epochs)

    def fit2(self,x,epochs=300): #no stack directly traning
        for j in range(math.ceil(epochs/50)):
            lr = pow(10, -j)
            print ('learning rate =', lr)
            self.autoencoders.compile(optimizer=SGD(lr, momentum=0.9), loss='mse')
            if self.use_earlyStop:
                callbacks=[EarlyStopping(monitor='loss',min_delta=1e-4,patience=10,verbose=1,mode='auto')]
                self.autoencoders.fit(x=x,y=x,callbacks=callbacks,batch_size=self.batch_size,epochs=epochs)
            else:
                  self.autoencoders.fit(x=x, y=x, batch_size=self.batch_size, epochs=50)

    def extract_feature(self, x):
        """
        Extract features from the middle layer of autoencoders.

        :param x: data
        :return: features
        """ (duplicate-code)
desc/tools/test.py:1:0: R0801: Similar lines in 2 files
==desc.original.DESC:191
==desc.original.network:217
            Mergefeature=pd.concat([features,Group],axis=1)
            cluster_centers=np.asarray(Mergefeature.groupby("Group").mean())
            self.n_clusters=cluster_centers.shape[0]
            self.init_centroid=[cluster_centers]
        #create desc clustering layer
        clustering_layer = ClusteringLayer(self.n_clusters,weights=self.init_centroid,name='clustering')(self.encoder.output)
        self.model = Model(inputs=self.encoder.input, outputs=clustering_layer)



    def load_weights(self, weights):  # load weights of DEC model
        self.model.load_weights(weights)

    def extract_features(self, x):
        return self.encoder.predict(x)

    def predict(self, x):  # predict cluster labels using the output of clustering layer
        q = self.model.predict(x, verbose=0)
        return q.argmax(1)

    @staticmethod
    def target_distribution(q):
        weight = q ** 2 / q.sum(0)
        return (weight.T / weight.sum(1)).T

    def compile(self, optimizer='sgd', loss='kld'):
        self.model.compile(optimizer=optimizer, loss=loss)

    def fit(self, maxiter=1e3, epochs_fit=5): # unsupervised
        save_dir=self.save_dir
        #step1 initial weights by louvain,or Kmeans
        self.model.get_layer(name='clustering').set_weights(self.init_centroid)
        # Step 2: deep clustering
        y_pred_last = np.copy(self.init_pred)
        for ite in range(int(maxiter)): (duplicate-code)
desc/tools/test.py:1:0: R0801: Similar lines in 2 files
==desc.original.__main__:141
==desc.original.main:132
    try:
        import tensorflow as tf
    except ImportError:
        raise ImportError('DESC requires tensorflow. please follow instructions at https://www.tensorflow.org/install/ to install it')
    #Step1. create data
    adata=io.read_dataset(args.input,transpose=args.transpose)
    #Step2. prefilter data
    if args.prefilter_cells:
        io.prefilter_cells(adata,min_counts=args.c_min_genes,max_counts=args.c_max_counts,min_genes=args.c_min_genes,max_genes=args.c_max_genes)
    #filter cells according mito_percent and filter MT_gene, and computer nUMI nGene before and after filter MT_genes
    if args.filter_cells_mito:
        io.filter_cells_mito(adata,mito_percent_cutoff=args.mito_percent_cutoff,nUMIbefore_filter_MT_gene=args.nUMIbefore_filter_MT_gene)
    #normalize data
    if args.normalize_per_cell:
        sc.pp.normalize_per_cell(adata,counts_per_cell_after=args.counts_per_cell_after,counts_per_cell=args.counts_per_cell)
        adata.raw=sc.pp.log1p(adata,copy=True)

    ## prefilter genes
    if args.prefilter_genes:
        io.prefilter_genes(adata,min_counts=args.g_min_counts,max_counts=args.g_min_counts,min_cells=args.g_min_cells,max_cells=args.g_max_cells)
    #find variable genes
    if args.find_variable_genes:
        assert args.flavor in ["seurat","cell_ranger"],"flavor must be one of{'seurat', 'cell_ranger'}"
        sc.pp.filter_genes_dispersion(adata,max_mean=args.max_mean,min_disp=args.min_disp,max_disp=args.max_disp,n_top_genes=args.n_top_genes)
    #take log-transformation
    if args.log1p:
        sc.pp.log1p(adata)
    if args.scale_data:
        assert args.scale_data in [0,1,2],'`scale_data` must be of one of 0,1,2'
        adata=io.scale_by_group(adata,groupby=args.group,max_value=args.max_value)
    #from . import train (duplicate-code)
desc/tools/test.py:1:0: R0801: Similar lines in 2 files
==desc.models.network:333
==desc.original.network:254
                print('Fine tuning encoder weights are saved to %s/encoder_weights.h5' % self.save_dir)
            q = self.model.predict(self.x, verbose=0)
            p = self.target_distribution(q)  # update the auxiliary target distribution p
            # evaluate the clustering performance
            y_pred = q.argmax(1)
             # check stop criterion
            delta_label = np.sum(y_pred != y_pred_last).astype(np.float32) / y_pred.shape[0]
            y_pred_last = np.copy(y_pred)
            if ite > 0 and delta_label < self.tol:
                print('delta_label ', delta_label, '< tol ', self.tol)
                print('Reached tolerance threshold. Stop training.')
                break
            print("The value of delta_label of current",str(ite+1),"th iteration is",delta_label,">= tol",self.tol)
            #train on whole dataset on prespecified batch_size
            if self.use_earlyStop:
                callbacks=[EarlyStopping(monitor='loss',min_delta=1e-4,patience=5,verbose=1,mode='auto')]
                self.model.fit(x=self.x,y=p,epochs=epochs_fit,batch_size=self.batch_size,callbacks=callbacks,shuffle=True,verbose=True)
            else:
                self.model.fit(x=self.x,y=p,epochs=epochs_fit,batch_size=self.batch_size,shuffle=True,verbose=True)
        #save encoder model
        self.encoder.save(os.path.join(self.save_dir,"encoder_model.h5"))
        #load model
        #encoder=load_model("encoder.h5")
        #

        y0=pd.Series(y_pred,dtype='category')
        y0.cat.categories=range(0,len(y0.cat.categories))
        print("The final prediction cluster is:")
        x=y0.value_counts()
        print(x.sort_index(ascending=True)) (duplicate-code)
desc/tools/test.py:1:0: R0801: Similar lines in 2 files
==desc.models.SAE:148
==desc.original.SAE:107
        features = x
        for i in range(self.n_stacks):
            print( 'Pretraining the %dth layer...' % (i+1))
            for j in range(int(decaying_step)):  # learning rate multiplies 0.1 every 'epochs/decaying_step' epochs
                print ('learning rate =', pow(10, -1-j))
                self.stacks[i].compile(optimizer=SGD(pow(10, -1-j), momentum=0.9), loss='mse')
                if self.use_earlyStop is True:
                    callbacks=[EarlyStopping(monitor='loss',min_delta=1e-4,patience=10,verbose=1,mode='auto')]
                    self.stacks[i].fit(features,features,callbacks=callbacks,batch_size=self.batch_size,epochs=math.ceil(epochs/decaying_step))
                else:
                    self.stacks[i].fit(x=features,y=features,batch_size=self.batch_size,epochs=math.ceil(epochs/decaying_step))
            print ('The %dth layer has been pretrained.' % (i+1))

            # update features to the inputs of the next layer
            feature_model = Model(inputs=self.stacks[i].input, outputs=self.stacks[i].get_layer('encoder_%d'%i).output)
            features = feature_model.predict(features)

    def pretrain_autoencoders(self, x, epochs=300):
        """
        Fine tune autoendoers end-to-end after layer-wise pretraining using 'pretrain_stacks()'
        Use SGD with learning rate = 0.1, decayed 10 times every 80 epochs

        Arguments:
        x: input data, shape=(n_samples, n_dims)
        epochs: training epochs (duplicate-code)
desc/tools/test.py:1:0: R0801: Similar lines in 3 files
==desc.models.network:259
==desc.original.DESC:196
==desc.original.network:222
        clustering_layer = ClusteringLayer(self.n_clusters,weights=self.init_centroid,name='clustering')(self.encoder.output)
        self.model = Model(inputs=self.encoder.input, outputs=clustering_layer)



    def load_weights(self, weights):  # load weights of DEC model
        self.model.load_weights(weights)

    def extract_features(self, x):
        return self.encoder.predict(x)

    def predict(self, x):  # predict cluster labels using the output of clustering layer
        q = self.model.predict(x, verbose=0)
        return q.argmax(1)

    @staticmethod
    def target_distribution(q):
        weight = q ** 2 / q.sum(0)
        return (weight.T / weight.sum(1)).T

    def compile(self, optimizer='sgd', loss='kld'):
        self.model.compile(optimizer=optimizer, loss=loss)
 (duplicate-code)
desc/tools/test.py:1:0: R0801: Similar lines in 2 files
==desc.original.preprocessing:173
==desc.original.train:48
def getdims(x=(10000,200)):
    """
    return the dims for network
    """
    assert len(x)==2
    n_sample=x[0]
    if n_sample>20000:# may be need complex network
        dims=[x[-1],128,32]
    elif n_sample>10000:#10000
        dims=[x[-1],64,32]
    elif n_sample>5000: #5000
        dims=[x[-1],32,16] #16
    elif n_sample>2000:
        dims=[x[-1],128]
    elif n_sample>500:
        dims=[x[-1],64]
    else:
        dims=[x[-1],16]
    #dims=[x[-1],64,32] if n_sample>10000 else [x[-1],32,16]
    return dims
 (duplicate-code)
desc/tools/test.py:1:0: R0801: Similar lines in 2 files
==desc.models.desc:270
==desc.original.train:248
    if isinstance(data,AnnData):
        adata=data
    elif isinstance(data,pd.DataFrame):
        adata=sc.AnnData(data,obs=data.index,var=data.columns)
    else:
        x=data.toarray() if issparse(data) else data
        adata=sc.AnnData(x)

    if dims is None:
        dims=getdims(adata.shape)

    if isinstance(louvain_resolution,float) or isinstance(louvain_resolution,int):
        louvain_resolution=[float(louvain_resolution)]
    elif  isinstance(louvain_resolution,str):
        louvain_resolution=list(map(float,louvain_resolution.split(",")))
    else:
        assert isinstance(louvain_resolution,list),'louvain_resolution must be either a string with spearator "," or a list like [1.0,2.0,3.0] '
        louvain_resolution=list(map(float,louvain_resolution))
    # (duplicate-code)
desc/tools/test.py:1:0: R0801: Similar lines in 2 files
==desc.original.DESC:115
==desc.original.network:118
                 save_dir="result_tmp" # save result to save_dir, the default is "result". if recurvie path, there root dir must be exists, or there will be something wrong: for example : "/result_singlecell/dataset1" will return wrong if "result_singlecell" not exist
                 ):

        if not os.path.exists(save_dir):
            print("Create the directory:"+str(save_dir)+" to save result")
            os.mkdir(save_dir)
        self.dims = dims
        self.x=x #feature n*p, n:number of cells, p: number of genes
        self.alpha = alpha
        self.tol=tol
        self.init=init
        self.input_dim = dims[0]  # for clustering layer
        self.n_stacks = len(self.dims) - 1
        self.is_stacked=is_stacked
        self.resolution=louvain_resolution
        self.n_neighbors=n_neighbors
        self.pretrain_epochs=pretrain_epochs
        self.batch_size=batch_size (duplicate-code)
desc/tools/test.py:1:0: R0801: Similar lines in 3 files
==desc.models.network:137
==desc.original.DESC:116
==desc.original.network:119
                 ):

        if not os.path.exists(save_dir):
            print("Create the directory:"+str(save_dir)+" to save result")
            os.mkdir(save_dir)
        self.dims = dims
        self.x=x #feature n*p, n:number of cells, p: number of genes
        self.alpha = alpha
        self.tol=tol
        self.init=init
        self.input_dim = dims[0]  # for clustering layer
        self.n_stacks = len(self.dims) - 1
        self.is_stacked=is_stacked
        self.resolution=louvain_resolution
        self.n_neighbors=n_neighbors
        self.pretrain_epochs=pretrain_epochs (duplicate-code)
desc/tools/test.py:1:0: R0801: Similar lines in 2 files
==desc.models.network:16
==desc.original.network:17
import numpy as np
import random
import tensorflow as tf
import keras.backend as K
from keras.engine.topology import Layer, InputSpec
from keras.callbacks import TensorBoard, ModelCheckpoint, EarlyStopping, ReduceLROnPlateau,History
from keras.layers import Dense, Input
from keras.models import Model,load_model
from keras.optimizers import SGD
from keras import callbacks
from keras.initializers import VarianceScaling
from sklearn.cluster import KMeans
import scanpy.api as sc
import pandas as pd
from natsort import natsorted #call natsorted
import os (duplicate-code)
desc/tools/test.py:1:0: R0801: Similar lines in 2 files
==desc.original.DESC:168
==desc.original.network:191
            print('Pretrained weights are saved to %s /ae_weights.h5' % self.save_dir)
        #initialize cluster centers using louvain if n_clusters is not exist
        features=self.extract_features(self.x)
        features=np.asarray(features)
        if isinstance(n_clusters,int):
            print("...number of clusters have been specified, Initializing Cluster centroid  using K-Means")
            kmeans = KMeans(n_clusters=n_clusters, n_init=20)
            Y_pred_init = kmeans.fit_predict(features)
            self.init_pred= np.copy(Y_pred_init)
            self.n_clusters=n_clusters
            cluster_centers=kmeans.cluster_centers_
            self.init_centroid=[cluster_centers]
        else:
            print("...number of clusters is unknown, Initialize cluster centroid using louvain method")
            #can be replaced by other clustering methods
            #using louvain methods in scanpy (duplicate-code)
desc/tools/test.py:1:0: R0801: Similar lines in 2 files
==desc.models.network:381
==desc.original.network:293
                                     formatter_class=argparse.ArgumentDefaultsHelpFormatter)
    parser.add_argument('--batch_size', default=256, type=int)
    parser.add_argument('--maxiter', default=2e4, type=int)
    parser.add_argument('--pretrain_epochs', default=100, type=int)
    parser.add_argument('--tol', default=0.005, type=float)
    parser.add_argument('--save_dir', default='result_tmp')
    args = parser.parse_args()
    print(args)
    import os
    if not os.path.exists(args.save_dir):
        os.makedirs(args.save_dir)

    # create mnist data to test
    import numpy as np (duplicate-code)
desc/tools/test.py:1:0: R0801: Similar lines in 3 files
==desc.models.desc:47
==desc.original.preprocessing:177
==desc.original.train:52
    assert len(x)==2
    n_sample=x[0]
    if n_sample>20000:# may be need complex network
        dims=[x[-1],128,32]
    elif n_sample>10000:#10000
        dims=[x[-1],64,32]
    elif n_sample>5000: #5000
        dims=[x[-1],32,16] #16
    elif n_sample>2000:
        dims=[x[-1],128]
    elif n_sample>500:
        dims=[x[-1],64]
    else:
        dims=[x[-1],16] (duplicate-code)
desc/tools/test.py:1:0: R0801: Similar lines in 2 files
==desc.models.desc:93
==desc.original.train:96
):
    if isinstance(data,AnnData):
        adata=data
    else:
        adata=sc.AnnData(data)
    #make sure dims
    if dims is None:
        dims=getdims(adata.shape)
    assert dims[0]==adata.shape[-1],'the number of columns of x doesnot equal to the first element of dims, we must make sure that dims[0]==x.shape[0]'
    #if use_GPU and tf.test.is_gpu_available():
#set seed
    random.seed(random_seed)
    np.random.seed(random_seed) (duplicate-code)
desc/tools/test.py:1:0: R0801: Similar lines in 2 files
==desc.original.DESC:294
==desc.original.network:314
    desc.model.summary()
    t0 = time()
    desc.compile(optimizer=SGD(0.01, 0.9), loss='kld')
    Embeded_z,q_pred= desc.fit(maxiter=30,epochs_fit=4)
    y_pred=q_pred.max(axis=1)
    obs_info=pd.DataFrame()
    obs_info["y_true"]=pd.Series(y.astype("U"),dtype="category")
    obs_info["y_pred"]=pd.Series(y_pred.astype("U"),dtype="category")
    adata=sc.AnnData(x,obs=obs_info)
    adata.obsm["X_Embeded_z"]=Embeded_z
    print('clustering time: ', (time() - t0))

 (duplicate-code)
desc/tools/test.py:1:0: R0801: Similar lines in 2 files
==desc.original.DESC:245
==desc.original.network:279
        y0=pd.Series(y_pred,dtype='category')
        y0.cat.categories=range(0,len(y0.cat.categories))
        print("The final prediction cluster is:")
        x=y0.value_counts()
        print(x.sort_index(ascending=True))
        Embeded_z=self.extract_features(self.x)
        return Embeded_z,q


if __name__ == "__main__":
    # setting the hyper parameters
    import argparse
 (duplicate-code)
desc/tools/test.py:1:0: R0801: Similar lines in 3 files
==desc.models.network:339
==desc.original.DESC:232
==desc.original.network:260
            delta_label = np.sum(y_pred != y_pred_last).astype(np.float32) / y_pred.shape[0]
            y_pred_last = np.copy(y_pred)
            if ite > 0 and delta_label < self.tol:
                print('delta_label ', delta_label, '< tol ', self.tol)
                print('Reached tolerance threshold. Stop training.')
                break
            print("The value of delta_label of current",str(ite+1),"th iteration is",delta_label,">= tol",self.tol)
            #train on whole dataset on prespecified batch_size
            if self.use_earlyStop:
                callbacks=[EarlyStopping(monitor='loss',min_delta=1e-4,patience=5,verbose=1,mode='auto')]
                self.model.fit(x=self.x,y=p,epochs=epochs_fit,batch_size=self.batch_size,callbacks=callbacks,shuffle=True,verbose=True)
            else:
                self.model.fit(x=self.x,y=p,epochs=epochs_fit,batch_size=self.batch_size,shuffle=True,verbose=True) (duplicate-code)
desc/tools/test.py:1:0: R0801: Similar lines in 2 files
==desc.models.SAE:217
==desc.models.network:394
    import numpy as np
    def load_mnist(sample_size=10000):
        # the data, shuffled and split between train and test sets
        from keras.datasets import mnist
        (x_train, y_train), (x_test, y_test) = mnist.load_data()
        x = np.concatenate((x_train, x_test))
        y = np.concatenate((y_train, y_test))
        x = x.reshape((x.shape[0], -1))
        print ('MNIST samples', x.shape)
        id0=np.random.choice(x.shape[0],sample_size,replace=False)
        return x[id0], y[id0]
    #from load_mnist import load_mnist (duplicate-code)
desc/tools/test.py:1:0: R0801: Similar lines in 2 files
==desc.models.SAE:42
==desc.original.SAE:32
    def __init__(self, dims, act='relu', drop_rate=0.2, batch_size=32,random_seed=201809,actincenter="tanh",init="glorot_uniform",use_earlyStop=True,save_dir='result_tmp'): #act relu
        self.dims = dims
        self.n_stacks = len(dims) - 1
        self.n_layers = 2*self.n_stacks  # exclude input layer
        self.activation = act
        self.actincenter=actincenter #linear
        self.drop_rate = drop_rate
        self.init=init
        self.batch_size = batch_size
        #set random seed
        random.seed(random_seed)
        np.random.seed(random_seed) (duplicate-code)
desc/tools/test.py:1:0: R0801: Similar lines in 2 files
==desc.models.network:24
==desc.original.DESC:23
from keras.optimizers import SGD
from keras import callbacks
from keras.initializers import VarianceScaling
from sklearn.cluster import KMeans
import scanpy.api as sc
import pandas as pd
from natsort import natsorted #call natsorted
import os
try:
    from .SAE import SAE  # load Stacked autoencoder
except:
    from SAE import SAE  # load Stacked autoencoder (duplicate-code)
desc/tools/test.py:1:0: R0801: Similar lines in 2 files
==desc.models.desc:68
==desc.original.train:77
        louvain_resolution=1.0,
        n_neighbors=15,
        pretrain_epochs=300,
        batch_size=256,
        activation='relu',
        actincenter='tanh',
        drop_rate_SAE=0.2,
        is_stacked=True,
        use_earlyStop=True,
        use_ae_weights=False,
	save_encoder_weights=False, (duplicate-code)
desc/tools/test.py:1:0: R0801: Similar lines in 2 files
==desc.original.DESC:272
==desc.original.SAE-non:198
    import numpy as np
    def load_mnist():
        # the data, shuffled and split between train and test sets
        from keras.datasets import mnist
        (x_train, y_train), (x_test, y_test) = mnist.load_data()
        x = np.concatenate((x_train, x_test))
        y = np.concatenate((y_train, y_test))
        x = x.reshape((x.shape[0], -1))
        x = np.divide(x, 50.)  # normalize as it does in DEC paper
        print ('MNIST samples', x.shape)
        return x, y (duplicate-code)
desc/tools/test.py:1:0: R0801: Similar lines in 2 files
==desc.models.network:191
==desc.original.network:168
                if self.is_stacked:
                    sae.fit(self.x,epochs=self.pretrain_epochs)
                else:
                    sae.fit2(self.x,epochs=self.pretrain_epochs)
                self.autoencoder=sae.autoencoders
                self.encoder=sae.encoder
            else:
                sae.autoencoders.load_weights(os.path.join(self.save_dir,"ae_weights.h5"))
                self.autoencoder=sae.autoencoders
                self.encoder=sae.encoder
        else: (duplicate-code)
desc/tools/test.py:1:0: R0801: Similar lines in 2 files
==desc.original.DESC:153
==desc.original.network:167
            if not os.path.isfile(self.save_dir+"/ae_weights.h5"):
                if self.is_stacked:
                    sae.fit(self.x,epochs=self.pretrain_epochs)
                else:
                    sae.fit2(self.x,epochs=self.pretrain_epochs)
                self.autoencoder=sae.autoencoders
                self.encoder=sae.encoder
            else:
                sae.autoencoders.load_weights(os.path.join(self.save_dir,"ae_weights.h5"))
                self.autoencoder=sae.autoencoders
                self.encoder=sae.encoder (duplicate-code)
desc/tools/test.py:1:0: R0801: Similar lines in 2 files
==desc.original.DESC:99
==desc.original.network:99
    def __init__(self,
                 dims,
                 x, # input matrix, row sample, col predictors
                 alpha=1.0,
		 tol=0.005,
                 init='glorot_uniform', #initialization method
                 n_clusters=None,     # Number of Clusters, if provided, the clusters center will be initialized by K-means,
                 louvain_resolution=1.0, # resolution for louvain
                 n_neighbors=15,    # the
                 pretrain_epochs=300, # epoch for autoencoder
                 batch_size=256, #batch_size for autoencoder (duplicate-code)
desc/tools/test.py:1:0: R0801: Similar lines in 2 files
==desc.models.desc:32
==desc.original.train:26
from anndata import AnnData
import scanpy.api as sc
from keras import backend as K
from scipy.sparse import issparse
import keras
try:
    from .network import *
except:
    from network import *
 (duplicate-code)
desc/tools/test.py:1:0: R0801: Similar lines in 2 files
==desc.models.SAE:232
==desc.original.SAE:182
    db = 'mnist'
    n_clusters = 10
    # define and train SAE model
    sae = SAE(dims=[x.shape[-1], 64,32])
    sae.fit(x=x, epochs=400)
    sae.autoencoders.save_weights('weights_%s.h5' % db)

    # extract features
    print ('Finished training, extracting features using the trained SAE model')
    features = sae.extract_feature(x) (duplicate-code)
desc/tools/test.py:1:0: R0801: Similar lines in 2 files
==desc.models.network:191
==desc.original.DESC:154
                if self.is_stacked:
                    sae.fit(self.x,epochs=self.pretrain_epochs)
                else:
                    sae.fit2(self.x,epochs=self.pretrain_epochs)
                self.autoencoder=sae.autoencoders
                self.encoder=sae.encoder
            else:
                sae.autoencoders.load_weights(os.path.join(self.save_dir,"ae_weights.h5"))
                self.autoencoder=sae.autoencoders
                self.encoder=sae.encoder (duplicate-code)
desc/tools/test.py:1:0: R0801: Similar lines in 2 files
==desc.models.desc:327
==desc.original.train:299
    return data


if __name__=='__main__':
    import argparse
    parser = argparse.ArgumentParser(description='just for simple test train.py',formatter_class=argparse.ArgumentDefaultsHelpFormatter)
    parser.add_argument('--use_GPU', default=True, type=bool)
    args = parser.parse_args()
    print(args) (duplicate-code)
desc/tools/test.py:1:0: R0801: Similar lines in 2 files
==desc.models.desc:131
==desc.original.train:134
              batch_size=batch_size,
              random_seed=random_seed,
              activation=activation,
              actincenter=actincenter,
              drop_rate_SAE=drop_rate_SAE,
              is_stacked=is_stacked,
              use_earlyStop=use_earlyStop,
              use_ae_weights=use_ae_weights,
	      save_encoder_weights=save_encoder_weights, (duplicate-code)
desc/tools/test.py:1:0: R0801: Similar lines in 2 files
==desc.models.desc:108
==desc.original.train:111
    total_cpu=multiprocessing.cpu_count()
    num_Cores=int(num_Cores) if total_cpu>int(num_Cores) else int(math.ceil(total_cpu/2))
    print('The number of cpu in your computer is',total_cpu)
    if use_GPU:
        os.environ["CUDA_VISIBLE_DEVICES"] = "0"
        #os.environ['CUDA_VISIBLE_DEVICES']=K.tensorflow_backend._get_available_gpus()[0][-1]#use first GPUid
    else:
        #set only use cpu
        os.environ["CUDA_VISIBLE_DEVICES"] = "-1" (duplicate-code)
desc/tools/test.py:1:0: R0801: Similar lines in 2 files
==desc.models.SAE:123
==desc.original.SAE:83
        in_out_dim = self.dims[ith]
        hidden_dim = self.dims[ith+1]
        output_act = self.activation
        hidden_act = self.activation
        if ith == 0:
            output_act = self.actincenter# tanh, or linear
        if ith == self.n_stacks-1:
            hidden_act = self.actincenter #tanh, or linear
        model = Sequential() (duplicate-code)
desc/tools/test.py:1:0: R0801: Similar lines in 2 files
==desc.models.network:154
==desc.original.network:135
        self.batch_size=batch_size
        self.random_seed=random_seed
        self.activation=activation
        self.actincenter=actincenter
        self.drop_rate_SAE=drop_rate_SAE
        self.is_stacked=is_stacked
        self.use_earlyStop=use_earlyStop
        self.use_ae_weights=use_ae_weights
        self.save_encoder_weights=save_encoder_weights (duplicate-code)
desc/tools/test.py:1:0: R0801: Similar lines in 2 files
==desc.models.network:124
==desc.original.network:109
                 batch_size=256, #batch_size for autoencoder
                 random_seed=201809,
		 activation='relu',
                 actincenter="tanh",# activation for the last layer in encoder, and first layer in the decoder
                 drop_rate_SAE=0.2,
                 is_stacked=True,
                 use_earlyStop=True,
                 use_ae_weights=False,
		 save_encoder_weights=False, (duplicate-code)
desc/tools/test.py:1:0: R0801: Similar lines in 2 files
==desc.original.__main__:174
==desc.original.main:165
            alpha=args.alpha,
            tol=args.tol,
            init=args.init,
            n_clusters=args.n_clusters,
            louvain_resolution=args.louvain_resolution,
            n_neighbors=args.n_neighbors,
            pretrain_epochs=args.pretrain_epochs,
            batch_size=args.batch_size,
            activation=args.activation, (duplicate-code)
desc/tools/test.py:1:0: R0801: Similar lines in 2 files
==desc.original.__main__:111
==desc.original.main:106
    parser.add_argument('--alpha',type=float,default=1.0,help='the degree of t-distribution')
    parser.add_argument('--tol',type=float,default=0.005,help='Stop criterion, clustering procedure will be stoped when the difference ratio betwen the current iteration and last iteration larger than tol')
    parser.add_argument('--init',type=str,default='glorot_uniform',help='Initializing distribution,detail refer to keras')
    parser.add_argument('--n_clusters',type=int,default=None,help="The number of clusters for K-means methods, if not sepcified, it will use louvain method to initialize cluster centroid")
    parser.add_argument('--louvain_resolution',type=float,default=[0.4],nargs='+',help="resolution for louvian method")
    parser.add_argument('--n_neighbors',type=int,default=15,help="The neighbors for connectivity matrix of cell")
    parser.add_argument('--pretrain_epochs',type=int,default=300,help='the number of epochs for autoencoder model')
    parser.add_argument('--batch_size',type=int,default=256,help='the batch size for autoencoder model and clustering model')
    parser.add_argument('--activation',type=str,default='relu',help="the activation function for autoencoder model,which can be `elu,selu,softplus,tanh,siogmid et al.`, for detail please refer to`https://keras.io/activations/") (duplicate-code)
desc/tools/test.py:1:0: R0801: Similar lines in 3 files
==desc.original.DESC:102
==desc.original.api:24
==desc.original.train:73
        alpha=1.0,
        tol=0.005,
        init='glorot_uniform',
        n_clusters=None,
        louvain_resolution=1.0,
        n_neighbors=15,
        pretrain_epochs=300,
        batch_size=256,
        activation='relu', (duplicate-code)
desc/tools/test.py:1:0: R0801: Similar lines in 2 files
==desc.models.desc:302
==desc.original.train:280
            batch_size=batch_size,
            activation=activation,
            actincenter=actincenter,
            drop_rate_SAE=drop_rate_SAE,
            is_stacked=is_stacked,
            use_earlyStop=use_earlyStop,
            use_ae_weights=use_ae_weights,
	    save_encoder_weights=save_encoder_weights, (duplicate-code)
desc/tools/test.py:1:0: R0801: Similar lines in 2 files
==desc.models.desc:290
==desc.original.train:268
    for ith,resolution in enumerate(louvain_resolution):
        print("Start to process resolution=",str(resolution))
        use_ae_weights=use_ae_weights if ith==0 else True
        res=train_single(data=data,
            dims=dims,
            alpha=alpha,
            tol=tol,
            init=init, (duplicate-code)
desc/tools/test.py:1:0: R0801: Similar lines in 2 files
==desc.models.desc:69
==desc.original.train:173
        n_neighbors=15,
        pretrain_epochs=300,
        batch_size=256,
        activation='relu',
        actincenter='tanh',
        drop_rate_SAE=0.2,
        is_stacked=True,
        use_earlyStop=True, (duplicate-code)
desc/tools/test.py:1:0: R0801: Similar lines in 2 files
==desc.models.desc:175
==desc.original.train:163
    adata.uns['prob_matrix'+str(louvain_resolution)]=q_pred
    return adata


def train(data,dims=None,
        alpha=1.0,
        tol=0.005,
        init='glorot_uniform', (duplicate-code)
desc/tools/test.py:1:0: R0801: Similar lines in 2 files
==desc.models.network:233
==desc.original.network:203
        else:
            print("...number of clusters is unknown, Initialize cluster centroid using louvain method")
            #can be replaced by other clustering methods
            #using louvain methods in scanpy
            adata0=sc.AnnData(features)
            if adata0.shape[0]>200000:
                np.random.seed(adata0.shape[0])#set  seed
                adata0=adata0[np.random.choice(adata0.shape[0],200000,replace=False)] (duplicate-code)
desc/tools/test.py:1:0: R0801: Similar lines in 3 files
==desc.models.network:387
==desc.original.DESC:265
==desc.original.network:299
    args = parser.parse_args()
    print(args)
    import os
    if not os.path.exists(args.save_dir):
        os.makedirs(args.save_dir)

    # create mnist data to test
    import numpy as np (duplicate-code)
desc/tools/test.py:1:0: R0801: Similar lines in 2 files
==desc.original.DESC:23
==desc.original.network:25
from keras.optimizers import SGD
from keras import callbacks
from keras.initializers import VarianceScaling
from sklearn.cluster import KMeans
import scanpy.api as sc
import pandas as pd
from natsort import natsorted #call natsorted
import os (duplicate-code)
desc/tools/test.py:1:0: R0801: Similar lines in 3 files
==desc.original.api:24
==desc.original.network:102
==desc.original.train:73
        alpha=1.0,
        tol=0.005,
        init='glorot_uniform',
        n_clusters=None,
        louvain_resolution=1.0,
        n_neighbors=15,
        pretrain_epochs=300,
        batch_size=256, (duplicate-code)
desc/tools/test.py:1:0: R0801: Similar lines in 2 files
==desc.models.desc:19
==desc.models.network:5
import matplotlib
havedisplay = "DISPLAY" in os.environ
#if we have a display use a plotting backend
if havedisplay:
    matplotlib.use('TkAgg')
else:
    matplotlib.use('Agg') (duplicate-code)
desc/tools/test.py:1:0: R0801: Similar lines in 2 files
==desc.models.network:249
==desc.original.network:215
            features=pd.DataFrame(adata0.X,index=np.arange(0,adata0.shape[0]))
            Group=pd.Series(self.init_pred,index=np.arange(0,adata0.shape[0]),name="Group")
            Mergefeature=pd.concat([features,Group],axis=1)
            cluster_centers=np.asarray(Mergefeature.groupby("Group").mean())
            self.n_clusters=cluster_centers.shape[0]
            self.init_centroid=[cluster_centers]
        #create desc clustering layer (duplicate-code)
desc/tools/test.py:1:0: R0801: Similar lines in 2 files
==desc.models.network:203
==desc.original.network:179
            if self.is_stacked:
                sae.fit(self.x,epochs=self.pretrain_epochs)
            else:
                sae.fit2(self.x,epochs=self.pretrain_epochs)
            self.autoencoder=sae.autoencoders
            self.encoder=sae.encoder
 (duplicate-code)
desc/tools/test.py:1:0: R0801: Similar lines in 2 files
==desc.models.network:175
==desc.original.network:154
        sae=SAE(dims=self.dims,
		act=self.activation,
                drop_rate=self.drop_rate_SAE,
                batch_size=self.batch_size,
                random_seed=self.random_seed,
                actincenter=self.actincenter,
                init=self.init, (duplicate-code)
desc/tools/test.py:1:0: R0801: Similar lines in 2 files
==desc.original.DESC:11
==desc.original.network:11
from __future__ import division
import matplotlib
matplotlib.use('Agg')# in order to save fig to local disk
import networkx as nx
import matplotlib.pyplot as plt
from time import time
import numpy as np (duplicate-code)
desc/tools/test.py:1:0: R0801: Similar lines in 2 files
==desc.original.__main__:126
==desc.original.main:119
    parser.add_argument('--save_dir',type=str,default='result_tmp',help='The  directory for result')
    parser.add_argument('--max_iter',type=int,default=1000,help=' The maximum iteration for clustering')
    parser.add_argument('--epochs_fit',type=int,default=4,help='updateing clustering probability for every epochs_fit. If sample size is samll, we tend to set a larger value')
    parser.add_argument('--num_Cores',type=int,default=20,help='How many cpus use during tranning. if num_Cores > the max cpus in our computer , num_Cores will use  a half of cpus in your computer.')
    parser.add_argument('--use_GPU',type=bool,default=False,help='It will use GPU to train model if GPU is avaliable')
    parser.add_argument('--random_seed',type=int,default=201809,help='he random seed for random.seed,,,numpy.random.seed,tensorflow.set_random_seed')
    parser.add_argument('--verbose',type=bool,default=False,help='It will ouput the model summary if verbose==True.') (duplicate-code)
desc/tools/test.py:1:0: R0801: Similar lines in 3 files
==desc.original.api:37
==desc.original.train:183
==desc.original.train:88
        save_dir='result_tmp',
        max_iter=1000,
        epochs_fit=4,
        num_Cores=20,
        use_GPU=True,
        random_seed=201809,
        verbose=True, (duplicate-code)
desc/tools/test.py:1:0: R0801: Similar lines in 2 files
==desc.models.network:203
==desc.original.network:168
                if self.is_stacked:
                    sae.fit(self.x,epochs=self.pretrain_epochs)
                else:
                    sae.fit2(self.x,epochs=self.pretrain_epochs)
                self.autoencoder=sae.autoencoders
                self.encoder=sae.encoder (duplicate-code)
desc/tools/test.py:1:0: R0801: Similar lines in 3 files
==desc.models.network:114
==desc.original.DESC:99
==desc.original.network:99
    def __init__(self,
                 dims,
                 x, # input matrix, row sample, col predictors
                 alpha=1.0,
		 tol=0.005,
                 init='glorot_uniform', #initialization method (duplicate-code)
desc/tools/test.py:1:0: R0801: Similar lines in 4 files
==desc.models.network:191
==desc.models.network:203
==desc.original.DESC:154
==desc.original.network:179
                if self.is_stacked:
                    sae.fit(self.x,epochs=self.pretrain_epochs)
                else:
                    sae.fit2(self.x,epochs=self.pretrain_epochs)
                self.autoencoder=sae.autoencoders
                self.encoder=sae.encoder (duplicate-code)
desc/tools/test.py:1:0: R0801: Similar lines in 2 files
==desc.original.DESC:147
==desc.original.network:160
                init=self.init,
                use_earlyStop=self.use_earlyStop
           )
        # begin pretraining
        t0 = time()
        print("Checking whether %s  exists in the directory"%str(os.path.join(self.save_dir,'ae_weights,h5'))) (duplicate-code)
desc/tools/test.py:1:0: R0801: Similar lines in 2 files
==desc.original.__main__:189
==desc.original.main:178
            save_dir=args.save_dir,
            max_iter=args.max_iter,
            epochs_fit=args.epochs_fit,
            num_Cores=args.num_Cores,
            use_GPU=args.use_GPU,
            random_seed=args.random_seed, (duplicate-code)
desc/tools/test.py:1:0: R0801: Similar lines in 3 files
==desc.original.api:120
==desc.original.api:143
==desc.original.train:288
            save_dir=save_dir,
            max_iter=max_iter,
            epochs_fit=epochs_fit,
            num_Cores=num_Cores,
            use_GPU=use_GPU,
            random_seed=random_seed, (duplicate-code)
desc/tools/test.py:1:0: R0801: Similar lines in 2 files
==desc.models.desc:151
==desc.original.train:152
    y_pred=pd.Series(np.argmax(q_pred,axis=1),index=adata.obs.index,dtype='category')
    y_pred.cat.categories=list(range(len(y_pred.unique())))
    adata.obs['desc_'+str(louvain_resolution)]=y_pred
    adata.obsm['X_Embeded_z'+str(louvain_resolution)]=Embeded_z
    if do_tsne: (duplicate-code)
desc/tools/test.py:1:0: R0801: Similar lines in 2 files
==desc.models.SAE:3
==desc.original.SAE:0
from keras.layers import Input, Dense, Dropout
from keras.models import Model, Sequential
from keras.optimizers import SGD
from keras.utils.vis_utils import plot_model
from keras.callbacks import TensorBoard, ModelCheckpoint, EarlyStopping, ReduceLROnPlateau,History (duplicate-code)
desc/tools/test.py:1:0: R0801: Similar lines in 2 files
==desc.original.SAE-non:1
==desc.original.SAE:1
from keras.models import Model, Sequential
from keras.optimizers import SGD
from keras.utils.vis_utils import plot_model
from keras.callbacks import TensorBoard, ModelCheckpoint, EarlyStopping, ReduceLROnPlateau,History
import math (duplicate-code)
desc/tools/test.py:1:0: R0801: Similar lines in 4 files
==desc.models.SAE:220
==desc.models.network:397
==desc.original.DESC:275
==desc.original.SAE-non:201
        from keras.datasets import mnist
        (x_train, y_train), (x_test, y_test) = mnist.load_data()
        x = np.concatenate((x_train, x_test))
        y = np.concatenate((y_train, y_test))
        x = x.reshape((x.shape[0], -1)) (duplicate-code)
desc/tools/test.py:1:0: R0801: Similar lines in 3 files
==desc.models.network:313
==desc.models.network:358
==desc.original.DESC:245
        y0=pd.Series(y_pred,dtype='category')
        y0.cat.categories=range(0,len(y0.cat.categories))
        print("The final prediction cluster is:")
        x=y0.value_counts()
        print(x.sort_index(ascending=True)) (duplicate-code)
desc/tools/test.py:1:0: R0801: Similar lines in 3 files
==desc.original.DESC:276
==desc.original.SAE-non:202
==desc.original.load_mnist:5
        (x_train, y_train), (x_test, y_test) = mnist.load_data()
        x = np.concatenate((x_train, x_test))
        y = np.concatenate((y_train, y_test))
        x = x.reshape((x.shape[0], -1))
        x = np.divide(x, 50.)  # normalize as it does in DEC paper (duplicate-code)
desc/tools/test.py:1:0: R0801: Similar lines in 3 files
==desc.models.network:418
==desc.original.DESC:298
==desc.original.network:318
    y_pred=q_pred.max(axis=1)
    obs_info=pd.DataFrame()
    obs_info["y_true"]=pd.Series(y.astype("U"),dtype="category")
    obs_info["y_pred"]=pd.Series(y_pred.astype("U"),dtype="category")
    adata=sc.AnnData(x,obs=obs_info) (duplicate-code)
desc/tools/test.py:1:0: R0801: Similar lines in 4 files
==desc.models.desc:74
==desc.models.network:128
==desc.original.network:113
==desc.original.train:83
        drop_rate_SAE=0.2,
        is_stacked=True,
        use_earlyStop=True,
        use_ae_weights=False,
	save_encoder_weights=False, (duplicate-code)
desc/tools/test.py:1:0: R0801: Similar lines in 3 files
==desc.models.network:381
==desc.original.DESC:259
==desc.original.network:293
                                     formatter_class=argparse.ArgumentDefaultsHelpFormatter)
    parser.add_argument('--batch_size', default=256, type=int)
    parser.add_argument('--maxiter', default=2e4, type=int)
    parser.add_argument('--pretrain_epochs', default=100, type=int)
    parser.add_argument('--tol', default=0.005, type=float) (duplicate-code)
desc/tools/test.py:1:0: R0801: Similar lines in 2 files
==desc.original.DESC:141
==desc.original.network:153
    def pretrain(self,n_clusters=None):
        sae=SAE(dims=self.dims,
				act=self.activation,
                drop_rate=self.drop_rate_SAE,
                batch_size=self.batch_size, (duplicate-code)
desc/tools/test.py:1:0: R0801: Similar lines in 2 files
==desc.original.__main__:14
==desc.original.main:14
from __future__ import division
import matplotlib
matplotlib.use('Agg')
import os,sys,argparse,textwrap
import scanpy.api as sc (duplicate-code)
desc/tools/test.py:1:0: R0801: Similar lines in 3 files
==desc.models.desc:68
==desc.original.DESC:106
==desc.original.api:28
        louvain_resolution=1.0,
        n_neighbors=15,
        pretrain_epochs=300,
        batch_size=256,
        activation='relu', (duplicate-code)
desc/tools/test.py:1:0: R0801: Similar lines in 3 files
==desc.original.api:106
==desc.original.api:129
==desc.original.train:272
            dims=dims,
            alpha=alpha,
            tol=tol,
            init=init,
            n_clusters=n_clusters, (duplicate-code)


Report
======
1864 statements analysed.

Statistics by type
------------------

+---------+-------+-----------+-----------+------------+---------+
|type     |number |old number |difference |%documented |%badname |
+=========+=======+===========+===========+============+=========+
|module   |25     |NC         |NC         |20.00       |16.00    |
+---------+-------+-----------+-----------+------------+---------+
|class    |10     |NC         |NC         |60.00       |10.00    |
+---------+-------+-----------+-----------+------------+---------+
|method   |67     |NC         |NC         |41.79       |0.00     |
+---------+-------+-----------+-----------+------------+---------+
|function |37     |NC         |NC         |24.32       |5.41     |
+---------+-------+-----------+-----------+------------+---------+



External dependencies
---------------------
::

    SAE (desc.models.network,desc.original.DESC)
    desc 
      \-datasets (desc.tools.test)
      \-models 
        \-desc (desc.tools.test)
    matplotlib (desc.models.desc,desc.models.network,desc.original.DESC,desc.original.__main__,desc.original.api,desc.original.main,desc.original.network,desc.original.test,desc.original.train)
      \-pyplot (desc.models.network,desc.original.DESC,desc.original.network)
    numpy (desc.models.SAE,desc.models.desc,desc.models.network,desc.original.DESC,desc.original.SAE,desc.original.SAE-non,desc.original.api,desc.original.load_mnist,desc.original.network,desc.original.preprocessing,desc.original.test,desc.original.train,desc.tools.preprocessing,desc.tools.write,desc.utilities)
    preprocessing (desc.original.main)



Raw metrics
-----------

+----------+-------+------+---------+-----------+
|type      |number |%     |previous |difference |
+==========+=======+======+=========+===========+
|code      |2466   |69.54 |NC       |NC         |
+----------+-------+------+---------+-----------+
|docstring |486    |13.71 |NC       |NC         |
+----------+-------+------+---------+-----------+
|comment   |289    |8.15  |NC       |NC         |
+----------+-------+------+---------+-----------+
|empty     |305    |8.60  |NC       |NC         |
+----------+-------+------+---------+-----------+



Duplication
-----------

+-------------------------+-------+---------+-----------+
|                         |now    |previous |difference |
+=========================+=======+=========+===========+
|nb duplicated lines      |1220   |NC       |NC         |
+-------------------------+-------+---------+-----------+
|percent duplicated lines |34.947 |NC       |NC         |
+-------------------------+-------+---------+-----------+



Messages by category
--------------------

+-----------+-------+---------+-----------+
|type       |number |previous |difference |
+===========+=======+=========+===========+
|convention |2902   |NC       |NC         |
+-----------+-------+---------+-----------+
|refactor   |123    |NC       |NC         |
+-----------+-------+---------+-----------+
|warning    |212    |NC       |NC         |
+-----------+-------+---------+-----------+
|error      |128    |NC       |NC         |
+-----------+-------+---------+-----------+



% errors / warnings by module
-----------------------------

+----------------------------+------+--------+---------+-----------+
|module                      |error |warning |refactor |convention |
+============================+======+========+=========+===========+
|desc.models.network         |11.72 |14.15   |6.50     |10.68      |
+----------------------------+------+--------+---------+-----------+
|desc.original.DESC          |11.72 |9.91    |3.25     |7.03       |
+----------------------------+------+--------+---------+-----------+
|desc.original.network       |11.72 |7.55    |4.07     |7.51       |
+----------------------------+------+--------+---------+-----------+
|desc.models.SAE             |8.59  |7.55    |3.25     |6.86       |
+----------------------------+------+--------+---------+-----------+
|desc.original.SAE-non       |7.81  |5.66    |3.25     |7.89       |
+----------------------------+------+--------+---------+-----------+
|desc.models.desc            |7.03  |23.11   |4.07     |10.65      |
+----------------------------+------+--------+---------+-----------+
|desc.original.SAE           |7.03  |5.66    |2.44     |4.00       |
+----------------------------+------+--------+---------+-----------+
|desc.original.train         |6.25  |20.75   |4.07     |9.48       |
+----------------------------+------+--------+---------+-----------+
|desc.original.preprocessing |5.47  |2.83    |0.81     |7.93       |
+----------------------------+------+--------+---------+-----------+
|desc.original.api           |5.47  |0.94    |2.44     |4.51       |
+----------------------------+------+--------+---------+-----------+
|desc.tools.preprocessing    |3.12  |0.47    |0.00     |1.55       |
+----------------------------+------+--------+---------+-----------+
|desc.original.test          |2.34  |0.47    |0.00     |0.72       |
+----------------------------+------+--------+---------+-----------+
|desc.tools.read             |2.34  |0.00    |0.81     |0.10       |
+----------------------------+------+--------+---------+-----------+
|desc.original.__main__      |1.56  |0.47    |0.81     |10.27      |
+----------------------------+------+--------+---------+-----------+
|desc.original.main          |1.56  |0.47    |0.81     |9.61       |
+----------------------------+------+--------+---------+-----------+
|desc.utilities.__init__     |1.56  |0.00    |0.00     |0.07       |
+----------------------------+------+--------+---------+-----------+
|desc.tools.__init__         |1.56  |0.00    |0.00     |0.07       |
+----------------------------+------+--------+---------+-----------+
|desc                        |1.56  |0.00    |0.00     |0.07       |
+----------------------------+------+--------+---------+-----------+
|desc.datasets.__init__      |0.78  |0.00    |0.81     |0.21       |
+----------------------------+------+--------+---------+-----------+
|desc.original.load_mnist    |0.78  |0.00    |0.00     |0.41       |
+----------------------------+------+--------+---------+-----------+
|desc.tools.test             |0.00  |0.00    |61.79    |0.07       |
+----------------------------+------+--------+---------+-----------+
|desc.tools.write            |0.00  |0.00    |0.81     |0.07       |
+----------------------------+------+--------+---------+-----------+
|desc.original.__init__      |0.00  |0.00    |0.00     |0.14       |
+----------------------------+------+--------+---------+-----------+
|desc.models.__init__        |0.00  |0.00    |0.00     |0.07       |
+----------------------------+------+--------+---------+-----------+
|desc.tools.downstream       |0.00  |0.00    |0.00     |0.03       |
+----------------------------+------+--------+---------+-----------+



Messages
--------

+-------------------------------+------------+
|message id                     |occurrences |
+===============================+============+
|bad-whitespace                 |1583        |
+-------------------------------+------------+
|bad-continuation               |332         |
+-------------------------------+------------+
|line-too-long                  |313         |
+-------------------------------+------------+
|trailing-whitespace            |233         |
+-------------------------------+------------+
|invalid-name                   |197         |
+-------------------------------+------------+
|import-error                   |115         |
+-------------------------------+------------+
|wrong-import-position          |109         |
+-------------------------------+------------+
|redefined-outer-name           |91          |
+-------------------------------+------------+
|duplicate-code                 |75          |
+-------------------------------+------------+
|missing-function-docstring     |67          |
+-------------------------------+------------+
|unused-wildcard-import         |58          |
+-------------------------------+------------+
|missing-module-docstring       |20          |
+-------------------------------+------------+
|ungrouped-imports              |14          |
+-------------------------------+------------+
|import-outside-toplevel        |14          |
+-------------------------------+------------+
|too-many-arguments             |12          |
+-------------------------------+------------+
|reimported                     |12          |
+-------------------------------+------------+
|trailing-newlines              |9           |
+-------------------------------+------------+
|too-many-locals                |9           |
+-------------------------------+------------+
|unused-variable                |8           |
+-------------------------------+------------+
|unused-argument                |8           |
+-------------------------------+------------+
|undefined-variable             |8           |
+-------------------------------+------------+
|useless-object-inheritance     |6           |
+-------------------------------+------------+
|too-many-instance-attributes   |6           |
+-------------------------------+------------+
|attribute-defined-outside-init |6           |
+-------------------------------+------------+
|protected-access               |5           |
+-------------------------------+------------+
|wildcard-import                |4           |
+-------------------------------+------------+
|too-many-statements            |4           |
+-------------------------------+------------+
|pointless-string-statement     |4           |
+-------------------------------+------------+
|no-member                      |4           |
+-------------------------------+------------+
|multiple-imports               |4           |
+-------------------------------+------------+
|missing-class-docstring        |4           |
+-------------------------------+------------+
|bare-except                    |4           |
+-------------------------------+------------+
|useless-return                 |3           |
+-------------------------------+------------+
|expression-not-assigned        |3           |
+-------------------------------+------------+
|consider-merging-isinstance    |3           |
+-------------------------------+------------+
|using-constant-test            |2           |
+-------------------------------+------------+
|multiple-statements            |2           |
+-------------------------------+------------+
|dangerous-default-value        |2           |
+-------------------------------+------------+
|bad-indentation                |2           |
+-------------------------------+------------+
|useless-super-delegation       |1           |
+-------------------------------+------------+
|useless-import-alias           |1           |
+-------------------------------+------------+
|unexpected-keyword-arg         |1           |
+-------------------------------+------------+
|trailing-comma-tuple           |1           |
+-------------------------------+------------+
|too-many-branches              |1           |
+-------------------------------+------------+
|redefined-builtin              |1           |
+-------------------------------+------------+
|raising-format-tuple           |1           |
+-------------------------------+------------+
|no-self-use                    |1           |
+-------------------------------+------------+
|consider-using-sys-exit        |1           |
+-------------------------------+------------+
|consider-using-in              |1           |
+-------------------------------+------------+




----------------------------------------------------------------------
Your code has been rated at -10.80/10 (previous run: -10.80/10, +0.00)

